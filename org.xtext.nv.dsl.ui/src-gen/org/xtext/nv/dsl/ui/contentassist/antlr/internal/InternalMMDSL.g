/*
* generated by Xtext
*/
grammar InternalMMDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.xtext.nv.dsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.nv.dsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.nv.dsl.services.MMDSLGrammarAccess;

}

@parser::members {
 
 	private MMDSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MMDSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleRoot
entryRuleRoot 
:
{ before(grammarAccess.getRootRule()); }
	 ruleRoot
{ after(grammarAccess.getRootRule()); } 
	 EOF 
;

// Rule Root
ruleRoot
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRootAccess().getGroup()); }
(rule__Root__Group__0)
{ after(grammarAccess.getRootAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodName
entryRuleMethodName 
:
{ before(grammarAccess.getMethodNameRule()); }
	 ruleMethodName
{ after(grammarAccess.getMethodNameRule()); } 
	 EOF 
;

// Rule MethodName
ruleMethodName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodNameAccess().getGroup()); }
(rule__MethodName__Group__0)
{ after(grammarAccess.getMethodNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIncludeLibrary
entryRuleIncludeLibrary 
:
{ before(grammarAccess.getIncludeLibraryRule()); }
	 ruleIncludeLibrary
{ after(grammarAccess.getIncludeLibraryRule()); } 
	 EOF 
;

// Rule IncludeLibrary
ruleIncludeLibrary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIncludeLibraryAccess().getGroup()); }
(rule__IncludeLibrary__Group__0)
{ after(grammarAccess.getIncludeLibraryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIncludeLibraryType
entryRuleIncludeLibraryType 
:
{ before(grammarAccess.getIncludeLibraryTypeRule()); }
	 ruleIncludeLibraryType
{ after(grammarAccess.getIncludeLibraryTypeRule()); } 
	 EOF 
;

// Rule IncludeLibraryType
ruleIncludeLibraryType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIncludeLibraryTypeAccess().getGroup()); }
(rule__IncludeLibraryType__Group__0)
{ after(grammarAccess.getIncludeLibraryTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEmbedCode
entryRuleEmbedCode 
:
{ before(grammarAccess.getEmbedCodeRule()); }
	 ruleEmbedCode
{ after(grammarAccess.getEmbedCodeRule()); } 
	 EOF 
;

// Rule EmbedCode
ruleEmbedCode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmbedCodeAccess().getGroup()); }
(rule__EmbedCode__Group__0)
{ after(grammarAccess.getEmbedCodeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEmbedPlatformType
entryRuleEmbedPlatformType 
:
{ before(grammarAccess.getEmbedPlatformTypeRule()); }
	 ruleEmbedPlatformType
{ after(grammarAccess.getEmbedPlatformTypeRule()); } 
	 EOF 
;

// Rule EmbedPlatformType
ruleEmbedPlatformType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmbedPlatformTypeAccess().getGroup()); }
(rule__EmbedPlatformType__Group__0)
{ after(grammarAccess.getEmbedPlatformTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEmbedCodeType
entryRuleEmbedCodeType 
:
{ before(grammarAccess.getEmbedCodeTypeRule()); }
	 ruleEmbedCodeType
{ after(grammarAccess.getEmbedCodeTypeRule()); } 
	 EOF 
;

// Rule EmbedCodeType
ruleEmbedCodeType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmbedCodeTypeAccess().getGroup()); }
(rule__EmbedCodeType__Group__0)
{ after(grammarAccess.getEmbedCodeTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInsertEmbedCode
entryRuleInsertEmbedCode 
:
{ before(grammarAccess.getInsertEmbedCodeRule()); }
	 ruleInsertEmbedCode
{ after(grammarAccess.getInsertEmbedCodeRule()); } 
	 EOF 
;

// Rule InsertEmbedCode
ruleInsertEmbedCode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInsertEmbedCodeAccess().getGroup()); }
(rule__InsertEmbedCode__Group__0)
{ after(grammarAccess.getInsertEmbedCodeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethod
entryRuleMethod 
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodAccess().getGroup()); }
(rule__Method__Group__0)
{ after(grammarAccess.getMethodAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumeration
entryRuleEnumeration 
:
{ before(grammarAccess.getEnumerationRule()); }
	 ruleEnumeration
{ after(grammarAccess.getEnumerationRule()); } 
	 EOF 
;

// Rule Enumeration
ruleEnumeration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumerationAccess().getGroup()); }
(rule__Enumeration__Group__0)
{ after(grammarAccess.getEnumerationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMetamodel
entryRuleMetamodel 
:
{ before(grammarAccess.getMetamodelRule()); }
	 ruleMetamodel
{ after(grammarAccess.getMetamodelRule()); } 
	 EOF 
;

// Rule Metamodel
ruleMetamodel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMetamodelAccess().getGroup()); }
(rule__Metamodel__Group__0)
{ after(grammarAccess.getMetamodelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClass
entryRuleClass 
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassAccess().getGroup()); }
(rule__Class__Group__0)
{ after(grammarAccess.getClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelation
entryRuleRelation 
:
{ before(grammarAccess.getRelationRule()); }
	 ruleRelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule Relation
ruleRelation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationAccess().getGroup()); }
(rule__Relation__Group__0)
{ after(grammarAccess.getRelationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getGroup()); }
(rule__Attribute__Group__0)
{ after(grammarAccess.getAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassAttribute
entryRuleClassAttribute 
:
{ before(grammarAccess.getClassAttributeRule()); }
	 ruleClassAttribute
{ after(grammarAccess.getClassAttributeRule()); } 
	 EOF 
;

// Rule ClassAttribute
ruleClassAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassAttributeAccess().getGroup()); }
(rule__ClassAttribute__Group__0)
{ after(grammarAccess.getClassAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReference
entryRuleReference 
:
{ before(grammarAccess.getReferenceRule()); }
	 ruleReference
{ after(grammarAccess.getReferenceRule()); } 
	 EOF 
;

// Rule Reference
ruleReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceAccess().getGroup()); }
(rule__Reference__Group__0)
{ after(grammarAccess.getReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRefName
entryRuleRefName 
:
{ before(grammarAccess.getRefNameRule()); }
	 ruleRefName
{ after(grammarAccess.getRefNameRule()); } 
	 EOF 
;

// Rule RefName
ruleRefName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRefNameAccess().getGroup()); }
(rule__RefName__Group__0)
{ after(grammarAccess.getRefNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumType
entryRuleEnumType 
:
{ before(grammarAccess.getEnumTypeRule()); }
	 ruleEnumType
{ after(grammarAccess.getEnumTypeRule()); } 
	 EOF 
;

// Rule EnumType
ruleEnumType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumTypeAccess().getGroup()); }
(rule__EnumType__Group__0)
{ after(grammarAccess.getEnumTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModelType
entryRuleModelType 
:
{ before(grammarAccess.getModelTypeRule()); }
	 ruleModelType
{ after(grammarAccess.getModelTypeRule()); } 
	 EOF 
;

// Rule ModelType
ruleModelType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelTypeAccess().getGroup()); }
(rule__ModelType__Group__0)
{ after(grammarAccess.getModelTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMode
entryRuleMode 
:
{ before(grammarAccess.getModeRule()); }
	 ruleMode
{ after(grammarAccess.getModeRule()); } 
	 EOF 
;

// Rule Mode
ruleMode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModeAccess().getGroup()); }
(rule__Mode__Group__0)
{ after(grammarAccess.getModeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSymbolClass
entryRuleSymbolClass 
:
{ before(grammarAccess.getSymbolClassRule()); }
	 ruleSymbolClass
{ after(grammarAccess.getSymbolClassRule()); } 
	 EOF 
;

// Rule SymbolClass
ruleSymbolClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSymbolClassAccess().getGroup()); }
(rule__SymbolClass__Group__0)
{ after(grammarAccess.getSymbolClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSymbolRelation
entryRuleSymbolRelation 
:
{ before(grammarAccess.getSymbolRelationRule()); }
	 ruleSymbolRelation
{ after(grammarAccess.getSymbolRelationRule()); } 
	 EOF 
;

// Rule SymbolRelation
ruleSymbolRelation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSymbolRelationAccess().getGroup()); }
(rule__SymbolRelation__Group__0)
{ after(grammarAccess.getSymbolRelationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSVGCommand
entryRuleSVGCommand 
:
{ before(grammarAccess.getSVGCommandRule()); }
	 ruleSVGCommand
{ after(grammarAccess.getSVGCommandRule()); } 
	 EOF 
;

// Rule SVGCommand
ruleSVGCommand
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSVGCommandAccess().getAlternatives()); }
(rule__SVGCommand__Alternatives)
{ after(grammarAccess.getSVGCommandAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRectangle
entryRuleRectangle 
:
{ before(grammarAccess.getRectangleRule()); }
	 ruleRectangle
{ after(grammarAccess.getRectangleRule()); } 
	 EOF 
;

// Rule Rectangle
ruleRectangle
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRectangleAccess().getGroup()); }
(rule__Rectangle__Group__0)
{ after(grammarAccess.getRectangleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCircle
entryRuleCircle 
:
{ before(grammarAccess.getCircleRule()); }
	 ruleCircle
{ after(grammarAccess.getCircleRule()); } 
	 EOF 
;

// Rule Circle
ruleCircle
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCircleAccess().getGroup()); }
(rule__Circle__Group__0)
{ after(grammarAccess.getCircleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEllipse
entryRuleEllipse 
:
{ before(grammarAccess.getEllipseRule()); }
	 ruleEllipse
{ after(grammarAccess.getEllipseRule()); } 
	 EOF 
;

// Rule Ellipse
ruleEllipse
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEllipseAccess().getGroup()); }
(rule__Ellipse__Group__0)
{ after(grammarAccess.getEllipseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLine
entryRuleLine 
:
{ before(grammarAccess.getLineRule()); }
	 ruleLine
{ after(grammarAccess.getLineRule()); } 
	 EOF 
;

// Rule Line
ruleLine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLineAccess().getGroup()); }
(rule__Line__Group__0)
{ after(grammarAccess.getLineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePolyline
entryRulePolyline 
:
{ before(grammarAccess.getPolylineRule()); }
	 rulePolyline
{ after(grammarAccess.getPolylineRule()); } 
	 EOF 
;

// Rule Polyline
rulePolyline
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPolylineAccess().getGroup()); }
(rule__Polyline__Group__0)
{ after(grammarAccess.getPolylineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePolygon
entryRulePolygon 
:
{ before(grammarAccess.getPolygonRule()); }
	 rulePolygon
{ after(grammarAccess.getPolygonRule()); } 
	 EOF 
;

// Rule Polygon
rulePolygon
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPolygonAccess().getGroup()); }
(rule__Polygon__Group__0)
{ after(grammarAccess.getPolygonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePath
entryRulePath 
:
{ before(grammarAccess.getPathRule()); }
	 rulePath
{ after(grammarAccess.getPathRule()); } 
	 EOF 
;

// Rule Path
rulePath
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPathAccess().getGroup()); }
(rule__Path__Group__0)
{ after(grammarAccess.getPathAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleText
entryRuleText 
:
{ before(grammarAccess.getTextRule()); }
	 ruleText
{ after(grammarAccess.getTextRule()); } 
	 EOF 
;

// Rule Text
ruleText
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTextAccess().getGroup()); }
(rule__Text__Group__0)
{ after(grammarAccess.getTextAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePathData
entryRulePathData 
:
{ before(grammarAccess.getPathDataRule()); }
	 rulePathData
{ after(grammarAccess.getPathDataRule()); } 
	 EOF 
;

// Rule PathData
rulePathData
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPathDataAccess().getAlternatives()); }
(rule__PathData__Alternatives)
{ after(grammarAccess.getPathDataAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMoveTo
entryRuleMoveTo 
:
{ before(grammarAccess.getMoveToRule()); }
	 ruleMoveTo
{ after(grammarAccess.getMoveToRule()); } 
	 EOF 
;

// Rule MoveTo
ruleMoveTo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMoveToAccess().getGroup()); }
(rule__MoveTo__Group__0)
{ after(grammarAccess.getMoveToAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLineTo
entryRuleLineTo 
:
{ before(grammarAccess.getLineToRule()); }
	 ruleLineTo
{ after(grammarAccess.getLineToRule()); } 
	 EOF 
;

// Rule LineTo
ruleLineTo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLineToAccess().getGroup()); }
(rule__LineTo__Group__0)
{ after(grammarAccess.getLineToAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHorizontalLineTo
entryRuleHorizontalLineTo 
:
{ before(grammarAccess.getHorizontalLineToRule()); }
	 ruleHorizontalLineTo
{ after(grammarAccess.getHorizontalLineToRule()); } 
	 EOF 
;

// Rule HorizontalLineTo
ruleHorizontalLineTo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHorizontalLineToAccess().getGroup()); }
(rule__HorizontalLineTo__Group__0)
{ after(grammarAccess.getHorizontalLineToAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVerticalLineTo
entryRuleVerticalLineTo 
:
{ before(grammarAccess.getVerticalLineToRule()); }
	 ruleVerticalLineTo
{ after(grammarAccess.getVerticalLineToRule()); } 
	 EOF 
;

// Rule VerticalLineTo
ruleVerticalLineTo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVerticalLineToAccess().getGroup()); }
(rule__VerticalLineTo__Group__0)
{ after(grammarAccess.getVerticalLineToAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCurveTo
entryRuleCurveTo 
:
{ before(grammarAccess.getCurveToRule()); }
	 ruleCurveTo
{ after(grammarAccess.getCurveToRule()); } 
	 EOF 
;

// Rule CurveTo
ruleCurveTo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCurveToAccess().getGroup()); }
(rule__CurveTo__Group__0)
{ after(grammarAccess.getCurveToAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSmoothCurveTo
entryRuleSmoothCurveTo 
:
{ before(grammarAccess.getSmoothCurveToRule()); }
	 ruleSmoothCurveTo
{ after(grammarAccess.getSmoothCurveToRule()); } 
	 EOF 
;

// Rule SmoothCurveTo
ruleSmoothCurveTo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSmoothCurveToAccess().getGroup()); }
(rule__SmoothCurveTo__Group__0)
{ after(grammarAccess.getSmoothCurveToAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQuadraticBezierCurve
entryRuleQuadraticBezierCurve 
:
{ before(grammarAccess.getQuadraticBezierCurveRule()); }
	 ruleQuadraticBezierCurve
{ after(grammarAccess.getQuadraticBezierCurveRule()); } 
	 EOF 
;

// Rule QuadraticBezierCurve
ruleQuadraticBezierCurve
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuadraticBezierCurveAccess().getGroup()); }
(rule__QuadraticBezierCurve__Group__0)
{ after(grammarAccess.getQuadraticBezierCurveAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSmoothQuadraticBezierCurveTo
entryRuleSmoothQuadraticBezierCurveTo 
:
{ before(grammarAccess.getSmoothQuadraticBezierCurveToRule()); }
	 ruleSmoothQuadraticBezierCurveTo
{ after(grammarAccess.getSmoothQuadraticBezierCurveToRule()); } 
	 EOF 
;

// Rule SmoothQuadraticBezierCurveTo
ruleSmoothQuadraticBezierCurveTo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSmoothQuadraticBezierCurveToAccess().getGroup()); }
(rule__SmoothQuadraticBezierCurveTo__Group__0)
{ after(grammarAccess.getSmoothQuadraticBezierCurveToAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEllipticalArc
entryRuleEllipticalArc 
:
{ before(grammarAccess.getEllipticalArcRule()); }
	 ruleEllipticalArc
{ after(grammarAccess.getEllipticalArcRule()); } 
	 EOF 
;

// Rule EllipticalArc
ruleEllipticalArc
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEllipticalArcAccess().getGroup()); }
(rule__EllipticalArc__Group__0)
{ after(grammarAccess.getEllipticalArcAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClosePath
entryRuleClosePath 
:
{ before(grammarAccess.getClosePathRule()); }
	 ruleClosePath
{ after(grammarAccess.getClosePathRule()); } 
	 EOF 
;

// Rule ClosePath
ruleClosePath
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClosePathAccess().getAlternatives()); }
(rule__ClosePath__Alternatives)
{ after(grammarAccess.getClosePathAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePoints
entryRulePoints 
:
{ before(grammarAccess.getPointsRule()); }
	 rulePoints
{ after(grammarAccess.getPointsRule()); } 
	 EOF 
;

// Rule Points
rulePoints
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPointsAccess().getGroup()); }
(rule__Points__Group__0)
{ after(grammarAccess.getPointsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePathParametersHV
entryRulePathParametersHV 
:
{ before(grammarAccess.getPathParametersHVRule()); }
	 rulePathParametersHV
{ after(grammarAccess.getPathParametersHVRule()); } 
	 EOF 
;

// Rule PathParametersHV
rulePathParametersHV
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPathParametersHVAccess().getXAssignment()); }
(rule__PathParametersHV__XAssignment)
{ after(grammarAccess.getPathParametersHVAccess().getXAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePathParametersMLT
entryRulePathParametersMLT 
:
{ before(grammarAccess.getPathParametersMLTRule()); }
	 rulePathParametersMLT
{ after(grammarAccess.getPathParametersMLTRule()); } 
	 EOF 
;

// Rule PathParametersMLT
rulePathParametersMLT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPathParametersMLTAccess().getGroup()); }
(rule__PathParametersMLT__Group__0)
{ after(grammarAccess.getPathParametersMLTAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePathParametersS
entryRulePathParametersS 
:
{ before(grammarAccess.getPathParametersSRule()); }
	 rulePathParametersS
{ after(grammarAccess.getPathParametersSRule()); } 
	 EOF 
;

// Rule PathParametersS
rulePathParametersS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPathParametersSAccess().getGroup()); }
(rule__PathParametersS__Group__0)
{ after(grammarAccess.getPathParametersSAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePathParametersQ
entryRulePathParametersQ 
:
{ before(grammarAccess.getPathParametersQRule()); }
	 rulePathParametersQ
{ after(grammarAccess.getPathParametersQRule()); } 
	 EOF 
;

// Rule PathParametersQ
rulePathParametersQ
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPathParametersQAccess().getGroup()); }
(rule__PathParametersQ__Group__0)
{ after(grammarAccess.getPathParametersQAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePathParametersC
entryRulePathParametersC 
:
{ before(grammarAccess.getPathParametersCRule()); }
	 rulePathParametersC
{ after(grammarAccess.getPathParametersCRule()); } 
	 EOF 
;

// Rule PathParametersC
rulePathParametersC
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPathParametersCAccess().getGroup()); }
(rule__PathParametersC__Group__0)
{ after(grammarAccess.getPathParametersCAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePathParametersA
entryRulePathParametersA 
:
{ before(grammarAccess.getPathParametersARule()); }
	 rulePathParametersA
{ after(grammarAccess.getPathParametersARule()); } 
	 EOF 
;

// Rule PathParametersA
rulePathParametersA
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPathParametersAAccess().getGroup()); }
(rule__PathParametersA__Group__0)
{ after(grammarAccess.getPathParametersAAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSymbolStyle
entryRuleSymbolStyle 
:
{ before(grammarAccess.getSymbolStyleRule()); }
	 ruleSymbolStyle
{ after(grammarAccess.getSymbolStyleRule()); } 
	 EOF 
;

// Rule SymbolStyle
ruleSymbolStyle
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSymbolStyleAccess().getGroup()); }
(rule__SymbolStyle__Group__0)
{ after(grammarAccess.getSymbolStyleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFillColor
entryRuleFillColor 
:
{ before(grammarAccess.getFillColorRule()); }
	 ruleFillColor
{ after(grammarAccess.getFillColorRule()); } 
	 EOF 
;

// Rule FillColor
ruleFillColor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFillColorAccess().getAlternatives()); }
(rule__FillColor__Alternatives)
{ after(grammarAccess.getFillColorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStrokeColor
entryRuleStrokeColor 
:
{ before(grammarAccess.getStrokeColorRule()); }
	 ruleStrokeColor
{ after(grammarAccess.getStrokeColorRule()); } 
	 EOF 
;

// Rule StrokeColor
ruleStrokeColor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStrokeColorAccess().getAlternatives()); }
(rule__StrokeColor__Alternatives)
{ after(grammarAccess.getStrokeColorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStrokeWidth
entryRuleStrokeWidth 
:
{ before(grammarAccess.getStrokeWidthRule()); }
	 ruleStrokeWidth
{ after(grammarAccess.getStrokeWidthRule()); } 
	 EOF 
;

// Rule StrokeWidth
ruleStrokeWidth
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStrokeWidthAccess().getNumberParserRuleCall()); }
	ruleNumber
{ after(grammarAccess.getStrokeWidthAccess().getNumberParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFontFamily
entryRuleFontFamily 
:
{ before(grammarAccess.getFontFamilyRule()); }
	 ruleFontFamily
{ after(grammarAccess.getFontFamilyRule()); } 
	 EOF 
;

// Rule FontFamily
ruleFontFamily
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFontFamilyAccess().getAlternatives()); }
(rule__FontFamily__Alternatives)
{ after(grammarAccess.getFontFamilyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFontSize
entryRuleFontSize 
:
{ before(grammarAccess.getFontSizeRule()); }
	 ruleFontSize
{ after(grammarAccess.getFontSizeRule()); } 
	 EOF 
;

// Rule FontSize
ruleFontSize
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFontSizeAccess().getNumberParserRuleCall()); }
	ruleNumber
{ after(grammarAccess.getFontSizeAccess().getNumberParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAlgorithm
entryRuleAlgorithm 
:
{ before(grammarAccess.getAlgorithmRule()); }
	 ruleAlgorithm
{ after(grammarAccess.getAlgorithmRule()); } 
	 EOF 
;

// Rule Algorithm
ruleAlgorithm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAlgorithmAccess().getGroup()); }
(rule__Algorithm__Group__0)
{ after(grammarAccess.getAlgorithmAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelectionStatement
entryRuleSelectionStatement 
:
{ before(grammarAccess.getSelectionStatementRule()); }
	 ruleSelectionStatement
{ after(grammarAccess.getSelectionStatementRule()); } 
	 EOF 
;

// Rule SelectionStatement
ruleSelectionStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectionStatementAccess().getGroup()); }
(rule__SelectionStatement__Group__0)
{ after(grammarAccess.getSelectionStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLoopStatement
entryRuleLoopStatement 
:
{ before(grammarAccess.getLoopStatementRule()); }
	 ruleLoopStatement
{ after(grammarAccess.getLoopStatementRule()); } 
	 EOF 
;

// Rule LoopStatement
ruleLoopStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLoopStatementAccess().getAlternatives()); }
(rule__LoopStatement__Alternatives)
{ after(grammarAccess.getLoopStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhileLoop
entryRuleWhileLoop 
:
{ before(grammarAccess.getWhileLoopRule()); }
	 ruleWhileLoop
{ after(grammarAccess.getWhileLoopRule()); } 
	 EOF 
;

// Rule WhileLoop
ruleWhileLoop
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhileLoopAccess().getGroup()); }
(rule__WhileLoop__Group__0)
{ after(grammarAccess.getWhileLoopAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForLoop
entryRuleForLoop 
:
{ before(grammarAccess.getForLoopRule()); }
	 ruleForLoop
{ after(grammarAccess.getForLoopRule()); } 
	 EOF 
;

// Rule ForLoop
ruleForLoop
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForLoopAccess().getGroup()); }
(rule__ForLoop__Group__0)
{ after(grammarAccess.getForLoopAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBreakContinue
entryRuleBreakContinue 
:
{ before(grammarAccess.getBreakContinueRule()); }
	 ruleBreakContinue
{ after(grammarAccess.getBreakContinueRule()); } 
	 EOF 
;

// Rule BreakContinue
ruleBreakContinue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBreakContinueAccess().getAlternatives()); }
(rule__BreakContinue__Alternatives)
{ after(grammarAccess.getBreakContinueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getAlternatives()); }
(rule__Variable__Alternatives)
{ after(grammarAccess.getVariableAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarStatement
entryRuleVarStatement 
:
{ before(grammarAccess.getVarStatementRule()); }
	 ruleVarStatement
{ after(grammarAccess.getVarStatementRule()); } 
	 EOF 
;

// Rule VarStatement
ruleVarStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarStatementAccess().getAlternatives()); }
(rule__VarStatement__Alternatives)
{ after(grammarAccess.getVarStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperatorAssign
entryRuleOperatorAssign 
:
{ before(grammarAccess.getOperatorAssignRule()); }
	 ruleOperatorAssign
{ after(grammarAccess.getOperatorAssignRule()); } 
	 EOF 
;

// Rule OperatorAssign
ruleOperatorAssign
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperatorAssignAccess().getAlternatives()); }
(rule__OperatorAssign__Alternatives)
{ after(grammarAccess.getOperatorAssignAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperatorMultyAssign
entryRuleOperatorMultyAssign 
:
{ before(grammarAccess.getOperatorMultyAssignRule()); }
	 ruleOperatorMultyAssign
{ after(grammarAccess.getOperatorMultyAssignRule()); } 
	 EOF 
;

// Rule OperatorMultyAssign
ruleOperatorMultyAssign
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperatorMultyAssignAccess().getAlternatives()); }
(rule__OperatorMultyAssign__Alternatives)
{ after(grammarAccess.getOperatorMultyAssignAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperatorUnary
entryRuleOperatorUnary 
:
{ before(grammarAccess.getOperatorUnaryRule()); }
	 ruleOperatorUnary
{ after(grammarAccess.getOperatorUnaryRule()); } 
	 EOF 
;

// Rule OperatorUnary
ruleOperatorUnary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperatorUnaryAccess().getNotAssignment()); }
(rule__OperatorUnary__NotAssignment)
{ after(grammarAccess.getOperatorUnaryAccess().getNotAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperatorMultiply
entryRuleOperatorMultiply 
:
{ before(grammarAccess.getOperatorMultiplyRule()); }
	 ruleOperatorMultiply
{ after(grammarAccess.getOperatorMultiplyRule()); } 
	 EOF 
;

// Rule OperatorMultiply
ruleOperatorMultiply
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperatorMultiplyAccess().getAlternatives()); }
(rule__OperatorMultiply__Alternatives)
{ after(grammarAccess.getOperatorMultiplyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperatorAdd
entryRuleOperatorAdd 
:
{ before(grammarAccess.getOperatorAddRule()); }
	 ruleOperatorAdd
{ after(grammarAccess.getOperatorAddRule()); } 
	 EOF 
;

// Rule OperatorAdd
ruleOperatorAdd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperatorAddAccess().getAlternatives()); }
(rule__OperatorAdd__Alternatives)
{ after(grammarAccess.getOperatorAddAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperatorCompare
entryRuleOperatorCompare 
:
{ before(grammarAccess.getOperatorCompareRule()); }
	 ruleOperatorCompare
{ after(grammarAccess.getOperatorCompareRule()); } 
	 EOF 
;

// Rule OperatorCompare
ruleOperatorCompare
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperatorCompareAccess().getAlternatives()); }
(rule__OperatorCompare__Alternatives)
{ after(grammarAccess.getOperatorCompareAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperatorEqual
entryRuleOperatorEqual 
:
{ before(grammarAccess.getOperatorEqualRule()); }
	 ruleOperatorEqual
{ after(grammarAccess.getOperatorEqualRule()); } 
	 EOF 
;

// Rule OperatorEqual
ruleOperatorEqual
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperatorEqualAccess().getAlternatives()); }
(rule__OperatorEqual__Alternatives)
{ after(grammarAccess.getOperatorEqualAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperatorAnd
entryRuleOperatorAnd 
:
{ before(grammarAccess.getOperatorAndRule()); }
	 ruleOperatorAnd
{ after(grammarAccess.getOperatorAndRule()); } 
	 EOF 
;

// Rule OperatorAnd
ruleOperatorAnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperatorAndAccess().getAndAssignment()); }
(rule__OperatorAnd__AndAssignment)
{ after(grammarAccess.getOperatorAndAccess().getAndAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperatorOr
entryRuleOperatorOr 
:
{ before(grammarAccess.getOperatorOrRule()); }
	 ruleOperatorOr
{ after(grammarAccess.getOperatorOrRule()); } 
	 EOF 
;

// Rule OperatorOr
ruleOperatorOr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperatorOrAccess().getOrAssignment()); }
(rule__OperatorOr__OrAssignment)
{ after(grammarAccess.getOperatorOrAccess().getOrAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpr
entryRuleExpr 
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprAccess().getExprAssignment()); }
(rule__Expr__ExprAssignment)
{ after(grammarAccess.getExprAccess().getExprAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExpression
entryRuleOrExpression 
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
(rule__OrExpression__Group__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpression
entryRuleAndExpression 
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
(rule__AndExpression__Group__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEqualExpression
entryRuleEqualExpression 
:
{ before(grammarAccess.getEqualExpressionRule()); }
	 ruleEqualExpression
{ after(grammarAccess.getEqualExpressionRule()); } 
	 EOF 
;

// Rule EqualExpression
ruleEqualExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEqualExpressionAccess().getGroup()); }
(rule__EqualExpression__Group__0)
{ after(grammarAccess.getEqualExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompareExpression
entryRuleCompareExpression 
:
{ before(grammarAccess.getCompareExpressionRule()); }
	 ruleCompareExpression
{ after(grammarAccess.getCompareExpressionRule()); } 
	 EOF 
;

// Rule CompareExpression
ruleCompareExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompareExpressionAccess().getGroup()); }
(rule__CompareExpression__Group__0)
{ after(grammarAccess.getCompareExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditionExpression
entryRuleAdditionExpression 
:
{ before(grammarAccess.getAdditionExpressionRule()); }
	 ruleAdditionExpression
{ after(grammarAccess.getAdditionExpressionRule()); } 
	 EOF 
;

// Rule AdditionExpression
ruleAdditionExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditionExpressionAccess().getGroup()); }
(rule__AdditionExpression__Group__0)
{ after(grammarAccess.getAdditionExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicationExpression
entryRuleMultiplicationExpression 
:
{ before(grammarAccess.getMultiplicationExpressionRule()); }
	 ruleMultiplicationExpression
{ after(grammarAccess.getMultiplicationExpressionRule()); } 
	 EOF 
;

// Rule MultiplicationExpression
ruleMultiplicationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicationExpressionAccess().getGroup()); }
(rule__MultiplicationExpression__Group__0)
{ after(grammarAccess.getMultiplicationExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression 
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup()); }
(rule__UnaryExpression__Group__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicExpression
entryRuleAtomicExpression 
:
{ before(grammarAccess.getAtomicExpressionRule()); }
	 ruleAtomicExpression
{ after(grammarAccess.getAtomicExpressionRule()); } 
	 EOF 
;

// Rule AtomicExpression
ruleAtomicExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicExpressionAccess().getAlternatives()); }
(rule__AtomicExpression__Alternatives)
{ after(grammarAccess.getAtomicExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAlgorithmOperation
entryRuleAlgorithmOperation 
:
{ before(grammarAccess.getAlgorithmOperationRule()); }
	 ruleAlgorithmOperation
{ after(grammarAccess.getAlgorithmOperationRule()); } 
	 EOF 
;

// Rule AlgorithmOperation
ruleAlgorithmOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAlgorithmOperationAccess().getAlternatives()); }
(rule__AlgorithmOperation__Alternatives)
{ after(grammarAccess.getAlgorithmOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFileOperation
entryRuleFileOperation 
:
{ before(grammarAccess.getFileOperationRule()); }
	 ruleFileOperation
{ after(grammarAccess.getFileOperationRule()); } 
	 EOF 
;

// Rule FileOperation
ruleFileOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFileOperationAccess().getGroup()); }
(rule__FileOperation__Group__0)
{ after(grammarAccess.getFileOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFileCopy
entryRuleFileCopy 
:
{ before(grammarAccess.getFileCopyRule()); }
	 ruleFileCopy
{ after(grammarAccess.getFileCopyRule()); } 
	 EOF 
;

// Rule FileCopy
ruleFileCopy
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFileCopyAccess().getGroup()); }
(rule__FileCopy__Group__0)
{ after(grammarAccess.getFileCopyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFileDelete
entryRuleFileDelete 
:
{ before(grammarAccess.getFileDeleteRule()); }
	 ruleFileDelete
{ after(grammarAccess.getFileDeleteRule()); } 
	 EOF 
;

// Rule FileDelete
ruleFileDelete
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFileDeleteAccess().getGroup()); }
(rule__FileDelete__Group__0)
{ after(grammarAccess.getFileDeleteAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFileCreate
entryRuleFileCreate 
:
{ before(grammarAccess.getFileCreateRule()); }
	 ruleFileCreate
{ after(grammarAccess.getFileCreateRule()); } 
	 EOF 
;

// Rule FileCreate
ruleFileCreate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFileCreateAccess().getGroup()); }
(rule__FileCreate__Group__0)
{ after(grammarAccess.getFileCreateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFileRead
entryRuleFileRead 
:
{ before(grammarAccess.getFileReadRule()); }
	 ruleFileRead
{ after(grammarAccess.getFileReadRule()); } 
	 EOF 
;

// Rule FileRead
ruleFileRead
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFileReadAccess().getGroup()); }
(rule__FileRead__Group__0)
{ after(grammarAccess.getFileReadAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFileWrite
entryRuleFileWrite 
:
{ before(grammarAccess.getFileWriteRule()); }
	 ruleFileWrite
{ after(grammarAccess.getFileWriteRule()); } 
	 EOF 
;

// Rule FileWrite
ruleFileWrite
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFileWriteAccess().getGroup()); }
(rule__FileWrite__Group__0)
{ after(grammarAccess.getFileWriteAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDirOperation
entryRuleDirOperation 
:
{ before(grammarAccess.getDirOperationRule()); }
	 ruleDirOperation
{ after(grammarAccess.getDirOperationRule()); } 
	 EOF 
;

// Rule DirOperation
ruleDirOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDirOperationAccess().getGroup()); }
(rule__DirOperation__Group__0)
{ after(grammarAccess.getDirOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDirSetWorking
entryRuleDirSetWorking 
:
{ before(grammarAccess.getDirSetWorkingRule()); }
	 ruleDirSetWorking
{ after(grammarAccess.getDirSetWorkingRule()); } 
	 EOF 
;

// Rule DirSetWorking
ruleDirSetWorking
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDirSetWorkingAccess().getGroup()); }
(rule__DirSetWorking__Group__0)
{ after(grammarAccess.getDirSetWorkingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDirGetWorking
entryRuleDirGetWorking 
:
{ before(grammarAccess.getDirGetWorkingRule()); }
	 ruleDirGetWorking
{ after(grammarAccess.getDirGetWorkingRule()); } 
	 EOF 
;

// Rule DirGetWorking
ruleDirGetWorking
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDirGetWorkingAccess().getGroup()); }
(rule__DirGetWorking__Group__0)
{ after(grammarAccess.getDirGetWorkingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDirCreate
entryRuleDirCreate 
:
{ before(grammarAccess.getDirCreateRule()); }
	 ruleDirCreate
{ after(grammarAccess.getDirCreateRule()); } 
	 EOF 
;

// Rule DirCreate
ruleDirCreate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDirCreateAccess().getGroup()); }
(rule__DirCreate__Group__0)
{ after(grammarAccess.getDirCreateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDirDelete
entryRuleDirDelete 
:
{ before(grammarAccess.getDirDeleteRule()); }
	 ruleDirDelete
{ after(grammarAccess.getDirDeleteRule()); } 
	 EOF 
;

// Rule DirDelete
ruleDirDelete
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDirDeleteAccess().getGroup()); }
(rule__DirDelete__Group__0)
{ after(grammarAccess.getDirDeleteAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDirList
entryRuleDirList 
:
{ before(grammarAccess.getDirListRule()); }
	 ruleDirList
{ after(grammarAccess.getDirListRule()); } 
	 EOF 
;

// Rule DirList
ruleDirList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDirListAccess().getGroup()); }
(rule__DirList__Group__0)
{ after(grammarAccess.getDirListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleUI
entryRuleSimpleUI 
:
{ before(grammarAccess.getSimpleUIRule()); }
	 ruleSimpleUI
{ after(grammarAccess.getSimpleUIRule()); } 
	 EOF 
;

// Rule SimpleUI
ruleSimpleUI
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleUIAccess().getGroup()); }
(rule__SimpleUI__Group__0)
{ after(grammarAccess.getSimpleUIAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEditBox
entryRuleEditBox 
:
{ before(grammarAccess.getEditBoxRule()); }
	 ruleEditBox
{ after(grammarAccess.getEditBoxRule()); } 
	 EOF 
;

// Rule EditBox
ruleEditBox
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEditBoxAccess().getGroup()); }
(rule__EditBox__Group__0)
{ after(grammarAccess.getEditBoxAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInfoBox
entryRuleInfoBox 
:
{ before(grammarAccess.getInfoBoxRule()); }
	 ruleInfoBox
{ after(grammarAccess.getInfoBoxRule()); } 
	 EOF 
;

// Rule InfoBox
ruleInfoBox
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInfoBoxAccess().getGroup()); }
(rule__InfoBox__Group__0)
{ after(grammarAccess.getInfoBoxAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleErrorBox
entryRuleErrorBox 
:
{ before(grammarAccess.getErrorBoxRule()); }
	 ruleErrorBox
{ after(grammarAccess.getErrorBoxRule()); } 
	 EOF 
;

// Rule ErrorBox
ruleErrorBox
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getErrorBoxAccess().getGroup()); }
(rule__ErrorBox__Group__0)
{ after(grammarAccess.getErrorBoxAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWarningBox
entryRuleWarningBox 
:
{ before(grammarAccess.getWarningBoxRule()); }
	 ruleWarningBox
{ after(grammarAccess.getWarningBoxRule()); } 
	 EOF 
;

// Rule WarningBox
ruleWarningBox
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWarningBoxAccess().getGroup()); }
(rule__WarningBox__Group__0)
{ after(grammarAccess.getWarningBoxAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleViewBox
entryRuleViewBox 
:
{ before(grammarAccess.getViewBoxRule()); }
	 ruleViewBox
{ after(grammarAccess.getViewBoxRule()); } 
	 EOF 
;

// Rule ViewBox
ruleViewBox
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getViewBoxAccess().getGroup()); }
(rule__ViewBox__Group__0)
{ after(grammarAccess.getViewBoxAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleItemOperation
entryRuleItemOperation 
:
{ before(grammarAccess.getItemOperationRule()); }
	 ruleItemOperation
{ after(grammarAccess.getItemOperationRule()); } 
	 EOF 
;

// Rule ItemOperation
ruleItemOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getItemOperationAccess().getGroup()); }
(rule__ItemOperation__Group__0)
{ after(grammarAccess.getItemOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMenuItem
entryRuleMenuItem 
:
{ before(grammarAccess.getMenuItemRule()); }
	 ruleMenuItem
{ after(grammarAccess.getMenuItemRule()); } 
	 EOF 
;

// Rule MenuItem
ruleMenuItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMenuItemAccess().getGroup()); }
(rule__MenuItem__Group__0)
{ after(grammarAccess.getMenuItemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInsertMenuItem
entryRuleInsertMenuItem 
:
{ before(grammarAccess.getInsertMenuItemRule()); }
	 ruleInsertMenuItem
{ after(grammarAccess.getInsertMenuItemRule()); } 
	 EOF 
;

// Rule InsertMenuItem
ruleInsertMenuItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInsertMenuItemAccess().getGroup()); }
(rule__InsertMenuItem__Group__0)
{ after(grammarAccess.getInsertMenuItemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRemoveMenuItem
entryRuleRemoveMenuItem 
:
{ before(grammarAccess.getRemoveMenuItemRule()); }
	 ruleRemoveMenuItem
{ after(grammarAccess.getRemoveMenuItemRule()); } 
	 EOF 
;

// Rule RemoveMenuItem
ruleRemoveMenuItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRemoveMenuItemAccess().getGroup()); }
(rule__RemoveMenuItem__Group__0)
{ after(grammarAccess.getRemoveMenuItemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContextItem
entryRuleContextItem 
:
{ before(grammarAccess.getContextItemRule()); }
	 ruleContextItem
{ after(grammarAccess.getContextItemRule()); } 
	 EOF 
;

// Rule ContextItem
ruleContextItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContextItemAccess().getGroup()); }
(rule__ContextItem__Group__0)
{ after(grammarAccess.getContextItemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInsertContextItem
entryRuleInsertContextItem 
:
{ before(grammarAccess.getInsertContextItemRule()); }
	 ruleInsertContextItem
{ after(grammarAccess.getInsertContextItemRule()); } 
	 EOF 
;

// Rule InsertContextItem
ruleInsertContextItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInsertContextItemAccess().getGroup()); }
(rule__InsertContextItem__Group__0)
{ after(grammarAccess.getInsertContextItemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRemoveContextItem
entryRuleRemoveContextItem 
:
{ before(grammarAccess.getRemoveContextItemRule()); }
	 ruleRemoveContextItem
{ after(grammarAccess.getRemoveContextItemRule()); } 
	 EOF 
;

// Rule RemoveContextItem
ruleRemoveContextItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRemoveContextItemAccess().getGroup()); }
(rule__RemoveContextItem__Group__0)
{ after(grammarAccess.getRemoveContextItemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModelOperation
entryRuleModelOperation 
:
{ before(grammarAccess.getModelOperationRule()); }
	 ruleModelOperation
{ after(grammarAccess.getModelOperationRule()); } 
	 EOF 
;

// Rule ModelOperation
ruleModelOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelOperationAccess().getGroup()); }
(rule__ModelOperation__Group__0)
{ after(grammarAccess.getModelOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModelCreate
entryRuleModelCreate 
:
{ before(grammarAccess.getModelCreateRule()); }
	 ruleModelCreate
{ after(grammarAccess.getModelCreateRule()); } 
	 EOF 
;

// Rule ModelCreate
ruleModelCreate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelCreateAccess().getGroup()); }
(rule__ModelCreate__Group__0)
{ after(grammarAccess.getModelCreateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModelDelete
entryRuleModelDelete 
:
{ before(grammarAccess.getModelDeleteRule()); }
	 ruleModelDelete
{ after(grammarAccess.getModelDeleteRule()); } 
	 EOF 
;

// Rule ModelDelete
ruleModelDelete
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelDeleteAccess().getGroup()); }
(rule__ModelDelete__Group__0)
{ after(grammarAccess.getModelDeleteAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModelDiscard
entryRuleModelDiscard 
:
{ before(grammarAccess.getModelDiscardRule()); }
	 ruleModelDiscard
{ after(grammarAccess.getModelDiscardRule()); } 
	 EOF 
;

// Rule ModelDiscard
ruleModelDiscard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelDiscardAccess().getGroup()); }
(rule__ModelDiscard__Group__0)
{ after(grammarAccess.getModelDiscardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModelSave
entryRuleModelSave 
:
{ before(grammarAccess.getModelSaveRule()); }
	 ruleModelSave
{ after(grammarAccess.getModelSaveRule()); } 
	 EOF 
;

// Rule ModelSave
ruleModelSave
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelSaveAccess().getGroup()); }
(rule__ModelSave__Group__0)
{ after(grammarAccess.getModelSaveAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModelLoad
entryRuleModelLoad 
:
{ before(grammarAccess.getModelLoadRule()); }
	 ruleModelLoad
{ after(grammarAccess.getModelLoadRule()); } 
	 EOF 
;

// Rule ModelLoad
ruleModelLoad
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelLoadAccess().getGroup()); }
(rule__ModelLoad__Group__0)
{ after(grammarAccess.getModelLoadAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModelIsLoaded
entryRuleModelIsLoaded 
:
{ before(grammarAccess.getModelIsLoadedRule()); }
	 ruleModelIsLoaded
{ after(grammarAccess.getModelIsLoadedRule()); } 
	 EOF 
;

// Rule ModelIsLoaded
ruleModelIsLoaded
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelIsLoadedAccess().getGroup()); }
(rule__ModelIsLoaded__Group__0)
{ after(grammarAccess.getModelIsLoadedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstanceOperation
entryRuleInstanceOperation 
:
{ before(grammarAccess.getInstanceOperationRule()); }
	 ruleInstanceOperation
{ after(grammarAccess.getInstanceOperationRule()); } 
	 EOF 
;

// Rule InstanceOperation
ruleInstanceOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstanceOperationAccess().getGroup()); }
(rule__InstanceOperation__Group__0)
{ after(grammarAccess.getInstanceOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassInstance
entryRuleClassInstance 
:
{ before(grammarAccess.getClassInstanceRule()); }
	 ruleClassInstance
{ after(grammarAccess.getClassInstanceRule()); } 
	 EOF 
;

// Rule ClassInstance
ruleClassInstance
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassInstanceAccess().getGroup()); }
(rule__ClassInstance__Group__0)
{ after(grammarAccess.getClassInstanceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassInstanceCreate
entryRuleClassInstanceCreate 
:
{ before(grammarAccess.getClassInstanceCreateRule()); }
	 ruleClassInstanceCreate
{ after(grammarAccess.getClassInstanceCreateRule()); } 
	 EOF 
;

// Rule ClassInstanceCreate
ruleClassInstanceCreate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassInstanceCreateAccess().getGroup()); }
(rule__ClassInstanceCreate__Group__0)
{ after(grammarAccess.getClassInstanceCreateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassInstanceDelete
entryRuleClassInstanceDelete 
:
{ before(grammarAccess.getClassInstanceDeleteRule()); }
	 ruleClassInstanceDelete
{ after(grammarAccess.getClassInstanceDeleteRule()); } 
	 EOF 
;

// Rule ClassInstanceDelete
ruleClassInstanceDelete
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassInstanceDeleteAccess().getGroup()); }
(rule__ClassInstanceDelete__Group__0)
{ after(grammarAccess.getClassInstanceDeleteAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassInstanceGet
entryRuleClassInstanceGet 
:
{ before(grammarAccess.getClassInstanceGetRule()); }
	 ruleClassInstanceGet
{ after(grammarAccess.getClassInstanceGetRule()); } 
	 EOF 
;

// Rule ClassInstanceGet
ruleClassInstanceGet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassInstanceGetAccess().getGroup()); }
(rule__ClassInstanceGet__Group__0)
{ after(grammarAccess.getClassInstanceGetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassInstanceGetAll
entryRuleClassInstanceGetAll 
:
{ before(grammarAccess.getClassInstanceGetAllRule()); }
	 ruleClassInstanceGetAll
{ after(grammarAccess.getClassInstanceGetAllRule()); } 
	 EOF 
;

// Rule ClassInstanceGetAll
ruleClassInstanceGetAll
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassInstanceGetAllAccess().getGroup()); }
(rule__ClassInstanceGetAll__Group__0)
{ after(grammarAccess.getClassInstanceGetAllAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassInstanceSet
entryRuleClassInstanceSet 
:
{ before(grammarAccess.getClassInstanceSetRule()); }
	 ruleClassInstanceSet
{ after(grammarAccess.getClassInstanceSetRule()); } 
	 EOF 
;

// Rule ClassInstanceSet
ruleClassInstanceSet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassInstanceSetAccess().getGroup()); }
(rule__ClassInstanceSet__Group__0)
{ after(grammarAccess.getClassInstanceSetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationInstance
entryRuleRelationInstance 
:
{ before(grammarAccess.getRelationInstanceRule()); }
	 ruleRelationInstance
{ after(grammarAccess.getRelationInstanceRule()); } 
	 EOF 
;

// Rule RelationInstance
ruleRelationInstance
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationInstanceAccess().getGroup()); }
(rule__RelationInstance__Group__0)
{ after(grammarAccess.getRelationInstanceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationInstanceCreate
entryRuleRelationInstanceCreate 
:
{ before(grammarAccess.getRelationInstanceCreateRule()); }
	 ruleRelationInstanceCreate
{ after(grammarAccess.getRelationInstanceCreateRule()); } 
	 EOF 
;

// Rule RelationInstanceCreate
ruleRelationInstanceCreate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationInstanceCreateAccess().getGroup()); }
(rule__RelationInstanceCreate__Group__0)
{ after(grammarAccess.getRelationInstanceCreateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationInstanceDelete
entryRuleRelationInstanceDelete 
:
{ before(grammarAccess.getRelationInstanceDeleteRule()); }
	 ruleRelationInstanceDelete
{ after(grammarAccess.getRelationInstanceDeleteRule()); } 
	 EOF 
;

// Rule RelationInstanceDelete
ruleRelationInstanceDelete
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationInstanceDeleteAccess().getGroup()); }
(rule__RelationInstanceDelete__Group__0)
{ after(grammarAccess.getRelationInstanceDeleteAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationInstanceGet
entryRuleRelationInstanceGet 
:
{ before(grammarAccess.getRelationInstanceGetRule()); }
	 ruleRelationInstanceGet
{ after(grammarAccess.getRelationInstanceGetRule()); } 
	 EOF 
;

// Rule RelationInstanceGet
ruleRelationInstanceGet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationInstanceGetAccess().getGroup()); }
(rule__RelationInstanceGet__Group__0)
{ after(grammarAccess.getRelationInstanceGetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationInstanceGetAll
entryRuleRelationInstanceGetAll 
:
{ before(grammarAccess.getRelationInstanceGetAllRule()); }
	 ruleRelationInstanceGetAll
{ after(grammarAccess.getRelationInstanceGetAllRule()); } 
	 EOF 
;

// Rule RelationInstanceGetAll
ruleRelationInstanceGetAll
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationInstanceGetAllAccess().getGroup()); }
(rule__RelationInstanceGetAll__Group__0)
{ after(grammarAccess.getRelationInstanceGetAllAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationInstanceSet
entryRuleRelationInstanceSet 
:
{ before(grammarAccess.getRelationInstanceSetRule()); }
	 ruleRelationInstanceSet
{ after(grammarAccess.getRelationInstanceSetRule()); } 
	 EOF 
;

// Rule RelationInstanceSet
ruleRelationInstanceSet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationInstanceSetAccess().getGroup()); }
(rule__RelationInstanceSet__Group__0)
{ after(grammarAccess.getRelationInstanceSetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeOperation
entryRuleAttributeOperation 
:
{ before(grammarAccess.getAttributeOperationRule()); }
	 ruleAttributeOperation
{ after(grammarAccess.getAttributeOperationRule()); } 
	 EOF 
;

// Rule AttributeOperation
ruleAttributeOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeOperationAccess().getGroup()); }
(rule__AttributeOperation__Group__0)
{ after(grammarAccess.getAttributeOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeGet
entryRuleAttributeGet 
:
{ before(grammarAccess.getAttributeGetRule()); }
	 ruleAttributeGet
{ after(grammarAccess.getAttributeGetRule()); } 
	 EOF 
;

// Rule AttributeGet
ruleAttributeGet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeGetAccess().getGroup()); }
(rule__AttributeGet__Group__0)
{ after(grammarAccess.getAttributeGetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeSet
entryRuleAttributeSet 
:
{ before(grammarAccess.getAttributeSetRule()); }
	 ruleAttributeSet
{ after(grammarAccess.getAttributeSetRule()); } 
	 EOF 
;

// Rule AttributeSet
ruleAttributeSet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeSetAccess().getGroup()); }
(rule__AttributeSet__Group__0)
{ after(grammarAccess.getAttributeSetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEvent
entryRuleEvent 
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventAccess().getGroup()); }
(rule__Event__Group__0)
{ after(grammarAccess.getEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRealNumber
entryRuleRealNumber 
:
{ before(grammarAccess.getRealNumberRule()); }
	 ruleRealNumber
{ after(grammarAccess.getRealNumberRule()); } 
	 EOF 
;

// Rule RealNumber
ruleRealNumber
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRealNumberAccess().getGroup()); }
(rule__RealNumber__Group__0)
{ after(grammarAccess.getRealNumberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpression
entryRuleXExpression 
:
{ before(grammarAccess.getXExpressionRule()); }
	 ruleXExpression
{ after(grammarAccess.getXExpressionRule()); } 
	 EOF 
;

// Rule XExpression
ruleXExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall()); }
	ruleXAssignment
{ after(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXAssignment
entryRuleXAssignment 
:
{ before(grammarAccess.getXAssignmentRule()); }
	 ruleXAssignment
{ after(grammarAccess.getXAssignmentRule()); } 
	 EOF 
;

// Rule XAssignment
ruleXAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXAssignmentAccess().getAlternatives()); }
(rule__XAssignment__Alternatives)
{ after(grammarAccess.getXAssignmentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpSingleAssign
entryRuleOpSingleAssign 
:
{ before(grammarAccess.getOpSingleAssignRule()); }
	 ruleOpSingleAssign
{ after(grammarAccess.getOpSingleAssignRule()); } 
	 EOF 
;

// Rule OpSingleAssign
ruleOpSingleAssign
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); }

	'=' 

{ after(grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpMultiAssign
entryRuleOpMultiAssign 
:
{ before(grammarAccess.getOpMultiAssignRule()); }
	 ruleOpMultiAssign
{ after(grammarAccess.getOpMultiAssignRule()); } 
	 EOF 
;

// Rule OpMultiAssign
ruleOpMultiAssign
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpMultiAssignAccess().getAlternatives()); }
(rule__OpMultiAssign__Alternatives)
{ after(grammarAccess.getOpMultiAssignAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXOrExpression
entryRuleXOrExpression 
:
{ before(grammarAccess.getXOrExpressionRule()); }
	 ruleXOrExpression
{ after(grammarAccess.getXOrExpressionRule()); } 
	 EOF 
;

// Rule XOrExpression
ruleXOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXOrExpressionAccess().getGroup()); }
(rule__XOrExpression__Group__0)
{ after(grammarAccess.getXOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpOr
entryRuleOpOr 
:
{ before(grammarAccess.getOpOrRule()); }
	 ruleOpOr
{ after(grammarAccess.getOpOrRule()); } 
	 EOF 
;

// Rule OpOr
ruleOpOr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); }

	'||' 

{ after(grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXAndExpression
entryRuleXAndExpression 
:
{ before(grammarAccess.getXAndExpressionRule()); }
	 ruleXAndExpression
{ after(grammarAccess.getXAndExpressionRule()); } 
	 EOF 
;

// Rule XAndExpression
ruleXAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXAndExpressionAccess().getGroup()); }
(rule__XAndExpression__Group__0)
{ after(grammarAccess.getXAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpAnd
entryRuleOpAnd 
:
{ before(grammarAccess.getOpAndRule()); }
	 ruleOpAnd
{ after(grammarAccess.getOpAndRule()); } 
	 EOF 
;

// Rule OpAnd
ruleOpAnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); }

	'&&' 

{ after(grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXEqualityExpression
entryRuleXEqualityExpression 
:
{ before(grammarAccess.getXEqualityExpressionRule()); }
	 ruleXEqualityExpression
{ after(grammarAccess.getXEqualityExpressionRule()); } 
	 EOF 
;

// Rule XEqualityExpression
ruleXEqualityExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getGroup()); }
(rule__XEqualityExpression__Group__0)
{ after(grammarAccess.getXEqualityExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpEquality
entryRuleOpEquality 
:
{ before(grammarAccess.getOpEqualityRule()); }
	 ruleOpEquality
{ after(grammarAccess.getOpEqualityRule()); } 
	 EOF 
;

// Rule OpEquality
ruleOpEquality
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpEqualityAccess().getAlternatives()); }
(rule__OpEquality__Alternatives)
{ after(grammarAccess.getOpEqualityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXRelationalExpression
entryRuleXRelationalExpression 
:
{ before(grammarAccess.getXRelationalExpressionRule()); }
	 ruleXRelationalExpression
{ after(grammarAccess.getXRelationalExpressionRule()); } 
	 EOF 
;

// Rule XRelationalExpression
ruleXRelationalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup()); }
(rule__XRelationalExpression__Group__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpCompare
entryRuleOpCompare 
:
{ before(grammarAccess.getOpCompareRule()); }
	 ruleOpCompare
{ after(grammarAccess.getOpCompareRule()); } 
	 EOF 
;

// Rule OpCompare
ruleOpCompare
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpCompareAccess().getAlternatives()); }
(rule__OpCompare__Alternatives)
{ after(grammarAccess.getOpCompareAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXOtherOperatorExpression
entryRuleXOtherOperatorExpression 
:
{ before(grammarAccess.getXOtherOperatorExpressionRule()); }
	 ruleXOtherOperatorExpression
{ after(grammarAccess.getXOtherOperatorExpressionRule()); } 
	 EOF 
;

// Rule XOtherOperatorExpression
ruleXOtherOperatorExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getGroup()); }
(rule__XOtherOperatorExpression__Group__0)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpOther
entryRuleOpOther 
:
{ before(grammarAccess.getOpOtherRule()); }
	 ruleOpOther
{ after(grammarAccess.getOpOtherRule()); } 
	 EOF 
;

// Rule OpOther
ruleOpOther
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpOtherAccess().getAlternatives()); }
(rule__OpOther__Alternatives)
{ after(grammarAccess.getOpOtherAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXAdditiveExpression
entryRuleXAdditiveExpression 
:
{ before(grammarAccess.getXAdditiveExpressionRule()); }
	 ruleXAdditiveExpression
{ after(grammarAccess.getXAdditiveExpressionRule()); } 
	 EOF 
;

// Rule XAdditiveExpression
ruleXAdditiveExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getGroup()); }
(rule__XAdditiveExpression__Group__0)
{ after(grammarAccess.getXAdditiveExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpAdd
entryRuleOpAdd 
:
{ before(grammarAccess.getOpAddRule()); }
	 ruleOpAdd
{ after(grammarAccess.getOpAddRule()); } 
	 EOF 
;

// Rule OpAdd
ruleOpAdd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpAddAccess().getAlternatives()); }
(rule__OpAdd__Alternatives)
{ after(grammarAccess.getOpAddAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXMultiplicativeExpression
entryRuleXMultiplicativeExpression 
:
{ before(grammarAccess.getXMultiplicativeExpressionRule()); }
	 ruleXMultiplicativeExpression
{ after(grammarAccess.getXMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule XMultiplicativeExpression
ruleXMultiplicativeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getGroup()); }
(rule__XMultiplicativeExpression__Group__0)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpMulti
entryRuleOpMulti 
:
{ before(grammarAccess.getOpMultiRule()); }
	 ruleOpMulti
{ after(grammarAccess.getOpMultiRule()); } 
	 EOF 
;

// Rule OpMulti
ruleOpMulti
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpMultiAccess().getAlternatives()); }
(rule__OpMulti__Alternatives)
{ after(grammarAccess.getOpMultiAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXUnaryOperation
entryRuleXUnaryOperation 
:
{ before(grammarAccess.getXUnaryOperationRule()); }
	 ruleXUnaryOperation
{ after(grammarAccess.getXUnaryOperationRule()); } 
	 EOF 
;

// Rule XUnaryOperation
ruleXUnaryOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXUnaryOperationAccess().getAlternatives()); }
(rule__XUnaryOperation__Alternatives)
{ after(grammarAccess.getXUnaryOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpUnary
entryRuleOpUnary 
:
{ before(grammarAccess.getOpUnaryRule()); }
	 ruleOpUnary
{ after(grammarAccess.getOpUnaryRule()); } 
	 EOF 
;

// Rule OpUnary
ruleOpUnary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpUnaryAccess().getAlternatives()); }
(rule__OpUnary__Alternatives)
{ after(grammarAccess.getOpUnaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXCastedExpression
entryRuleXCastedExpression 
:
{ before(grammarAccess.getXCastedExpressionRule()); }
	 ruleXCastedExpression
{ after(grammarAccess.getXCastedExpressionRule()); } 
	 EOF 
;

// Rule XCastedExpression
ruleXCastedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXCastedExpressionAccess().getGroup()); }
(rule__XCastedExpression__Group__0)
{ after(grammarAccess.getXCastedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXMemberFeatureCall
entryRuleXMemberFeatureCall 
:
{ before(grammarAccess.getXMemberFeatureCallRule()); }
	 ruleXMemberFeatureCall
{ after(grammarAccess.getXMemberFeatureCallRule()); } 
	 EOF 
;

// Rule XMemberFeatureCall
ruleXMemberFeatureCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup()); }
(rule__XMemberFeatureCall__Group__0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXPrimaryExpression
entryRuleXPrimaryExpression 
:
{ before(grammarAccess.getXPrimaryExpressionRule()); }
	 ruleXPrimaryExpression
{ after(grammarAccess.getXPrimaryExpressionRule()); } 
	 EOF 
;

// Rule XPrimaryExpression
ruleXPrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXPrimaryExpressionAccess().getAlternatives()); }
(rule__XPrimaryExpression__Alternatives)
{ after(grammarAccess.getXPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXLiteral
entryRuleXLiteral 
:
{ before(grammarAccess.getXLiteralRule()); }
	 ruleXLiteral
{ after(grammarAccess.getXLiteralRule()); } 
	 EOF 
;

// Rule XLiteral
ruleXLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXLiteralAccess().getAlternatives()); }
(rule__XLiteral__Alternatives)
{ after(grammarAccess.getXLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXCollectionLiteral
entryRuleXCollectionLiteral 
:
{ before(grammarAccess.getXCollectionLiteralRule()); }
	 ruleXCollectionLiteral
{ after(grammarAccess.getXCollectionLiteralRule()); } 
	 EOF 
;

// Rule XCollectionLiteral
ruleXCollectionLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXCollectionLiteralAccess().getAlternatives()); }
(rule__XCollectionLiteral__Alternatives)
{ after(grammarAccess.getXCollectionLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXSetLiteral
entryRuleXSetLiteral 
:
{ before(grammarAccess.getXSetLiteralRule()); }
	 ruleXSetLiteral
{ after(grammarAccess.getXSetLiteralRule()); } 
	 EOF 
;

// Rule XSetLiteral
ruleXSetLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXSetLiteralAccess().getGroup()); }
(rule__XSetLiteral__Group__0)
{ after(grammarAccess.getXSetLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXListLiteral
entryRuleXListLiteral 
:
{ before(grammarAccess.getXListLiteralRule()); }
	 ruleXListLiteral
{ after(grammarAccess.getXListLiteralRule()); } 
	 EOF 
;

// Rule XListLiteral
ruleXListLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXListLiteralAccess().getGroup()); }
(rule__XListLiteral__Group__0)
{ after(grammarAccess.getXListLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXClosure
entryRuleXClosure 
:
{ before(grammarAccess.getXClosureRule()); }
	 ruleXClosure
{ after(grammarAccess.getXClosureRule()); } 
	 EOF 
;

// Rule XClosure
ruleXClosure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXClosureAccess().getGroup()); }
(rule__XClosure__Group__0)
{ after(grammarAccess.getXClosureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpressionInClosure
entryRuleXExpressionInClosure 
:
{ before(grammarAccess.getXExpressionInClosureRule()); }
	 ruleXExpressionInClosure
{ after(grammarAccess.getXExpressionInClosureRule()); } 
	 EOF 
;

// Rule XExpressionInClosure
ruleXExpressionInClosure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpressionInClosureAccess().getGroup()); }
(rule__XExpressionInClosure__Group__0)
{ after(grammarAccess.getXExpressionInClosureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXShortClosure
entryRuleXShortClosure 
:
{ before(grammarAccess.getXShortClosureRule()); }
	 ruleXShortClosure
{ after(grammarAccess.getXShortClosureRule()); } 
	 EOF 
;

// Rule XShortClosure
ruleXShortClosure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXShortClosureAccess().getGroup()); }
(rule__XShortClosure__Group__0)
{ after(grammarAccess.getXShortClosureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXParenthesizedExpression
entryRuleXParenthesizedExpression 
:
{ before(grammarAccess.getXParenthesizedExpressionRule()); }
	 ruleXParenthesizedExpression
{ after(grammarAccess.getXParenthesizedExpressionRule()); } 
	 EOF 
;

// Rule XParenthesizedExpression
ruleXParenthesizedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getGroup()); }
(rule__XParenthesizedExpression__Group__0)
{ after(grammarAccess.getXParenthesizedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXIfExpression
entryRuleXIfExpression 
:
{ before(grammarAccess.getXIfExpressionRule()); }
	 ruleXIfExpression
{ after(grammarAccess.getXIfExpressionRule()); } 
	 EOF 
;

// Rule XIfExpression
ruleXIfExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXIfExpressionAccess().getGroup()); }
(rule__XIfExpression__Group__0)
{ after(grammarAccess.getXIfExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXSwitchExpression
entryRuleXSwitchExpression 
:
{ before(grammarAccess.getXSwitchExpressionRule()); }
	 ruleXSwitchExpression
{ after(grammarAccess.getXSwitchExpressionRule()); } 
	 EOF 
;

// Rule XSwitchExpression
ruleXSwitchExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup()); }
(rule__XSwitchExpression__Group__0)
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXCasePart
entryRuleXCasePart 
:
{ before(grammarAccess.getXCasePartRule()); }
	 ruleXCasePart
{ after(grammarAccess.getXCasePartRule()); } 
	 EOF 
;

// Rule XCasePart
ruleXCasePart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXCasePartAccess().getGroup()); }
(rule__XCasePart__Group__0)
{ after(grammarAccess.getXCasePartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXForLoopExpression
entryRuleXForLoopExpression 
:
{ before(grammarAccess.getXForLoopExpressionRule()); }
	 ruleXForLoopExpression
{ after(grammarAccess.getXForLoopExpressionRule()); } 
	 EOF 
;

// Rule XForLoopExpression
ruleXForLoopExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getGroup()); }
(rule__XForLoopExpression__Group__0)
{ after(grammarAccess.getXForLoopExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXWhileExpression
entryRuleXWhileExpression 
:
{ before(grammarAccess.getXWhileExpressionRule()); }
	 ruleXWhileExpression
{ after(grammarAccess.getXWhileExpressionRule()); } 
	 EOF 
;

// Rule XWhileExpression
ruleXWhileExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXWhileExpressionAccess().getGroup()); }
(rule__XWhileExpression__Group__0)
{ after(grammarAccess.getXWhileExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXDoWhileExpression
entryRuleXDoWhileExpression 
:
{ before(grammarAccess.getXDoWhileExpressionRule()); }
	 ruleXDoWhileExpression
{ after(grammarAccess.getXDoWhileExpressionRule()); } 
	 EOF 
;

// Rule XDoWhileExpression
ruleXDoWhileExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getGroup()); }
(rule__XDoWhileExpression__Group__0)
{ after(grammarAccess.getXDoWhileExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXBlockExpression
entryRuleXBlockExpression 
:
{ before(grammarAccess.getXBlockExpressionRule()); }
	 ruleXBlockExpression
{ after(grammarAccess.getXBlockExpressionRule()); } 
	 EOF 
;

// Rule XBlockExpression
ruleXBlockExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXBlockExpressionAccess().getGroup()); }
(rule__XBlockExpression__Group__0)
{ after(grammarAccess.getXBlockExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpressionInsideBlock
entryRuleXExpressionInsideBlock 
:
{ before(grammarAccess.getXExpressionInsideBlockRule()); }
	 ruleXExpressionInsideBlock
{ after(grammarAccess.getXExpressionInsideBlockRule()); } 
	 EOF 
;

// Rule XExpressionInsideBlock
ruleXExpressionInsideBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpressionInsideBlockAccess().getAlternatives()); }
(rule__XExpressionInsideBlock__Alternatives)
{ after(grammarAccess.getXExpressionInsideBlockAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXVariableDeclaration
entryRuleXVariableDeclaration 
:
{ before(grammarAccess.getXVariableDeclarationRule()); }
	 ruleXVariableDeclaration
{ after(grammarAccess.getXVariableDeclarationRule()); } 
	 EOF 
;

// Rule XVariableDeclaration
ruleXVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getGroup()); }
(rule__XVariableDeclaration__Group__0)
{ after(grammarAccess.getXVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmFormalParameter
entryRuleJvmFormalParameter 
:
{ before(grammarAccess.getJvmFormalParameterRule()); }
	 ruleJvmFormalParameter
{ after(grammarAccess.getJvmFormalParameterRule()); } 
	 EOF 
;

// Rule JvmFormalParameter
ruleJvmFormalParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmFormalParameterAccess().getGroup()); }
(rule__JvmFormalParameter__Group__0)
{ after(grammarAccess.getJvmFormalParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFullJvmFormalParameter
entryRuleFullJvmFormalParameter 
:
{ before(grammarAccess.getFullJvmFormalParameterRule()); }
	 ruleFullJvmFormalParameter
{ after(grammarAccess.getFullJvmFormalParameterRule()); } 
	 EOF 
;

// Rule FullJvmFormalParameter
ruleFullJvmFormalParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFullJvmFormalParameterAccess().getGroup()); }
(rule__FullJvmFormalParameter__Group__0)
{ after(grammarAccess.getFullJvmFormalParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXFeatureCall
entryRuleXFeatureCall 
:
{ before(grammarAccess.getXFeatureCallRule()); }
	 ruleXFeatureCall
{ after(grammarAccess.getXFeatureCallRule()); } 
	 EOF 
;

// Rule XFeatureCall
ruleXFeatureCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXFeatureCallAccess().getGroup()); }
(rule__XFeatureCall__Group__0)
{ after(grammarAccess.getXFeatureCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureCallID
entryRuleFeatureCallID 
:
{ before(grammarAccess.getFeatureCallIDRule()); }
	 ruleFeatureCallID
{ after(grammarAccess.getFeatureCallIDRule()); } 
	 EOF 
;

// Rule FeatureCallID
ruleFeatureCallID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureCallIDAccess().getAlternatives()); }
(rule__FeatureCallID__Alternatives)
{ after(grammarAccess.getFeatureCallIDAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdOrSuper
entryRuleIdOrSuper 
:
{ before(grammarAccess.getIdOrSuperRule()); }
	 ruleIdOrSuper
{ after(grammarAccess.getIdOrSuperRule()); } 
	 EOF 
;

// Rule IdOrSuper
ruleIdOrSuper
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdOrSuperAccess().getAlternatives()); }
(rule__IdOrSuper__Alternatives)
{ after(grammarAccess.getIdOrSuperAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXConstructorCall
entryRuleXConstructorCall 
:
{ before(grammarAccess.getXConstructorCallRule()); }
	 ruleXConstructorCall
{ after(grammarAccess.getXConstructorCallRule()); } 
	 EOF 
;

// Rule XConstructorCall
ruleXConstructorCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXConstructorCallAccess().getGroup()); }
(rule__XConstructorCall__Group__0)
{ after(grammarAccess.getXConstructorCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXBooleanLiteral
entryRuleXBooleanLiteral 
:
{ before(grammarAccess.getXBooleanLiteralRule()); }
	 ruleXBooleanLiteral
{ after(grammarAccess.getXBooleanLiteralRule()); } 
	 EOF 
;

// Rule XBooleanLiteral
ruleXBooleanLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXBooleanLiteralAccess().getGroup()); }
(rule__XBooleanLiteral__Group__0)
{ after(grammarAccess.getXBooleanLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXNullLiteral
entryRuleXNullLiteral 
:
{ before(grammarAccess.getXNullLiteralRule()); }
	 ruleXNullLiteral
{ after(grammarAccess.getXNullLiteralRule()); } 
	 EOF 
;

// Rule XNullLiteral
ruleXNullLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXNullLiteralAccess().getGroup()); }
(rule__XNullLiteral__Group__0)
{ after(grammarAccess.getXNullLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXNumberLiteral
entryRuleXNumberLiteral 
:
{ before(grammarAccess.getXNumberLiteralRule()); }
	 ruleXNumberLiteral
{ after(grammarAccess.getXNumberLiteralRule()); } 
	 EOF 
;

// Rule XNumberLiteral
ruleXNumberLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXNumberLiteralAccess().getGroup()); }
(rule__XNumberLiteral__Group__0)
{ after(grammarAccess.getXNumberLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXStringLiteral
entryRuleXStringLiteral 
:
{ before(grammarAccess.getXStringLiteralRule()); }
	 ruleXStringLiteral
{ after(grammarAccess.getXStringLiteralRule()); } 
	 EOF 
;

// Rule XStringLiteral
ruleXStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXStringLiteralAccess().getGroup()); }
(rule__XStringLiteral__Group__0)
{ after(grammarAccess.getXStringLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXTypeLiteral
entryRuleXTypeLiteral 
:
{ before(grammarAccess.getXTypeLiteralRule()); }
	 ruleXTypeLiteral
{ after(grammarAccess.getXTypeLiteralRule()); } 
	 EOF 
;

// Rule XTypeLiteral
ruleXTypeLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXTypeLiteralAccess().getGroup()); }
(rule__XTypeLiteral__Group__0)
{ after(grammarAccess.getXTypeLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXThrowExpression
entryRuleXThrowExpression 
:
{ before(grammarAccess.getXThrowExpressionRule()); }
	 ruleXThrowExpression
{ after(grammarAccess.getXThrowExpressionRule()); } 
	 EOF 
;

// Rule XThrowExpression
ruleXThrowExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXThrowExpressionAccess().getGroup()); }
(rule__XThrowExpression__Group__0)
{ after(grammarAccess.getXThrowExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXReturnExpression
entryRuleXReturnExpression 
:
{ before(grammarAccess.getXReturnExpressionRule()); }
	 ruleXReturnExpression
{ after(grammarAccess.getXReturnExpressionRule()); } 
	 EOF 
;

// Rule XReturnExpression
ruleXReturnExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXReturnExpressionAccess().getGroup()); }
(rule__XReturnExpression__Group__0)
{ after(grammarAccess.getXReturnExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXTryCatchFinallyExpression
entryRuleXTryCatchFinallyExpression 
:
{ before(grammarAccess.getXTryCatchFinallyExpressionRule()); }
	 ruleXTryCatchFinallyExpression
{ after(grammarAccess.getXTryCatchFinallyExpressionRule()); } 
	 EOF 
;

// Rule XTryCatchFinallyExpression
ruleXTryCatchFinallyExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup()); }
(rule__XTryCatchFinallyExpression__Group__0)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXCatchClause
entryRuleXCatchClause 
:
{ before(grammarAccess.getXCatchClauseRule()); }
	 ruleXCatchClause
{ after(grammarAccess.getXCatchClauseRule()); } 
	 EOF 
;

// Rule XCatchClause
ruleXCatchClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXCatchClauseAccess().getGroup()); }
(rule__XCatchClause__Group__0)
{ after(grammarAccess.getXCatchClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumber
entryRuleNumber 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Number
ruleNumber
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberAccess().getAlternatives()); }
(rule__Number__Alternatives)
{ after(grammarAccess.getNumberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}





// Entry rule entryRuleJvmTypeReference
entryRuleJvmTypeReference 
:
{ before(grammarAccess.getJvmTypeReferenceRule()); }
	 ruleJvmTypeReference
{ after(grammarAccess.getJvmTypeReferenceRule()); } 
	 EOF 
;

// Rule JvmTypeReference
ruleJvmTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getAlternatives()); }
(rule__JvmTypeReference__Alternatives)
{ after(grammarAccess.getJvmTypeReferenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayBrackets
entryRuleArrayBrackets 
:
{ before(grammarAccess.getArrayBracketsRule()); }
	 ruleArrayBrackets
{ after(grammarAccess.getArrayBracketsRule()); } 
	 EOF 
;

// Rule ArrayBrackets
ruleArrayBrackets
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayBracketsAccess().getGroup()); }
(rule__ArrayBrackets__Group__0)
{ after(grammarAccess.getArrayBracketsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXFunctionTypeRef
entryRuleXFunctionTypeRef 
:
{ before(grammarAccess.getXFunctionTypeRefRule()); }
	 ruleXFunctionTypeRef
{ after(grammarAccess.getXFunctionTypeRefRule()); } 
	 EOF 
;

// Rule XFunctionTypeRef
ruleXFunctionTypeRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getGroup()); }
(rule__XFunctionTypeRef__Group__0)
{ after(grammarAccess.getXFunctionTypeRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmParameterizedTypeReference
entryRuleJvmParameterizedTypeReference 
:
{ before(grammarAccess.getJvmParameterizedTypeReferenceRule()); }
	 ruleJvmParameterizedTypeReference
{ after(grammarAccess.getJvmParameterizedTypeReferenceRule()); } 
	 EOF 
;

// Rule JvmParameterizedTypeReference
ruleJvmParameterizedTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup()); }
(rule__JvmParameterizedTypeReference__Group__0)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmArgumentTypeReference
entryRuleJvmArgumentTypeReference 
:
{ before(grammarAccess.getJvmArgumentTypeReferenceRule()); }
	 ruleJvmArgumentTypeReference
{ after(grammarAccess.getJvmArgumentTypeReferenceRule()); } 
	 EOF 
;

// Rule JvmArgumentTypeReference
ruleJvmArgumentTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmArgumentTypeReferenceAccess().getAlternatives()); }
(rule__JvmArgumentTypeReference__Alternatives)
{ after(grammarAccess.getJvmArgumentTypeReferenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmWildcardTypeReference
entryRuleJvmWildcardTypeReference 
:
{ before(grammarAccess.getJvmWildcardTypeReferenceRule()); }
	 ruleJvmWildcardTypeReference
{ after(grammarAccess.getJvmWildcardTypeReferenceRule()); } 
	 EOF 
;

// Rule JvmWildcardTypeReference
ruleJvmWildcardTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup()); }
(rule__JvmWildcardTypeReference__Group__0)
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmUpperBound
entryRuleJvmUpperBound 
:
{ before(grammarAccess.getJvmUpperBoundRule()); }
	 ruleJvmUpperBound
{ after(grammarAccess.getJvmUpperBoundRule()); } 
	 EOF 
;

// Rule JvmUpperBound
ruleJvmUpperBound
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmUpperBoundAccess().getGroup()); }
(rule__JvmUpperBound__Group__0)
{ after(grammarAccess.getJvmUpperBoundAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmUpperBoundAnded
entryRuleJvmUpperBoundAnded 
:
{ before(grammarAccess.getJvmUpperBoundAndedRule()); }
	 ruleJvmUpperBoundAnded
{ after(grammarAccess.getJvmUpperBoundAndedRule()); } 
	 EOF 
;

// Rule JvmUpperBoundAnded
ruleJvmUpperBoundAnded
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmUpperBoundAndedAccess().getGroup()); }
(rule__JvmUpperBoundAnded__Group__0)
{ after(grammarAccess.getJvmUpperBoundAndedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmLowerBound
entryRuleJvmLowerBound 
:
{ before(grammarAccess.getJvmLowerBoundRule()); }
	 ruleJvmLowerBound
{ after(grammarAccess.getJvmLowerBoundRule()); } 
	 EOF 
;

// Rule JvmLowerBound
ruleJvmLowerBound
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJvmLowerBoundAccess().getGroup()); }
(rule__JvmLowerBound__Group__0)
{ after(grammarAccess.getJvmLowerBoundAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard 
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
(rule__QualifiedNameWithWildcard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValidID
entryRuleValidID 
:
{ before(grammarAccess.getValidIDRule()); }
	 ruleValidID
{ after(grammarAccess.getValidIDRule()); } 
	 EOF 
;

// Rule ValidID
ruleValidID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); }
	RULE_ID
{ after(grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleXImportDeclaration
entryRuleXImportDeclaration 
:
{ before(grammarAccess.getXImportDeclarationRule()); }
	 ruleXImportDeclaration
{ after(grammarAccess.getXImportDeclarationRule()); } 
	 EOF 
;

// Rule XImportDeclaration
ruleXImportDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXImportDeclarationAccess().getGroup()); }
(rule__XImportDeclaration__Group__0)
{ after(grammarAccess.getXImportDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule AccessType
ruleAccessType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessTypeAccess().getAlternatives()); }
(rule__AccessType__Alternatives)
{ after(grammarAccess.getAccessTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule SimpleType
ruleSimpleType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getAlternatives()); }
(rule__SimpleType__Alternatives)
{ after(grammarAccess.getSimpleTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Font
ruleFont
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFontAccess().getAlternatives()); }
(rule__Font__Alternatives)
{ after(grammarAccess.getFontAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Color
ruleColor
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getAlternatives()); }
(rule__Color__Alternatives)
{ after(grammarAccess.getColorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ButtonType
ruleButtonType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getButtonTypeAccess().getAlternatives()); }
(rule__ButtonType__Alternatives)
{ after(grammarAccess.getButtonTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AttrGetParams
ruleAttrGetParams
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrGetParamsAccess().getAlternatives()); }
(rule__AttrGetParams__Alternatives)
{ after(grammarAccess.getAttrGetParamsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AttrSetParams
ruleAttrSetParams
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrSetParamsAccess().getValueEnumLiteralDeclaration()); }
(	'value' 
)
{ after(grammarAccess.getAttrSetParamsAccess().getValueEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule EventName
ruleEventName
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventNameAccess().getAlternatives()); }
(rule__EventName__Alternatives)
{ after(grammarAccess.getEventNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Root__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootAccess().getIncludelibrarytypeAssignment_1_0()); }
(rule__Root__IncludelibrarytypeAssignment_1_0)
{ after(grammarAccess.getRootAccess().getIncludelibrarytypeAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getRootAccess().getEmbedplatformtypeAssignment_1_1()); }
(rule__Root__EmbedplatformtypeAssignment_1_1)
{ after(grammarAccess.getRootAccess().getEmbedplatformtypeAssignment_1_1()); }
)

    |(
{ before(grammarAccess.getRootAccess().getEmbedcodetypeAssignment_1_2()); }
(rule__Root__EmbedcodetypeAssignment_1_2)
{ after(grammarAccess.getRootAccess().getEmbedcodetypeAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getClassattributeAssignment_5_0()); }
(rule__Class__ClassattributeAssignment_5_0)
{ after(grammarAccess.getClassAccess().getClassattributeAssignment_5_0()); }
)

    |(
{ before(grammarAccess.getClassAccess().getAttributeAssignment_5_1()); }
(rule__Class__AttributeAssignment_5_1)
{ after(grammarAccess.getClassAccess().getAttributeAssignment_5_1()); }
)

    |(
{ before(grammarAccess.getClassAccess().getInsertembedcodeAssignment_5_2()); }
(rule__Class__InsertembedcodeAssignment_5_2)
{ after(grammarAccess.getClassAccess().getInsertembedcodeAssignment_5_2()); }
)

    |(
{ before(grammarAccess.getClassAccess().getReferenceAssignment_5_3()); }
(rule__Class__ReferenceAssignment_5_3)
{ after(grammarAccess.getClassAccess().getReferenceAssignment_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Alternatives_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getAttributeAssignment_9_0()); }
(rule__Relation__AttributeAssignment_9_0)
{ after(grammarAccess.getRelationAccess().getAttributeAssignment_9_0()); }
)

    |(
{ before(grammarAccess.getRelationAccess().getInsertembedcodeAssignment_9_1()); }
(rule__Relation__InsertembedcodeAssignment_9_1)
{ after(grammarAccess.getRelationAccess().getInsertembedcodeAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSimpletypeAssignment_0()); }
(rule__Type__SimpletypeAssignment_0)
{ after(grammarAccess.getTypeAccess().getSimpletypeAssignment_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getEnumtypeAssignment_1()); }
(rule__Type__EnumtypeAssignment_1)
{ after(grammarAccess.getTypeAccess().getEnumtypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Alternatives_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelTypeAccess().getNoneKeyword_6_0()); }

	'none' 

{ after(grammarAccess.getModelTypeAccess().getNoneKeyword_6_0()); }
)

    |(
(
{ before(grammarAccess.getModelTypeAccess().getRelationnameAssignment_6_1()); }
(rule__ModelType__RelationnameAssignment_6_1)
{ after(grammarAccess.getModelTypeAccess().getRelationnameAssignment_6_1()); }
)
(
{ before(grammarAccess.getModelTypeAccess().getRelationnameAssignment_6_1()); }
(rule__ModelType__RelationnameAssignment_6_1)*
{ after(grammarAccess.getModelTypeAccess().getRelationnameAssignment_6_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Alternatives_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelTypeAccess().getNoneKeyword_8_0()); }

	'none' 

{ after(grammarAccess.getModelTypeAccess().getNoneKeyword_8_0()); }
)

    |(
(
{ before(grammarAccess.getModelTypeAccess().getModenameAssignment_8_1()); }
(rule__ModelType__ModenameAssignment_8_1)
{ after(grammarAccess.getModelTypeAccess().getModenameAssignment_8_1()); }
)
(
{ before(grammarAccess.getModelTypeAccess().getModenameAssignment_8_1()); }
(rule__ModelType__ModenameAssignment_8_1)*
{ after(grammarAccess.getModelTypeAccess().getModenameAssignment_8_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mode__Alternatives_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModeAccess().getNoneKeyword_3_3_0()); }

	'none' 

{ after(grammarAccess.getModeAccess().getNoneKeyword_3_3_0()); }
)

    |(
{ before(grammarAccess.getModeAccess().getRelationnameAssignment_3_3_1()); }
(rule__Mode__RelationnameAssignment_3_3_1)
{ after(grammarAccess.getModeAccess().getRelationnameAssignment_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SVGCommand__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSVGCommandAccess().getInsertembedcodeAssignment_0()); }
(rule__SVGCommand__InsertembedcodeAssignment_0)
{ after(grammarAccess.getSVGCommandAccess().getInsertembedcodeAssignment_0()); }
)

    |(
{ before(grammarAccess.getSVGCommandAccess().getGroup_1()); }
(rule__SVGCommand__Group_1__0)
{ after(grammarAccess.getSVGCommandAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SVGCommand__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSVGCommandAccess().getRectangleAssignment_1_0_0()); }
(rule__SVGCommand__RectangleAssignment_1_0_0)
{ after(grammarAccess.getSVGCommandAccess().getRectangleAssignment_1_0_0()); }
)

    |(
{ before(grammarAccess.getSVGCommandAccess().getCircleAssignment_1_0_1()); }
(rule__SVGCommand__CircleAssignment_1_0_1)
{ after(grammarAccess.getSVGCommandAccess().getCircleAssignment_1_0_1()); }
)

    |(
{ before(grammarAccess.getSVGCommandAccess().getEllipseAssignment_1_0_2()); }
(rule__SVGCommand__EllipseAssignment_1_0_2)
{ after(grammarAccess.getSVGCommandAccess().getEllipseAssignment_1_0_2()); }
)

    |(
{ before(grammarAccess.getSVGCommandAccess().getLineAssignment_1_0_3()); }
(rule__SVGCommand__LineAssignment_1_0_3)
{ after(grammarAccess.getSVGCommandAccess().getLineAssignment_1_0_3()); }
)

    |(
{ before(grammarAccess.getSVGCommandAccess().getPolylineAssignment_1_0_4()); }
(rule__SVGCommand__PolylineAssignment_1_0_4)
{ after(grammarAccess.getSVGCommandAccess().getPolylineAssignment_1_0_4()); }
)

    |(
{ before(grammarAccess.getSVGCommandAccess().getPolygonAssignment_1_0_5()); }
(rule__SVGCommand__PolygonAssignment_1_0_5)
{ after(grammarAccess.getSVGCommandAccess().getPolygonAssignment_1_0_5()); }
)

    |(
{ before(grammarAccess.getSVGCommandAccess().getPathAssignment_1_0_6()); }
(rule__SVGCommand__PathAssignment_1_0_6)
{ after(grammarAccess.getSVGCommandAccess().getPathAssignment_1_0_6()); }
)

    |(
{ before(grammarAccess.getSVGCommandAccess().getTextAssignment_1_0_7()); }
(rule__SVGCommand__TextAssignment_1_0_7)
{ after(grammarAccess.getSVGCommandAccess().getTextAssignment_1_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SVGCommand__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSVGCommandAccess().getSymbolstyleAssignment_1_1_0()); }
(rule__SVGCommand__SymbolstyleAssignment_1_1_0)
{ after(grammarAccess.getSVGCommandAccess().getSymbolstyleAssignment_1_1_0()); }
)

    |(
{ before(grammarAccess.getSVGCommandAccess().getGroup_1_1_1()); }
(rule__SVGCommand__Group_1_1_1__0)
{ after(grammarAccess.getSVGCommandAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathData__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathDataAccess().getMovetoAssignment_0()); }
(rule__PathData__MovetoAssignment_0)
{ after(grammarAccess.getPathDataAccess().getMovetoAssignment_0()); }
)

    |(
{ before(grammarAccess.getPathDataAccess().getLinetoAssignment_1()); }
(rule__PathData__LinetoAssignment_1)
{ after(grammarAccess.getPathDataAccess().getLinetoAssignment_1()); }
)

    |(
{ before(grammarAccess.getPathDataAccess().getHorizontallinetoAssignment_2()); }
(rule__PathData__HorizontallinetoAssignment_2)
{ after(grammarAccess.getPathDataAccess().getHorizontallinetoAssignment_2()); }
)

    |(
{ before(grammarAccess.getPathDataAccess().getVerticallinetoAssignment_3()); }
(rule__PathData__VerticallinetoAssignment_3)
{ after(grammarAccess.getPathDataAccess().getVerticallinetoAssignment_3()); }
)

    |(
{ before(grammarAccess.getPathDataAccess().getCurvetoAssignment_4()); }
(rule__PathData__CurvetoAssignment_4)
{ after(grammarAccess.getPathDataAccess().getCurvetoAssignment_4()); }
)

    |(
{ before(grammarAccess.getPathDataAccess().getSmoothcurvetoAssignment_5()); }
(rule__PathData__SmoothcurvetoAssignment_5)
{ after(grammarAccess.getPathDataAccess().getSmoothcurvetoAssignment_5()); }
)

    |(
{ before(grammarAccess.getPathDataAccess().getQuadraticbeziercurveAssignment_6()); }
(rule__PathData__QuadraticbeziercurveAssignment_6)
{ after(grammarAccess.getPathDataAccess().getQuadraticbeziercurveAssignment_6()); }
)

    |(
{ before(grammarAccess.getPathDataAccess().getSmoothquadraticbeziercurvetoAssignment_7()); }
(rule__PathData__SmoothquadraticbeziercurvetoAssignment_7)
{ after(grammarAccess.getPathDataAccess().getSmoothquadraticbeziercurvetoAssignment_7()); }
)

    |(
{ before(grammarAccess.getPathDataAccess().getEllipticalarcAssignment_8()); }
(rule__PathData__EllipticalarcAssignment_8)
{ after(grammarAccess.getPathDataAccess().getEllipticalarcAssignment_8()); }
)

    |(
{ before(grammarAccess.getPathDataAccess().getClosepathAssignment_9()); }
(rule__PathData__ClosepathAssignment_9)
{ after(grammarAccess.getPathDataAccess().getClosepathAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MoveTo__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMoveToAccess().getMKeyword_0_0()); }

	'M' 

{ after(grammarAccess.getMoveToAccess().getMKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getMoveToAccess().getMKeyword_0_1()); }

	'm' 

{ after(grammarAccess.getMoveToAccess().getMKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LineTo__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineToAccess().getLKeyword_0_0()); }

	'L' 

{ after(grammarAccess.getLineToAccess().getLKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getLineToAccess().getLKeyword_0_1()); }

	'l' 

{ after(grammarAccess.getLineToAccess().getLKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalLineTo__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHorizontalLineToAccess().getHKeyword_0_0()); }

	'H' 

{ after(grammarAccess.getHorizontalLineToAccess().getHKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getHorizontalLineToAccess().getHKeyword_0_1()); }

	'h' 

{ after(grammarAccess.getHorizontalLineToAccess().getHKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerticalLineTo__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerticalLineToAccess().getVKeyword_0_0()); }

	'V' 

{ after(grammarAccess.getVerticalLineToAccess().getVKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getVerticalLineToAccess().getVKeyword_0_1()); }

	'v' 

{ after(grammarAccess.getVerticalLineToAccess().getVKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CurveTo__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCurveToAccess().getCKeyword_0_0()); }

	'C' 

{ after(grammarAccess.getCurveToAccess().getCKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getCurveToAccess().getCKeyword_0_1()); }

	'c' 

{ after(grammarAccess.getCurveToAccess().getCKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SmoothCurveTo__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSmoothCurveToAccess().getSKeyword_0_0()); }

	'S' 

{ after(grammarAccess.getSmoothCurveToAccess().getSKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getSmoothCurveToAccess().getSKeyword_0_1()); }

	's' 

{ after(grammarAccess.getSmoothCurveToAccess().getSKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuadraticBezierCurve__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuadraticBezierCurveAccess().getQKeyword_0_0()); }

	'Q' 

{ after(grammarAccess.getQuadraticBezierCurveAccess().getQKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getQuadraticBezierCurveAccess().getQKeyword_0_1()); }

	'q' 

{ after(grammarAccess.getQuadraticBezierCurveAccess().getQKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SmoothQuadraticBezierCurveTo__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSmoothQuadraticBezierCurveToAccess().getTKeyword_0_0()); }

	'T' 

{ after(grammarAccess.getSmoothQuadraticBezierCurveToAccess().getTKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getSmoothQuadraticBezierCurveToAccess().getTKeyword_0_1()); }

	't' 

{ after(grammarAccess.getSmoothQuadraticBezierCurveToAccess().getTKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EllipticalArc__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEllipticalArcAccess().getAKeyword_0_0()); }

	'A' 

{ after(grammarAccess.getEllipticalArcAccess().getAKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getEllipticalArcAccess().getAKeyword_0_1()); }

	'a' 

{ after(grammarAccess.getEllipticalArcAccess().getAKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosePath__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosePathAccess().getZKeyword_0()); }

	'Z' 

{ after(grammarAccess.getClosePathAccess().getZKeyword_0()); }
)

    |(
{ before(grammarAccess.getClosePathAccess().getZKeyword_1()); }

	'z' 

{ after(grammarAccess.getClosePathAccess().getZKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getNoneKeyword_5_0()); }

	'none' 

{ after(grammarAccess.getSymbolStyleAccess().getNoneKeyword_5_0()); }
)

    |(
{ before(grammarAccess.getSymbolStyleAccess().getFillcolorAssignment_5_1()); }
(rule__SymbolStyle__FillcolorAssignment_5_1)
{ after(grammarAccess.getSymbolStyleAccess().getFillcolorAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FillColor__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFillColorAccess().getGroup_0()); }
(rule__FillColor__Group_0__0)
{ after(grammarAccess.getFillColorAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFillColorAccess().getHexcolorAssignment_1()); }
(rule__FillColor__HexcolorAssignment_1)
{ after(grammarAccess.getFillColorAccess().getHexcolorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StrokeColor__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStrokeColorAccess().getGroup_0()); }
(rule__StrokeColor__Group_0__0)
{ after(grammarAccess.getStrokeColorAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getStrokeColorAccess().getHexcolorAssignment_1()); }
(rule__StrokeColor__HexcolorAssignment_1)
{ after(grammarAccess.getStrokeColorAccess().getHexcolorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FontFamily__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFontFamilyAccess().getGroup_0()); }
(rule__FontFamily__Group_0__0)
{ after(grammarAccess.getFontFamilyAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFontFamilyAccess().getFontAssignment_1()); }
(rule__FontFamily__FontAssignment_1)
{ after(grammarAccess.getFontFamilyAccess().getFontAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSelectionAssignment_0()); }
(rule__Statement__SelectionAssignment_0)
{ after(grammarAccess.getStatementAccess().getSelectionAssignment_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getLoopAssignment_1()); }
(rule__Statement__LoopAssignment_1)
{ after(grammarAccess.getStatementAccess().getLoopAssignment_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getVariableAssignment_2()); }
(rule__Statement__VariableAssignment_2)
{ after(grammarAccess.getStatementAccess().getVariableAssignment_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getAlgorithmoperationAssignment_3()); }
(rule__Statement__AlgorithmoperationAssignment_3)
{ after(grammarAccess.getStatementAccess().getAlgorithmoperationAssignment_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getInsertembedcodeAssignment_4()); }
(rule__Statement__InsertembedcodeAssignment_4)
{ after(grammarAccess.getStatementAccess().getInsertembedcodeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopStatementAccess().getWhiletloopAssignment_0()); }
(rule__LoopStatement__WhiletloopAssignment_0)
{ after(grammarAccess.getLoopStatementAccess().getWhiletloopAssignment_0()); }
)

    |(
{ before(grammarAccess.getLoopStatementAccess().getForloopAssignment_1()); }
(rule__LoopStatement__ForloopAssignment_1)
{ after(grammarAccess.getLoopStatementAccess().getForloopAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getWhileblockAssignment_5_0()); }
(rule__WhileLoop__WhileblockAssignment_5_0)
{ after(grammarAccess.getWhileLoopAccess().getWhileblockAssignment_5_0()); }
)

    |(
{ before(grammarAccess.getWhileLoopAccess().getBreakcontinueAssignment_5_1()); }
(rule__WhileLoop__BreakcontinueAssignment_5_1)
{ after(grammarAccess.getWhileLoopAccess().getBreakcontinueAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Alternatives_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getForblockAssignment_9_0()); }
(rule__ForLoop__ForblockAssignment_9_0)
{ after(grammarAccess.getForLoopAccess().getForblockAssignment_9_0()); }
)

    |(
{ before(grammarAccess.getForLoopAccess().getBreakcontinueAssignment_9_1()); }
(rule__ForLoop__BreakcontinueAssignment_9_1)
{ after(grammarAccess.getForLoopAccess().getBreakcontinueAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BreakContinue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakContinueAccess().getBreakAssignment_0()); }
(rule__BreakContinue__BreakAssignment_0)
{ after(grammarAccess.getBreakContinueAccess().getBreakAssignment_0()); }
)

    |(
{ before(grammarAccess.getBreakContinueAccess().getContinueAssignment_1()); }
(rule__BreakContinue__ContinueAssignment_1)
{ after(grammarAccess.getBreakContinueAccess().getContinueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getGroup_0()); }
(rule__Variable__Group_0__0)
{ after(grammarAccess.getVariableAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getVariableAccess().getGroup_1()); }
(rule__Variable__Group_1__0)
{ after(grammarAccess.getVariableAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getExpressionAssignment_0()); }
(rule__VarStatement__ExpressionAssignment_0)
{ after(grammarAccess.getVarStatementAccess().getExpressionAssignment_0()); }
)

    |(
{ before(grammarAccess.getVarStatementAccess().getAlgorithmoperationAssignment_1()); }
(rule__VarStatement__AlgorithmoperationAssignment_1)
{ after(grammarAccess.getVarStatementAccess().getAlgorithmoperationAssignment_1()); }
)

    |(
{ before(grammarAccess.getVarStatementAccess().getGroup_2()); }
(rule__VarStatement__Group_2__0)
{ after(grammarAccess.getVarStatementAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getVarStatementAccess().getGroup_3()); }
(rule__VarStatement__Group_3__0)
{ after(grammarAccess.getVarStatementAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getVarStatementAccess().getGroup_4()); }
(rule__VarStatement__Group_4__0)
{ after(grammarAccess.getVarStatementAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getVarStatementAccess().getGroup_5()); }
(rule__VarStatement__Group_5__0)
{ after(grammarAccess.getVarStatementAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getVarStatementAccess().getGroup_6()); }
(rule__VarStatement__Group_6__0)
{ after(grammarAccess.getVarStatementAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getVarStatementAccess().getGroup_7()); }
(rule__VarStatement__Group_7__0)
{ after(grammarAccess.getVarStatementAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getVarStatementAccess().getGroup_8()); }
(rule__VarStatement__Group_8__0)
{ after(grammarAccess.getVarStatementAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getVarStatementAccess().getGroup_9()); }
(rule__VarStatement__Group_9__0)
{ after(grammarAccess.getVarStatementAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorAssign__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAssignAccess().getAssignAssignment_0()); }
(rule__OperatorAssign__AssignAssignment_0)
{ after(grammarAccess.getOperatorAssignAccess().getAssignAssignment_0()); }
)

    |(
{ before(grammarAccess.getOperatorAssignAccess().getMultyassignAssignment_1()); }
(rule__OperatorAssign__MultyassignAssignment_1)
{ after(grammarAccess.getOperatorAssignAccess().getMultyassignAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorMultyAssign__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorMultyAssignAccess().getAddassignAssignment_0()); }
(rule__OperatorMultyAssign__AddassignAssignment_0)
{ after(grammarAccess.getOperatorMultyAssignAccess().getAddassignAssignment_0()); }
)

    |(
{ before(grammarAccess.getOperatorMultyAssignAccess().getSubassignAssignment_1()); }
(rule__OperatorMultyAssign__SubassignAssignment_1)
{ after(grammarAccess.getOperatorMultyAssignAccess().getSubassignAssignment_1()); }
)

    |(
{ before(grammarAccess.getOperatorMultyAssignAccess().getMultiassignAssignment_2()); }
(rule__OperatorMultyAssign__MultiassignAssignment_2)
{ after(grammarAccess.getOperatorMultyAssignAccess().getMultiassignAssignment_2()); }
)

    |(
{ before(grammarAccess.getOperatorMultyAssignAccess().getDivassignAssignment_3()); }
(rule__OperatorMultyAssign__DivassignAssignment_3)
{ after(grammarAccess.getOperatorMultyAssignAccess().getDivassignAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorMultiply__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorMultiplyAccess().getMultiplyAssignment_0()); }
(rule__OperatorMultiply__MultiplyAssignment_0)
{ after(grammarAccess.getOperatorMultiplyAccess().getMultiplyAssignment_0()); }
)

    |(
{ before(grammarAccess.getOperatorMultiplyAccess().getDivideAssignment_1()); }
(rule__OperatorMultiply__DivideAssignment_1)
{ after(grammarAccess.getOperatorMultiplyAccess().getDivideAssignment_1()); }
)

    |(
{ before(grammarAccess.getOperatorMultiplyAccess().getModuloAssignment_2()); }
(rule__OperatorMultiply__ModuloAssignment_2)
{ after(grammarAccess.getOperatorMultiplyAccess().getModuloAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorAdd__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAddAccess().getAddAssignment_0()); }
(rule__OperatorAdd__AddAssignment_0)
{ after(grammarAccess.getOperatorAddAccess().getAddAssignment_0()); }
)

    |(
{ before(grammarAccess.getOperatorAddAccess().getSubtractAssignment_1()); }
(rule__OperatorAdd__SubtractAssignment_1)
{ after(grammarAccess.getOperatorAddAccess().getSubtractAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorCompare__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorCompareAccess().getGreaterequalAssignment_0()); }
(rule__OperatorCompare__GreaterequalAssignment_0)
{ after(grammarAccess.getOperatorCompareAccess().getGreaterequalAssignment_0()); }
)

    |(
{ before(grammarAccess.getOperatorCompareAccess().getLesserequalAssignment_1()); }
(rule__OperatorCompare__LesserequalAssignment_1)
{ after(grammarAccess.getOperatorCompareAccess().getLesserequalAssignment_1()); }
)

    |(
{ before(grammarAccess.getOperatorCompareAccess().getGreaterAssignment_2()); }
(rule__OperatorCompare__GreaterAssignment_2)
{ after(grammarAccess.getOperatorCompareAccess().getGreaterAssignment_2()); }
)

    |(
{ before(grammarAccess.getOperatorCompareAccess().getLesserAssignment_3()); }
(rule__OperatorCompare__LesserAssignment_3)
{ after(grammarAccess.getOperatorCompareAccess().getLesserAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorEqual__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorEqualAccess().getEqualAssignment_0()); }
(rule__OperatorEqual__EqualAssignment_0)
{ after(grammarAccess.getOperatorEqualAccess().getEqualAssignment_0()); }
)

    |(
{ before(grammarAccess.getOperatorEqualAccess().getNotequalAssignment_1()); }
(rule__OperatorEqual__NotequalAssignment_1)
{ after(grammarAccess.getOperatorEqualAccess().getNotequalAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAtomicAssignment_0()); }
(rule__PrimaryExpression__AtomicAssignment_0)
{ after(grammarAccess.getPrimaryExpressionAccess().getAtomicAssignment_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
(rule__PrimaryExpression__Group_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getTrueAssignment_0()); }
(rule__AtomicExpression__TrueAssignment_0)
{ after(grammarAccess.getAtomicExpressionAccess().getTrueAssignment_0()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getFalseAssignment_1()); }
(rule__AtomicExpression__FalseAssignment_1)
{ after(grammarAccess.getAtomicExpressionAccess().getFalseAssignment_1()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getVariableAssignment_2()); }
(rule__AtomicExpression__VariableAssignment_2)
{ after(grammarAccess.getAtomicExpressionAccess().getVariableAssignment_2()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getValueStringAssignment_3()); }
(rule__AtomicExpression__ValueStringAssignment_3)
{ after(grammarAccess.getAtomicExpressionAccess().getValueStringAssignment_3()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getValueRealNumberAssignment_4()); }
(rule__AtomicExpression__ValueRealNumberAssignment_4)
{ after(grammarAccess.getAtomicExpressionAccess().getValueRealNumberAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgorithmOperationAccess().getFileoperationAssignment_0()); }
(rule__AlgorithmOperation__FileoperationAssignment_0)
{ after(grammarAccess.getAlgorithmOperationAccess().getFileoperationAssignment_0()); }
)

    |(
{ before(grammarAccess.getAlgorithmOperationAccess().getDiroperationAssignment_1()); }
(rule__AlgorithmOperation__DiroperationAssignment_1)
{ after(grammarAccess.getAlgorithmOperationAccess().getDiroperationAssignment_1()); }
)

    |(
{ before(grammarAccess.getAlgorithmOperationAccess().getSimpleuiAssignment_2()); }
(rule__AlgorithmOperation__SimpleuiAssignment_2)
{ after(grammarAccess.getAlgorithmOperationAccess().getSimpleuiAssignment_2()); }
)

    |(
{ before(grammarAccess.getAlgorithmOperationAccess().getModeloperationAssignment_3()); }
(rule__AlgorithmOperation__ModeloperationAssignment_3)
{ after(grammarAccess.getAlgorithmOperationAccess().getModeloperationAssignment_3()); }
)

    |(
{ before(grammarAccess.getAlgorithmOperationAccess().getInstanceoperationAssignment_4()); }
(rule__AlgorithmOperation__InstanceoperationAssignment_4)
{ after(grammarAccess.getAlgorithmOperationAccess().getInstanceoperationAssignment_4()); }
)

    |(
{ before(grammarAccess.getAlgorithmOperationAccess().getAttributeoperationAssignment_5()); }
(rule__AlgorithmOperation__AttributeoperationAssignment_5)
{ after(grammarAccess.getAlgorithmOperationAccess().getAttributeoperationAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FileOperation__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileOperationAccess().getFilecopyAssignment_2_0()); }
(rule__FileOperation__FilecopyAssignment_2_0)
{ after(grammarAccess.getFileOperationAccess().getFilecopyAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getFileOperationAccess().getFiledeleteAssignment_2_1()); }
(rule__FileOperation__FiledeleteAssignment_2_1)
{ after(grammarAccess.getFileOperationAccess().getFiledeleteAssignment_2_1()); }
)

    |(
{ before(grammarAccess.getFileOperationAccess().getFilecreateAssignment_2_2()); }
(rule__FileOperation__FilecreateAssignment_2_2)
{ after(grammarAccess.getFileOperationAccess().getFilecreateAssignment_2_2()); }
)

    |(
{ before(grammarAccess.getFileOperationAccess().getFilereadAssignment_2_3()); }
(rule__FileOperation__FilereadAssignment_2_3)
{ after(grammarAccess.getFileOperationAccess().getFilereadAssignment_2_3()); }
)

    |(
{ before(grammarAccess.getFileOperationAccess().getFilewriteAssignment_2_4()); }
(rule__FileOperation__FilewriteAssignment_2_4)
{ after(grammarAccess.getFileOperationAccess().getFilewriteAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirOperation__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirOperationAccess().getDirsetworkingAssignment_2_0()); }
(rule__DirOperation__DirsetworkingAssignment_2_0)
{ after(grammarAccess.getDirOperationAccess().getDirsetworkingAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getDirOperationAccess().getDirgetworkingAssignment_2_1()); }
(rule__DirOperation__DirgetworkingAssignment_2_1)
{ after(grammarAccess.getDirOperationAccess().getDirgetworkingAssignment_2_1()); }
)

    |(
{ before(grammarAccess.getDirOperationAccess().getDircreateAssignment_2_2()); }
(rule__DirOperation__DircreateAssignment_2_2)
{ after(grammarAccess.getDirOperationAccess().getDircreateAssignment_2_2()); }
)

    |(
{ before(grammarAccess.getDirOperationAccess().getDirdeleteAssignment_2_3()); }
(rule__DirOperation__DirdeleteAssignment_2_3)
{ after(grammarAccess.getDirOperationAccess().getDirdeleteAssignment_2_3()); }
)

    |(
{ before(grammarAccess.getDirOperationAccess().getDirlistAssignment_2_4()); }
(rule__DirOperation__DirlistAssignment_2_4)
{ after(grammarAccess.getDirOperationAccess().getDirlistAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleUI__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleUIAccess().getEditboxAssignment_2_0()); }
(rule__SimpleUI__EditboxAssignment_2_0)
{ after(grammarAccess.getSimpleUIAccess().getEditboxAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getSimpleUIAccess().getInfoboxAssignment_2_1()); }
(rule__SimpleUI__InfoboxAssignment_2_1)
{ after(grammarAccess.getSimpleUIAccess().getInfoboxAssignment_2_1()); }
)

    |(
{ before(grammarAccess.getSimpleUIAccess().getErrorboxAssignment_2_2()); }
(rule__SimpleUI__ErrorboxAssignment_2_2)
{ after(grammarAccess.getSimpleUIAccess().getErrorboxAssignment_2_2()); }
)

    |(
{ before(grammarAccess.getSimpleUIAccess().getWarningboxAssignment_2_3()); }
(rule__SimpleUI__WarningboxAssignment_2_3)
{ after(grammarAccess.getSimpleUIAccess().getWarningboxAssignment_2_3()); }
)

    |(
{ before(grammarAccess.getSimpleUIAccess().getViewboxAssignment_2_4()); }
(rule__SimpleUI__ViewboxAssignment_2_4)
{ after(grammarAccess.getSimpleUIAccess().getViewboxAssignment_2_4()); }
)

    |(
{ before(grammarAccess.getSimpleUIAccess().getItemoperationAssignment_2_5()); }
(rule__SimpleUI__ItemoperationAssignment_2_5)
{ after(grammarAccess.getSimpleUIAccess().getItemoperationAssignment_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ItemOperation__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemOperationAccess().getMenuitemAssignment_2_0()); }
(rule__ItemOperation__MenuitemAssignment_2_0)
{ after(grammarAccess.getItemOperationAccess().getMenuitemAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getItemOperationAccess().getContextitemAssignment_2_1()); }
(rule__ItemOperation__ContextitemAssignment_2_1)
{ after(grammarAccess.getItemOperationAccess().getContextitemAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MenuItem__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMenuItemAccess().getInsertmenuitemAssignment_2_0()); }
(rule__MenuItem__InsertmenuitemAssignment_2_0)
{ after(grammarAccess.getMenuItemAccess().getInsertmenuitemAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getMenuItemAccess().getRemovemenuitemAssignment_2_1()); }
(rule__MenuItem__RemovemenuitemAssignment_2_1)
{ after(grammarAccess.getMenuItemAccess().getRemovemenuitemAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContextItem__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextItemAccess().getInsertcontextitemAssignment_2_0()); }
(rule__ContextItem__InsertcontextitemAssignment_2_0)
{ after(grammarAccess.getContextItemAccess().getInsertcontextitemAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getContextItemAccess().getRemovecontextitemAssignment_2_1()); }
(rule__ContextItem__RemovecontextitemAssignment_2_1)
{ after(grammarAccess.getContextItemAccess().getRemovecontextitemAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelOperation__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelOperationAccess().getModelcreateAssignment_2_0()); }
(rule__ModelOperation__ModelcreateAssignment_2_0)
{ after(grammarAccess.getModelOperationAccess().getModelcreateAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getModelOperationAccess().getModeldeleteAssignment_2_1()); }
(rule__ModelOperation__ModeldeleteAssignment_2_1)
{ after(grammarAccess.getModelOperationAccess().getModeldeleteAssignment_2_1()); }
)

    |(
{ before(grammarAccess.getModelOperationAccess().getModeldiscardAssignment_2_2()); }
(rule__ModelOperation__ModeldiscardAssignment_2_2)
{ after(grammarAccess.getModelOperationAccess().getModeldiscardAssignment_2_2()); }
)

    |(
{ before(grammarAccess.getModelOperationAccess().getModelsaveAssignment_2_3()); }
(rule__ModelOperation__ModelsaveAssignment_2_3)
{ after(grammarAccess.getModelOperationAccess().getModelsaveAssignment_2_3()); }
)

    |(
{ before(grammarAccess.getModelOperationAccess().getModelloadAssignment_2_4()); }
(rule__ModelOperation__ModelloadAssignment_2_4)
{ after(grammarAccess.getModelOperationAccess().getModelloadAssignment_2_4()); }
)

    |(
{ before(grammarAccess.getModelOperationAccess().getModelisloadedAssignment_2_5()); }
(rule__ModelOperation__ModelisloadedAssignment_2_5)
{ after(grammarAccess.getModelOperationAccess().getModelisloadedAssignment_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOperation__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOperationAccess().getClassinstanceAssignment_2_0()); }
(rule__InstanceOperation__ClassinstanceAssignment_2_0)
{ after(grammarAccess.getInstanceOperationAccess().getClassinstanceAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getInstanceOperationAccess().getRelationinstanceAssignment_2_1()); }
(rule__InstanceOperation__RelationinstanceAssignment_2_1)
{ after(grammarAccess.getInstanceOperationAccess().getRelationinstanceAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstance__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceAccess().getClassinstancecreateAssignment_2_0()); }
(rule__ClassInstance__ClassinstancecreateAssignment_2_0)
{ after(grammarAccess.getClassInstanceAccess().getClassinstancecreateAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getClassInstanceAccess().getClassinstancedeleteAssignment_2_1()); }
(rule__ClassInstance__ClassinstancedeleteAssignment_2_1)
{ after(grammarAccess.getClassInstanceAccess().getClassinstancedeleteAssignment_2_1()); }
)

    |(
{ before(grammarAccess.getClassInstanceAccess().getClassinstancegetAssignment_2_2()); }
(rule__ClassInstance__ClassinstancegetAssignment_2_2)
{ after(grammarAccess.getClassInstanceAccess().getClassinstancegetAssignment_2_2()); }
)

    |(
{ before(grammarAccess.getClassInstanceAccess().getClassinstancesetAssignment_2_3()); }
(rule__ClassInstance__ClassinstancesetAssignment_2_3)
{ after(grammarAccess.getClassInstanceAccess().getClassinstancesetAssignment_2_3()); }
)

    |(
{ before(grammarAccess.getClassInstanceAccess().getClassinstancegetallAssignment_2_4()); }
(rule__ClassInstance__ClassinstancegetallAssignment_2_4)
{ after(grammarAccess.getClassInstanceAccess().getClassinstancegetallAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstance__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceAccess().getRelationinstancecreateAssignment_2_0()); }
(rule__RelationInstance__RelationinstancecreateAssignment_2_0)
{ after(grammarAccess.getRelationInstanceAccess().getRelationinstancecreateAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getRelationInstanceAccess().getRelationinstancedeleteAssignment_2_1()); }
(rule__RelationInstance__RelationinstancedeleteAssignment_2_1)
{ after(grammarAccess.getRelationInstanceAccess().getRelationinstancedeleteAssignment_2_1()); }
)

    |(
{ before(grammarAccess.getRelationInstanceAccess().getRelationinstancegetAssignment_2_2()); }
(rule__RelationInstance__RelationinstancegetAssignment_2_2)
{ after(grammarAccess.getRelationInstanceAccess().getRelationinstancegetAssignment_2_2()); }
)

    |(
{ before(grammarAccess.getRelationInstanceAccess().getRelationinstancesetAssignment_2_3()); }
(rule__RelationInstance__RelationinstancesetAssignment_2_3)
{ after(grammarAccess.getRelationInstanceAccess().getRelationinstancesetAssignment_2_3()); }
)

    |(
{ before(grammarAccess.getRelationInstanceAccess().getRelationinstancegetallAssignment_2_4()); }
(rule__RelationInstance__RelationinstancegetallAssignment_2_4)
{ after(grammarAccess.getRelationInstanceAccess().getRelationinstancegetallAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeOperation__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeOperationAccess().getAttributegetAssignment_2_0()); }
(rule__AttributeOperation__AttributegetAssignment_2_0)
{ after(grammarAccess.getAttributeOperationAccess().getAttributegetAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getAttributeOperationAccess().getAttributesetAssignment_2_1()); }
(rule__AttributeOperation__AttributesetAssignment_2_1)
{ after(grammarAccess.getAttributeOperationAccess().getAttributesetAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSet__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSetAccess().getValueStringAssignment_3_0()); }
(rule__AttributeSet__ValueStringAssignment_3_0)
{ after(grammarAccess.getAttributeSetAccess().getValueStringAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getAttributeSetAccess().getValueRealNumberAssignment_3_1()); }
(rule__AttributeSet__ValueRealNumberAssignment_3_1)
{ after(grammarAccess.getAttributeSetAccess().getValueRealNumberAssignment_3_1()); }
)

    |(
{ before(grammarAccess.getAttributeSetAccess().getValueVariableAssignment_3_2()); }
(rule__AttributeSet__ValueVariableAssignment_3_2)
{ after(grammarAccess.getAttributeSetAccess().getValueVariableAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getGroup_0()); }
(rule__XAssignment__Group_0__0)
{ after(grammarAccess.getXAssignmentAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getXAssignmentAccess().getGroup_1()); }
(rule__XAssignment__Group_1__0)
{ after(grammarAccess.getXAssignmentAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiAssign__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0()); }

	'+=' 

{ after(grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1()); }

	'-=' 

{ after(grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpEquality__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); }

	'==' 

{ after(grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); }

	'!=' 

{ after(grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); }

	'===' 

{ after(grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3()); }

	'!==' 

{ after(grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0()); }
(rule__XRelationalExpression__Group_1_0__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1()); }
(rule__XRelationalExpression__Group_1_1__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpCompare__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); }

	'>=' 

{ after(grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_1()); }

	'<=' 

{ after(grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); }

	'>' 

{ after(grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); }

	'<' 

{ after(grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0()); }

	'->' 

{ after(grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1()); }

	'..<' 

{ after(grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getGroup_2()); }
(rule__OpOther__Group_2__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3()); }

	'..' 

{ after(grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4()); }

	'=>' 

{ after(grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getGroup_5()); }
(rule__OpOther__Group_5__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getGroup_6()); }
(rule__OpOther__Group_6__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7()); }

	'<>' 

{ after(grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8()); }

	'?:' 

{ after(grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_9()); }

	'<=>' 

{ after(grammarAccess.getOpOtherAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Alternatives_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGroup_5_1_0()); }
(rule__OpOther__Group_5_1_0__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_5_1_0()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1()); }

	'>' 

{ after(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Alternatives_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGroup_6_1_0()); }
(rule__OpOther__Group_6_1_0__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_6_1_0()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1()); }

	'<' 

{ after(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpAdd__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); }

	'+' 

{ after(grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpMulti__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); }

	'*' 

{ after(grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1()); }

	'**' 

{ after(grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpMultiAccess().getSolidusKeyword_2()); }

	'/' 

{ after(grammarAccess.getOpMultiAccess().getSolidusKeyword_2()); }
)

    |(
{ before(grammarAccess.getOpMultiAccess().getPercentSignKeyword_3()); }

	'%' 

{ after(grammarAccess.getOpMultiAccess().getPercentSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getGroup_0()); }
(rule__XUnaryOperation__Group_0__0)
{ after(grammarAccess.getXUnaryOperationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1()); }
	ruleXCastedExpression
{ after(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpUnary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); }

	'!' 

{ after(grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); }

	'+' 

{ after(grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_0()); }
(rule__XMemberFeatureCall__Group_1_0__0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1()); }
(rule__XMemberFeatureCall__Group_1_1__0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Alternatives_1_0_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1_0()); }

	'.' 

{ after(grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1_0()); }
)

    |(
{ before(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticAssignment_1_0_0_0_1_1()); }
(rule__XMemberFeatureCall__ExplicitStaticAssignment_1_0_0_0_1_1)
{ after(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticAssignment_1_0_0_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Alternatives_1_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0()); }

	'.' 

{ after(grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0()); }
)

    |(
{ before(grammarAccess.getXMemberFeatureCallAccess().getNullSafeAssignment_1_1_0_0_1_1()); }
(rule__XMemberFeatureCall__NullSafeAssignment_1_1_0_0_1_1)
{ after(grammarAccess.getXMemberFeatureCallAccess().getNullSafeAssignment_1_1_0_0_1_1()); }
)

    |(
{ before(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticAssignment_1_1_0_0_1_2()); }
(rule__XMemberFeatureCall__ExplicitStaticAssignment_1_1_0_0_1_2)
{ after(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticAssignment_1_1_0_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Alternatives_1_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_0()); }
(rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_0()); }
)

    |(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_3_1_1()); }
(rule__XMemberFeatureCall__Group_1_1_3_1_1__0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XPrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0()); }
	ruleXConstructorCall
{ after(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1()); }
	ruleXBlockExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2()); }
	ruleXSwitchExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_3()); }
	ruleXFeatureCall
{ after(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_4()); }
	ruleXLiteral
{ after(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_5()); }
	ruleXIfExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_6()); }
	ruleXForLoopExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_7()); }
	ruleXWhileExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_8()); }
	ruleXDoWhileExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_9()); }
	ruleXThrowExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_10()); }
	ruleXReturnExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_11()); }
	ruleXTryCatchFinallyExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_12()); }
	ruleXParenthesizedExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0()); }
	ruleXCollectionLiteral
{ after(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1()); }
(	ruleXClosure)
{ after(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2()); }
	ruleXBooleanLiteral
{ after(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3()); }
	ruleXNumberLiteral
{ after(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4()); }
	ruleXNullLiteral
{ after(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5()); }
	ruleXStringLiteral
{ after(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6()); }
	ruleXTypeLiteral
{ after(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCollectionLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0()); }
	ruleXSetLiteral
{ after(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1()); }
	ruleXListLiteral
{ after(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup_2_0()); }
(rule__XSwitchExpression__Group_2_0__0)
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup_2_1()); }
(rule__XSwitchExpression__Group_2_1__0)
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionInsideBlock__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionInsideBlockAccess().getXVariableDeclarationParserRuleCall_0()); }
	ruleXVariableDeclaration
{ after(grammarAccess.getXExpressionInsideBlockAccess().getXVariableDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getXExpressionInsideBlockAccess().getXExpressionParserRuleCall_1()); }
	ruleXExpression
{ after(grammarAccess.getXExpressionInsideBlockAccess().getXExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getWriteableAssignment_1_0()); }
(rule__XVariableDeclaration__WriteableAssignment_1_0)
{ after(grammarAccess.getXVariableDeclarationAccess().getWriteableAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1()); }

	'val' 

{ after(grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getGroup_2_0()); }
(rule__XVariableDeclaration__Group_2_0__0)
{ after(grammarAccess.getXVariableDeclarationAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getXVariableDeclarationAccess().getNameAssignment_2_1()); }
(rule__XVariableDeclaration__NameAssignment_2_1)
{ after(grammarAccess.getXVariableDeclarationAccess().getNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Alternatives_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_3_1_0()); }
(rule__XFeatureCall__FeatureCallArgumentsAssignment_3_1_0)
{ after(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_3_1_0()); }
)

    |(
{ before(grammarAccess.getXFeatureCallAccess().getGroup_3_1_1()); }
(rule__XFeatureCall__Group_3_1_1__0)
{ after(grammarAccess.getXFeatureCallAccess().getGroup_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCallID__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0()); }
	ruleValidID
{ after(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1()); }

	'extends' 

{ after(grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1()); }
)

    |(
{ before(grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2()); }

	'static' 

{ after(grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2()); }
)

    |(
{ before(grammarAccess.getFeatureCallIDAccess().getImportKeyword_3()); }

	'import' 

{ after(grammarAccess.getFeatureCallIDAccess().getImportKeyword_3()); }
)

    |(
{ before(grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4()); }

	'extension' 

{ after(grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdOrSuper__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0()); }
	ruleFeatureCallID
{ after(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIdOrSuperAccess().getSuperKeyword_1()); }

	'super' 

{ after(grammarAccess.getIdOrSuperAccess().getSuperKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Alternatives_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_4_1_0()); }
(rule__XConstructorCall__ArgumentsAssignment_4_1_0)
{ after(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_4_1_0()); }
)

    |(
{ before(grammarAccess.getXConstructorCallAccess().getGroup_4_1_1()); }
(rule__XConstructorCall__Group_4_1_1__0)
{ after(grammarAccess.getXConstructorCallAccess().getGroup_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XBooleanLiteral__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0()); }

	'false' 

{ after(grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getXBooleanLiteralAccess().getIsTrueAssignment_1_1()); }
(rule__XBooleanLiteral__IsTrueAssignment_1_1)
{ after(grammarAccess.getXBooleanLiteralAccess().getIsTrueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_3_0()); }
(rule__XTryCatchFinallyExpression__Group_3_0__0)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_3_1()); }
(rule__XTryCatchFinallyExpression__Group_3_1__0)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); }
	RULE_HEX
{ after(grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getGroup_1()); }
(rule__Number__Group_1__0)
{ after(grammarAccess.getNumberAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); }
	RULE_INT
{ after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); }
	RULE_DECIMAL
{ after(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); }
	RULE_INT
{ after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); }
	RULE_DECIMAL
{ after(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getGroup_0()); }
(rule__JvmTypeReference__Group_0__0)
{ after(grammarAccess.getJvmTypeReferenceAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1()); }
	ruleXFunctionTypeRef
{ after(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmArgumentTypeReference__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0()); }
	ruleJvmTypeReference
{ after(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1()); }
	ruleJvmWildcardTypeReference
{ after(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_0()); }
(rule__JvmWildcardTypeReference__ConstraintsAssignment_2_0)
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_1()); }
(rule__JvmWildcardTypeReference__ConstraintsAssignment_2_1)
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getGroup_1_0()); }
(rule__XImportDeclaration__Group_1_0__0)
{ after(grammarAccess.getXImportDeclarationAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_1()); }
(rule__XImportDeclaration__ImportedTypeAssignment_1_1)
{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_1()); }
)

    |(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceAssignment_1_2()); }
(rule__XImportDeclaration__ImportedNamespaceAssignment_1_2)
{ after(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessTypeAccess().getWriteEnumLiteralDeclaration_0()); }
(	'write' 
)
{ after(grammarAccess.getAccessTypeAccess().getWriteEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAccessTypeAccess().getReadEnumLiteralDeclaration_1()); }
(	'read' 
)
{ after(grammarAccess.getAccessTypeAccess().getReadEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getAccessTypeAccess().getInternalEnumLiteralDeclaration_2()); }
(	'internal' 
)
{ after(grammarAccess.getAccessTypeAccess().getInternalEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleTypeAccess().getStringEnumLiteralDeclaration_0()); }
(	'string' 
)
{ after(grammarAccess.getSimpleTypeAccess().getStringEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getSimpleTypeAccess().getIntEnumLiteralDeclaration_1()); }
(	'int' 
)
{ after(grammarAccess.getSimpleTypeAccess().getIntEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getSimpleTypeAccess().getDoubleEnumLiteralDeclaration_2()); }
(	'double' 
)
{ after(grammarAccess.getSimpleTypeAccess().getDoubleEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Font__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFontAccess().getArialEnumLiteralDeclaration_0()); }
(	'Arial' 
)
{ after(grammarAccess.getFontAccess().getArialEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getFontAccess().getArialblackEnumLiteralDeclaration_1()); }
(	'Arial_Black' 
)
{ after(grammarAccess.getFontAccess().getArialblackEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getFontAccess().getComicsansmsEnumLiteralDeclaration_2()); }
(	'Comic_Sans_MS' 
)
{ after(grammarAccess.getFontAccess().getComicsansmsEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getFontAccess().getCouriernewEnumLiteralDeclaration_3()); }
(	'Courier_New' 
)
{ after(grammarAccess.getFontAccess().getCouriernewEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getFontAccess().getGeorgiaEnumLiteralDeclaration_4()); }
(	'Georgia' 
)
{ after(grammarAccess.getFontAccess().getGeorgiaEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getFontAccess().getImpactEnumLiteralDeclaration_5()); }
(	'Impact' 
)
{ after(grammarAccess.getFontAccess().getImpactEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getFontAccess().getLucidaconsoleEnumLiteralDeclaration_6()); }
(	'Lucida_Console' 
)
{ after(grammarAccess.getFontAccess().getLucidaconsoleEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getFontAccess().getLucidasansunicodeEnumLiteralDeclaration_7()); }
(	'Lucida_Sans_Unicode' 
)
{ after(grammarAccess.getFontAccess().getLucidasansunicodeEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getFontAccess().getPalatinolinotypeEnumLiteralDeclaration_8()); }
(	'Palatino_Linotype' 
)
{ after(grammarAccess.getFontAccess().getPalatinolinotypeEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getFontAccess().getTahomaEnumLiteralDeclaration_9()); }
(	'Tahoma' 
)
{ after(grammarAccess.getFontAccess().getTahomaEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getFontAccess().getTimesnewromanEnumLiteralDeclaration_10()); }
(	'Times_New_Roman' 
)
{ after(grammarAccess.getFontAccess().getTimesnewromanEnumLiteralDeclaration_10()); }
)

    |(
{ before(grammarAccess.getFontAccess().getTrebuchetmsEnumLiteralDeclaration_11()); }
(	'Trebuchet_MS' 
)
{ after(grammarAccess.getFontAccess().getTrebuchetmsEnumLiteralDeclaration_11()); }
)

    |(
{ before(grammarAccess.getFontAccess().getVerdanaEnumLiteralDeclaration_12()); }
(	'Verdana' 
)
{ after(grammarAccess.getFontAccess().getVerdanaEnumLiteralDeclaration_12()); }
)

    |(
{ before(grammarAccess.getFontAccess().getSymbolEnumLiteralDeclaration_13()); }
(	'Symbol' 
)
{ after(grammarAccess.getFontAccess().getSymbolEnumLiteralDeclaration_13()); }
)

    |(
{ before(grammarAccess.getFontAccess().getWebdingsEnumLiteralDeclaration_14()); }
(	'Webdings' 
)
{ after(grammarAccess.getFontAccess().getWebdingsEnumLiteralDeclaration_14()); }
)

    |(
{ before(grammarAccess.getFontAccess().getWindingsEnumLiteralDeclaration_15()); }
(	'Wingdings' 
)
{ after(grammarAccess.getFontAccess().getWindingsEnumLiteralDeclaration_15()); }
)

    |(
{ before(grammarAccess.getFontAccess().getMssansserifEnumLiteralDeclaration_16()); }
(	'MS_Sans_Serif' 
)
{ after(grammarAccess.getFontAccess().getMssansserifEnumLiteralDeclaration_16()); }
)

    |(
{ before(grammarAccess.getFontAccess().getMsserifEnumLiteralDeclaration_17()); }
(	'MS_Serif' 
)
{ after(grammarAccess.getFontAccess().getMsserifEnumLiteralDeclaration_17()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Color__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorAccess().getAliceblueEnumLiteralDeclaration_0()); }
(	'aliceblue' 
)
{ after(grammarAccess.getColorAccess().getAliceblueEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getColorAccess().getAntiquewhiteEnumLiteralDeclaration_1()); }
(	'antiquewhite' 
)
{ after(grammarAccess.getColorAccess().getAntiquewhiteEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getColorAccess().getAquaEnumLiteralDeclaration_2()); }
(	'aqua' 
)
{ after(grammarAccess.getColorAccess().getAquaEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getColorAccess().getAquamarineEnumLiteralDeclaration_3()); }
(	'aquamarine' 
)
{ after(grammarAccess.getColorAccess().getAquamarineEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getColorAccess().getAzureEnumLiteralDeclaration_4()); }
(	'azure' 
)
{ after(grammarAccess.getColorAccess().getAzureEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getColorAccess().getBeigeEnumLiteralDeclaration_5()); }
(	'beige' 
)
{ after(grammarAccess.getColorAccess().getBeigeEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getColorAccess().getBisqueEnumLiteralDeclaration_6()); }
(	'bisque' 
)
{ after(grammarAccess.getColorAccess().getBisqueEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getColorAccess().getBlackEnumLiteralDeclaration_7()); }
(	'black' 
)
{ after(grammarAccess.getColorAccess().getBlackEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getColorAccess().getBlanchedalmondEnumLiteralDeclaration_8()); }
(	'blanchedalmond' 
)
{ after(grammarAccess.getColorAccess().getBlanchedalmondEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getColorAccess().getBlueEnumLiteralDeclaration_9()); }
(	'blue' 
)
{ after(grammarAccess.getColorAccess().getBlueEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getColorAccess().getBluevioletEnumLiteralDeclaration_10()); }
(	'blueviolet' 
)
{ after(grammarAccess.getColorAccess().getBluevioletEnumLiteralDeclaration_10()); }
)

    |(
{ before(grammarAccess.getColorAccess().getBrownEnumLiteralDeclaration_11()); }
(	'brown' 
)
{ after(grammarAccess.getColorAccess().getBrownEnumLiteralDeclaration_11()); }
)

    |(
{ before(grammarAccess.getColorAccess().getBurlywoodEnumLiteralDeclaration_12()); }
(	'burlywood' 
)
{ after(grammarAccess.getColorAccess().getBurlywoodEnumLiteralDeclaration_12()); }
)

    |(
{ before(grammarAccess.getColorAccess().getCadetblueEnumLiteralDeclaration_13()); }
(	'cadetblue' 
)
{ after(grammarAccess.getColorAccess().getCadetblueEnumLiteralDeclaration_13()); }
)

    |(
{ before(grammarAccess.getColorAccess().getChartreuseEnumLiteralDeclaration_14()); }
(	'chartreuse' 
)
{ after(grammarAccess.getColorAccess().getChartreuseEnumLiteralDeclaration_14()); }
)

    |(
{ before(grammarAccess.getColorAccess().getChocolateEnumLiteralDeclaration_15()); }
(	'chocolate' 
)
{ after(grammarAccess.getColorAccess().getChocolateEnumLiteralDeclaration_15()); }
)

    |(
{ before(grammarAccess.getColorAccess().getCoralEnumLiteralDeclaration_16()); }
(	'coral' 
)
{ after(grammarAccess.getColorAccess().getCoralEnumLiteralDeclaration_16()); }
)

    |(
{ before(grammarAccess.getColorAccess().getCornflowerblueEnumLiteralDeclaration_17()); }
(	'cornflowerblue' 
)
{ after(grammarAccess.getColorAccess().getCornflowerblueEnumLiteralDeclaration_17()); }
)

    |(
{ before(grammarAccess.getColorAccess().getCornsilkEnumLiteralDeclaration_18()); }
(	'cornsilk' 
)
{ after(grammarAccess.getColorAccess().getCornsilkEnumLiteralDeclaration_18()); }
)

    |(
{ before(grammarAccess.getColorAccess().getCrimsonEnumLiteralDeclaration_19()); }
(	'crimson' 
)
{ after(grammarAccess.getColorAccess().getCrimsonEnumLiteralDeclaration_19()); }
)

    |(
{ before(grammarAccess.getColorAccess().getCyanEnumLiteralDeclaration_20()); }
(	'cyan' 
)
{ after(grammarAccess.getColorAccess().getCyanEnumLiteralDeclaration_20()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkblueEnumLiteralDeclaration_21()); }
(	'darkblue' 
)
{ after(grammarAccess.getColorAccess().getDarkblueEnumLiteralDeclaration_21()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkcyanEnumLiteralDeclaration_22()); }
(	'darkcyan' 
)
{ after(grammarAccess.getColorAccess().getDarkcyanEnumLiteralDeclaration_22()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkgoldenrodEnumLiteralDeclaration_23()); }
(	'darkgoldenrod' 
)
{ after(grammarAccess.getColorAccess().getDarkgoldenrodEnumLiteralDeclaration_23()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkgrayEnumLiteralDeclaration_24()); }
(	'darkgray' 
)
{ after(grammarAccess.getColorAccess().getDarkgrayEnumLiteralDeclaration_24()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkgreenEnumLiteralDeclaration_25()); }
(	'darkgreen' 
)
{ after(grammarAccess.getColorAccess().getDarkgreenEnumLiteralDeclaration_25()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkkhakiEnumLiteralDeclaration_26()); }
(	'darkkhaki' 
)
{ after(grammarAccess.getColorAccess().getDarkkhakiEnumLiteralDeclaration_26()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkmagentaEnumLiteralDeclaration_27()); }
(	'darkmagenta' 
)
{ after(grammarAccess.getColorAccess().getDarkmagentaEnumLiteralDeclaration_27()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkolivegreenEnumLiteralDeclaration_28()); }
(	'darkolivegreen' 
)
{ after(grammarAccess.getColorAccess().getDarkolivegreenEnumLiteralDeclaration_28()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkorangeEnumLiteralDeclaration_29()); }
(	'darkorange' 
)
{ after(grammarAccess.getColorAccess().getDarkorangeEnumLiteralDeclaration_29()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkorchidEnumLiteralDeclaration_30()); }
(	'darkorchid' 
)
{ after(grammarAccess.getColorAccess().getDarkorchidEnumLiteralDeclaration_30()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkredEnumLiteralDeclaration_31()); }
(	'darkred' 
)
{ after(grammarAccess.getColorAccess().getDarkredEnumLiteralDeclaration_31()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarksalmonEnumLiteralDeclaration_32()); }
(	'darksalmon' 
)
{ after(grammarAccess.getColorAccess().getDarksalmonEnumLiteralDeclaration_32()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkseagreenEnumLiteralDeclaration_33()); }
(	'darkseagreen' 
)
{ after(grammarAccess.getColorAccess().getDarkseagreenEnumLiteralDeclaration_33()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkslateblueEnumLiteralDeclaration_34()); }
(	'darkslateblue' 
)
{ after(grammarAccess.getColorAccess().getDarkslateblueEnumLiteralDeclaration_34()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkslategrayEnumLiteralDeclaration_35()); }
(	'darkslategray' 
)
{ after(grammarAccess.getColorAccess().getDarkslategrayEnumLiteralDeclaration_35()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkturquoiseEnumLiteralDeclaration_36()); }
(	'darkturquoise' 
)
{ after(grammarAccess.getColorAccess().getDarkturquoiseEnumLiteralDeclaration_36()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDarkvioletEnumLiteralDeclaration_37()); }
(	'darkviolet' 
)
{ after(grammarAccess.getColorAccess().getDarkvioletEnumLiteralDeclaration_37()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDeeppinkEnumLiteralDeclaration_38()); }
(	'deeppink' 
)
{ after(grammarAccess.getColorAccess().getDeeppinkEnumLiteralDeclaration_38()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDeepskyblueEnumLiteralDeclaration_39()); }
(	'deepskyblue' 
)
{ after(grammarAccess.getColorAccess().getDeepskyblueEnumLiteralDeclaration_39()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDimgrayEnumLiteralDeclaration_40()); }
(	'dimgray' 
)
{ after(grammarAccess.getColorAccess().getDimgrayEnumLiteralDeclaration_40()); }
)

    |(
{ before(grammarAccess.getColorAccess().getDodgerblueEnumLiteralDeclaration_41()); }
(	'dodgerblue' 
)
{ after(grammarAccess.getColorAccess().getDodgerblueEnumLiteralDeclaration_41()); }
)

    |(
{ before(grammarAccess.getColorAccess().getFirebrickEnumLiteralDeclaration_42()); }
(	'firebrick' 
)
{ after(grammarAccess.getColorAccess().getFirebrickEnumLiteralDeclaration_42()); }
)

    |(
{ before(grammarAccess.getColorAccess().getFloralwhiteEnumLiteralDeclaration_43()); }
(	'floralwhite' 
)
{ after(grammarAccess.getColorAccess().getFloralwhiteEnumLiteralDeclaration_43()); }
)

    |(
{ before(grammarAccess.getColorAccess().getForestgreenEnumLiteralDeclaration_44()); }
(	'forestgreen' 
)
{ after(grammarAccess.getColorAccess().getForestgreenEnumLiteralDeclaration_44()); }
)

    |(
{ before(grammarAccess.getColorAccess().getFuchsiaEnumLiteralDeclaration_45()); }
(	'fuchsia' 
)
{ after(grammarAccess.getColorAccess().getFuchsiaEnumLiteralDeclaration_45()); }
)

    |(
{ before(grammarAccess.getColorAccess().getGainsboroEnumLiteralDeclaration_46()); }
(	'gainsboro' 
)
{ after(grammarAccess.getColorAccess().getGainsboroEnumLiteralDeclaration_46()); }
)

    |(
{ before(grammarAccess.getColorAccess().getGhostwhiteEnumLiteralDeclaration_47()); }
(	'ghostwhite' 
)
{ after(grammarAccess.getColorAccess().getGhostwhiteEnumLiteralDeclaration_47()); }
)

    |(
{ before(grammarAccess.getColorAccess().getGoldEnumLiteralDeclaration_48()); }
(	'gold' 
)
{ after(grammarAccess.getColorAccess().getGoldEnumLiteralDeclaration_48()); }
)

    |(
{ before(grammarAccess.getColorAccess().getGoldenrodEnumLiteralDeclaration_49()); }
(	'goldenrod' 
)
{ after(grammarAccess.getColorAccess().getGoldenrodEnumLiteralDeclaration_49()); }
)

    |(
{ before(grammarAccess.getColorAccess().getGrayEnumLiteralDeclaration_50()); }
(	'gray' 
)
{ after(grammarAccess.getColorAccess().getGrayEnumLiteralDeclaration_50()); }
)

    |(
{ before(grammarAccess.getColorAccess().getGreenEnumLiteralDeclaration_51()); }
(	'green' 
)
{ after(grammarAccess.getColorAccess().getGreenEnumLiteralDeclaration_51()); }
)

    |(
{ before(grammarAccess.getColorAccess().getGreenyellowEnumLiteralDeclaration_52()); }
(	'greenyellow' 
)
{ after(grammarAccess.getColorAccess().getGreenyellowEnumLiteralDeclaration_52()); }
)

    |(
{ before(grammarAccess.getColorAccess().getHoneydewEnumLiteralDeclaration_53()); }
(	'honeydew' 
)
{ after(grammarAccess.getColorAccess().getHoneydewEnumLiteralDeclaration_53()); }
)

    |(
{ before(grammarAccess.getColorAccess().getHotpinkEnumLiteralDeclaration_54()); }
(	'hotpink' 
)
{ after(grammarAccess.getColorAccess().getHotpinkEnumLiteralDeclaration_54()); }
)

    |(
{ before(grammarAccess.getColorAccess().getIndianredEnumLiteralDeclaration_55()); }
(	'indianred' 
)
{ after(grammarAccess.getColorAccess().getIndianredEnumLiteralDeclaration_55()); }
)

    |(
{ before(grammarAccess.getColorAccess().getIndigoEnumLiteralDeclaration_56()); }
(	'indigo' 
)
{ after(grammarAccess.getColorAccess().getIndigoEnumLiteralDeclaration_56()); }
)

    |(
{ before(grammarAccess.getColorAccess().getIvoryEnumLiteralDeclaration_57()); }
(	'ivory' 
)
{ after(grammarAccess.getColorAccess().getIvoryEnumLiteralDeclaration_57()); }
)

    |(
{ before(grammarAccess.getColorAccess().getKhakiEnumLiteralDeclaration_58()); }
(	'khaki' 
)
{ after(grammarAccess.getColorAccess().getKhakiEnumLiteralDeclaration_58()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLavenderEnumLiteralDeclaration_59()); }
(	'lavender' 
)
{ after(grammarAccess.getColorAccess().getLavenderEnumLiteralDeclaration_59()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLavenderblushEnumLiteralDeclaration_60()); }
(	'lavenderblush' 
)
{ after(grammarAccess.getColorAccess().getLavenderblushEnumLiteralDeclaration_60()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLawngreenEnumLiteralDeclaration_61()); }
(	'lawngreen' 
)
{ after(grammarAccess.getColorAccess().getLawngreenEnumLiteralDeclaration_61()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLemonchiffonEnumLiteralDeclaration_62()); }
(	'lemonchiffon' 
)
{ after(grammarAccess.getColorAccess().getLemonchiffonEnumLiteralDeclaration_62()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightblueEnumLiteralDeclaration_63()); }
(	'lightblue' 
)
{ after(grammarAccess.getColorAccess().getLightblueEnumLiteralDeclaration_63()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightcoralEnumLiteralDeclaration_64()); }
(	'lightcoral' 
)
{ after(grammarAccess.getColorAccess().getLightcoralEnumLiteralDeclaration_64()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightcyanEnumLiteralDeclaration_65()); }
(	'lightcyan' 
)
{ after(grammarAccess.getColorAccess().getLightcyanEnumLiteralDeclaration_65()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightgoldenrodyellowEnumLiteralDeclaration_66()); }
(	'lightgoldenrodyellow' 
)
{ after(grammarAccess.getColorAccess().getLightgoldenrodyellowEnumLiteralDeclaration_66()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightgreenEnumLiteralDeclaration_67()); }
(	'lightgreen' 
)
{ after(grammarAccess.getColorAccess().getLightgreenEnumLiteralDeclaration_67()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightgrayEnumLiteralDeclaration_68()); }
(	'lightgray' 
)
{ after(grammarAccess.getColorAccess().getLightgrayEnumLiteralDeclaration_68()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightmagentaEnumLiteralDeclaration_69()); }
(	'lightmagenta' 
)
{ after(grammarAccess.getColorAccess().getLightmagentaEnumLiteralDeclaration_69()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightpinkEnumLiteralDeclaration_70()); }
(	'lightpink' 
)
{ after(grammarAccess.getColorAccess().getLightpinkEnumLiteralDeclaration_70()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightsalmonEnumLiteralDeclaration_71()); }
(	'lightsalmon' 
)
{ after(grammarAccess.getColorAccess().getLightsalmonEnumLiteralDeclaration_71()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightseagreenEnumLiteralDeclaration_72()); }
(	'lightseagreen' 
)
{ after(grammarAccess.getColorAccess().getLightseagreenEnumLiteralDeclaration_72()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightskyblueEnumLiteralDeclaration_73()); }
(	'lightskyblue' 
)
{ after(grammarAccess.getColorAccess().getLightskyblueEnumLiteralDeclaration_73()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightslategrayEnumLiteralDeclaration_74()); }
(	'lightslategray' 
)
{ after(grammarAccess.getColorAccess().getLightslategrayEnumLiteralDeclaration_74()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightsteelblueEnumLiteralDeclaration_75()); }
(	'lightsteelblue' 
)
{ after(grammarAccess.getColorAccess().getLightsteelblueEnumLiteralDeclaration_75()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLightyellowEnumLiteralDeclaration_76()); }
(	'lightyellow' 
)
{ after(grammarAccess.getColorAccess().getLightyellowEnumLiteralDeclaration_76()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLimeEnumLiteralDeclaration_77()); }
(	'lime' 
)
{ after(grammarAccess.getColorAccess().getLimeEnumLiteralDeclaration_77()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLimegreenEnumLiteralDeclaration_78()); }
(	'limegreen' 
)
{ after(grammarAccess.getColorAccess().getLimegreenEnumLiteralDeclaration_78()); }
)

    |(
{ before(grammarAccess.getColorAccess().getLinenEnumLiteralDeclaration_79()); }
(	'linen' 
)
{ after(grammarAccess.getColorAccess().getLinenEnumLiteralDeclaration_79()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMagentaEnumLiteralDeclaration_80()); }
(	'magenta' 
)
{ after(grammarAccess.getColorAccess().getMagentaEnumLiteralDeclaration_80()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMaroonEnumLiteralDeclaration_81()); }
(	'maroon' 
)
{ after(grammarAccess.getColorAccess().getMaroonEnumLiteralDeclaration_81()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMediumaquamarineEnumLiteralDeclaration_82()); }
(	'mediumaquamarine' 
)
{ after(grammarAccess.getColorAccess().getMediumaquamarineEnumLiteralDeclaration_82()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMediumblueEnumLiteralDeclaration_83()); }
(	'mediumblue' 
)
{ after(grammarAccess.getColorAccess().getMediumblueEnumLiteralDeclaration_83()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMediumorchidEnumLiteralDeclaration_84()); }
(	'mediumorchid' 
)
{ after(grammarAccess.getColorAccess().getMediumorchidEnumLiteralDeclaration_84()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMediumpurpleEnumLiteralDeclaration_85()); }
(	'mediumpurple' 
)
{ after(grammarAccess.getColorAccess().getMediumpurpleEnumLiteralDeclaration_85()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMediumseagreenEnumLiteralDeclaration_86()); }
(	'mediumseagreen' 
)
{ after(grammarAccess.getColorAccess().getMediumseagreenEnumLiteralDeclaration_86()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMediumslateblueEnumLiteralDeclaration_87()); }
(	'mediumslateblue' 
)
{ after(grammarAccess.getColorAccess().getMediumslateblueEnumLiteralDeclaration_87()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMediumspringgreenEnumLiteralDeclaration_88()); }
(	'mediumspringgreen' 
)
{ after(grammarAccess.getColorAccess().getMediumspringgreenEnumLiteralDeclaration_88()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMediumturquoiseEnumLiteralDeclaration_89()); }
(	'mediumturquoise' 
)
{ after(grammarAccess.getColorAccess().getMediumturquoiseEnumLiteralDeclaration_89()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMediumvioletredEnumLiteralDeclaration_90()); }
(	'mediumvioletred' 
)
{ after(grammarAccess.getColorAccess().getMediumvioletredEnumLiteralDeclaration_90()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMidnightblueEnumLiteralDeclaration_91()); }
(	'midnightblue' 
)
{ after(grammarAccess.getColorAccess().getMidnightblueEnumLiteralDeclaration_91()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMintcreamEnumLiteralDeclaration_92()); }
(	'mintcream' 
)
{ after(grammarAccess.getColorAccess().getMintcreamEnumLiteralDeclaration_92()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMistyroseEnumLiteralDeclaration_93()); }
(	'mistyrose' 
)
{ after(grammarAccess.getColorAccess().getMistyroseEnumLiteralDeclaration_93()); }
)

    |(
{ before(grammarAccess.getColorAccess().getMoccasinEnumLiteralDeclaration_94()); }
(	'moccasin' 
)
{ after(grammarAccess.getColorAccess().getMoccasinEnumLiteralDeclaration_94()); }
)

    |(
{ before(grammarAccess.getColorAccess().getNavajowhiteEnumLiteralDeclaration_95()); }
(	'navajowhite' 
)
{ after(grammarAccess.getColorAccess().getNavajowhiteEnumLiteralDeclaration_95()); }
)

    |(
{ before(grammarAccess.getColorAccess().getNavyEnumLiteralDeclaration_96()); }
(	'navy' 
)
{ after(grammarAccess.getColorAccess().getNavyEnumLiteralDeclaration_96()); }
)

    |(
{ before(grammarAccess.getColorAccess().getOldlaceEnumLiteralDeclaration_97()); }
(	'oldlace' 
)
{ after(grammarAccess.getColorAccess().getOldlaceEnumLiteralDeclaration_97()); }
)

    |(
{ before(grammarAccess.getColorAccess().getOliveEnumLiteralDeclaration_98()); }
(	'olive' 
)
{ after(grammarAccess.getColorAccess().getOliveEnumLiteralDeclaration_98()); }
)

    |(
{ before(grammarAccess.getColorAccess().getOlivedrabEnumLiteralDeclaration_99()); }
(	'olivedrab' 
)
{ after(grammarAccess.getColorAccess().getOlivedrabEnumLiteralDeclaration_99()); }
)

    |(
{ before(grammarAccess.getColorAccess().getOrangeEnumLiteralDeclaration_100()); }
(	'orange' 
)
{ after(grammarAccess.getColorAccess().getOrangeEnumLiteralDeclaration_100()); }
)

    |(
{ before(grammarAccess.getColorAccess().getOrangeredEnumLiteralDeclaration_101()); }
(	'orangered' 
)
{ after(grammarAccess.getColorAccess().getOrangeredEnumLiteralDeclaration_101()); }
)

    |(
{ before(grammarAccess.getColorAccess().getOrchidEnumLiteralDeclaration_102()); }
(	'orchid' 
)
{ after(grammarAccess.getColorAccess().getOrchidEnumLiteralDeclaration_102()); }
)

    |(
{ before(grammarAccess.getColorAccess().getPalegoldenrodEnumLiteralDeclaration_103()); }
(	'palegoldenrod' 
)
{ after(grammarAccess.getColorAccess().getPalegoldenrodEnumLiteralDeclaration_103()); }
)

    |(
{ before(grammarAccess.getColorAccess().getPalegreenEnumLiteralDeclaration_104()); }
(	'palegreen' 
)
{ after(grammarAccess.getColorAccess().getPalegreenEnumLiteralDeclaration_104()); }
)

    |(
{ before(grammarAccess.getColorAccess().getPaleturquoiseEnumLiteralDeclaration_105()); }
(	'paleturquoise' 
)
{ after(grammarAccess.getColorAccess().getPaleturquoiseEnumLiteralDeclaration_105()); }
)

    |(
{ before(grammarAccess.getColorAccess().getPalevioletredEnumLiteralDeclaration_106()); }
(	'palevioletred' 
)
{ after(grammarAccess.getColorAccess().getPalevioletredEnumLiteralDeclaration_106()); }
)

    |(
{ before(grammarAccess.getColorAccess().getPapayawhipEnumLiteralDeclaration_107()); }
(	'papayawhip' 
)
{ after(grammarAccess.getColorAccess().getPapayawhipEnumLiteralDeclaration_107()); }
)

    |(
{ before(grammarAccess.getColorAccess().getPeachpuffEnumLiteralDeclaration_108()); }
(	'peachpuff' 
)
{ after(grammarAccess.getColorAccess().getPeachpuffEnumLiteralDeclaration_108()); }
)

    |(
{ before(grammarAccess.getColorAccess().getPeruEnumLiteralDeclaration_109()); }
(	'peru' 
)
{ after(grammarAccess.getColorAccess().getPeruEnumLiteralDeclaration_109()); }
)

    |(
{ before(grammarAccess.getColorAccess().getPinkEnumLiteralDeclaration_110()); }
(	'pink' 
)
{ after(grammarAccess.getColorAccess().getPinkEnumLiteralDeclaration_110()); }
)

    |(
{ before(grammarAccess.getColorAccess().getPlumEnumLiteralDeclaration_111()); }
(	'plum' 
)
{ after(grammarAccess.getColorAccess().getPlumEnumLiteralDeclaration_111()); }
)

    |(
{ before(grammarAccess.getColorAccess().getPowderblueEnumLiteralDeclaration_112()); }
(	'powderblue' 
)
{ after(grammarAccess.getColorAccess().getPowderblueEnumLiteralDeclaration_112()); }
)

    |(
{ before(grammarAccess.getColorAccess().getPurpleEnumLiteralDeclaration_113()); }
(	'purple' 
)
{ after(grammarAccess.getColorAccess().getPurpleEnumLiteralDeclaration_113()); }
)

    |(
{ before(grammarAccess.getColorAccess().getRedEnumLiteralDeclaration_114()); }
(	'red' 
)
{ after(grammarAccess.getColorAccess().getRedEnumLiteralDeclaration_114()); }
)

    |(
{ before(grammarAccess.getColorAccess().getRosybrownEnumLiteralDeclaration_115()); }
(	'rosybrown' 
)
{ after(grammarAccess.getColorAccess().getRosybrownEnumLiteralDeclaration_115()); }
)

    |(
{ before(grammarAccess.getColorAccess().getRoyalblueEnumLiteralDeclaration_116()); }
(	'royalblue' 
)
{ after(grammarAccess.getColorAccess().getRoyalblueEnumLiteralDeclaration_116()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSaddlebrownEnumLiteralDeclaration_117()); }
(	'saddlebrown' 
)
{ after(grammarAccess.getColorAccess().getSaddlebrownEnumLiteralDeclaration_117()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSalmonEnumLiteralDeclaration_118()); }
(	'salmon' 
)
{ after(grammarAccess.getColorAccess().getSalmonEnumLiteralDeclaration_118()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSandybrownEnumLiteralDeclaration_119()); }
(	'sandybrown' 
)
{ after(grammarAccess.getColorAccess().getSandybrownEnumLiteralDeclaration_119()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSeagreenEnumLiteralDeclaration_120()); }
(	'seagreen' 
)
{ after(grammarAccess.getColorAccess().getSeagreenEnumLiteralDeclaration_120()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSeashellEnumLiteralDeclaration_121()); }
(	'seashell' 
)
{ after(grammarAccess.getColorAccess().getSeashellEnumLiteralDeclaration_121()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSiennaEnumLiteralDeclaration_122()); }
(	'sienna' 
)
{ after(grammarAccess.getColorAccess().getSiennaEnumLiteralDeclaration_122()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSilverEnumLiteralDeclaration_123()); }
(	'silver' 
)
{ after(grammarAccess.getColorAccess().getSilverEnumLiteralDeclaration_123()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSkyblueEnumLiteralDeclaration_124()); }
(	'skyblue' 
)
{ after(grammarAccess.getColorAccess().getSkyblueEnumLiteralDeclaration_124()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSlateblueEnumLiteralDeclaration_125()); }
(	'slateblue' 
)
{ after(grammarAccess.getColorAccess().getSlateblueEnumLiteralDeclaration_125()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSlategrayEnumLiteralDeclaration_126()); }
(	'slategray' 
)
{ after(grammarAccess.getColorAccess().getSlategrayEnumLiteralDeclaration_126()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSnowEnumLiteralDeclaration_127()); }
(	'snow' 
)
{ after(grammarAccess.getColorAccess().getSnowEnumLiteralDeclaration_127()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSpringgreenEnumLiteralDeclaration_128()); }
(	'springgreen' 
)
{ after(grammarAccess.getColorAccess().getSpringgreenEnumLiteralDeclaration_128()); }
)

    |(
{ before(grammarAccess.getColorAccess().getSteelblueEnumLiteralDeclaration_129()); }
(	'steelblue' 
)
{ after(grammarAccess.getColorAccess().getSteelblueEnumLiteralDeclaration_129()); }
)

    |(
{ before(grammarAccess.getColorAccess().getTanEnumLiteralDeclaration_130()); }
(	'tan' 
)
{ after(grammarAccess.getColorAccess().getTanEnumLiteralDeclaration_130()); }
)

    |(
{ before(grammarAccess.getColorAccess().getTealEnumLiteralDeclaration_131()); }
(	'teal' 
)
{ after(grammarAccess.getColorAccess().getTealEnumLiteralDeclaration_131()); }
)

    |(
{ before(grammarAccess.getColorAccess().getThistleEnumLiteralDeclaration_132()); }
(	'thistle' 
)
{ after(grammarAccess.getColorAccess().getThistleEnumLiteralDeclaration_132()); }
)

    |(
{ before(grammarAccess.getColorAccess().getTomatoEnumLiteralDeclaration_133()); }
(	'tomato' 
)
{ after(grammarAccess.getColorAccess().getTomatoEnumLiteralDeclaration_133()); }
)

    |(
{ before(grammarAccess.getColorAccess().getTurquoiseEnumLiteralDeclaration_134()); }
(	'turquoise' 
)
{ after(grammarAccess.getColorAccess().getTurquoiseEnumLiteralDeclaration_134()); }
)

    |(
{ before(grammarAccess.getColorAccess().getVioletEnumLiteralDeclaration_135()); }
(	'violet' 
)
{ after(grammarAccess.getColorAccess().getVioletEnumLiteralDeclaration_135()); }
)

    |(
{ before(grammarAccess.getColorAccess().getWheatEnumLiteralDeclaration_136()); }
(	'wheat' 
)
{ after(grammarAccess.getColorAccess().getWheatEnumLiteralDeclaration_136()); }
)

    |(
{ before(grammarAccess.getColorAccess().getWhiteEnumLiteralDeclaration_137()); }
(	'white' 
)
{ after(grammarAccess.getColorAccess().getWhiteEnumLiteralDeclaration_137()); }
)

    |(
{ before(grammarAccess.getColorAccess().getWhitesmokeEnumLiteralDeclaration_138()); }
(	'whitesmoke' 
)
{ after(grammarAccess.getColorAccess().getWhitesmokeEnumLiteralDeclaration_138()); }
)

    |(
{ before(grammarAccess.getColorAccess().getYellowEnumLiteralDeclaration_139()); }
(	'yellow' 
)
{ after(grammarAccess.getColorAccess().getYellowEnumLiteralDeclaration_139()); }
)

    |(
{ before(grammarAccess.getColorAccess().getYellowgreenEnumLiteralDeclaration_140()); }
(	'yellowgreen' 
)
{ after(grammarAccess.getColorAccess().getYellowgreenEnumLiteralDeclaration_140()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ButtonType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getButtonTypeAccess().getOkEnumLiteralDeclaration_0()); }
(	'ok' 
)
{ after(grammarAccess.getButtonTypeAccess().getOkEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getButtonTypeAccess().getOkcancelEnumLiteralDeclaration_1()); }
(	'ok-cancel' 
)
{ after(grammarAccess.getButtonTypeAccess().getOkcancelEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getButtonTypeAccess().getYesnoEnumLiteralDeclaration_2()); }
(	'yes-no' 
)
{ after(grammarAccess.getButtonTypeAccess().getYesnoEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getButtonTypeAccess().getYesnocancelEnumLiteralDeclaration_3()); }
(	'yes-no-cancel' 
)
{ after(grammarAccess.getButtonTypeAccess().getYesnocancelEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getButtonTypeAccess().getRetrycancelEnumLiteralDeclaration_4()); }
(	'retry-cancel' 
)
{ after(grammarAccess.getButtonTypeAccess().getRetrycancelEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getButtonTypeAccess().getDefokEnumLiteralDeclaration_5()); }
(	'def-ok' 
)
{ after(grammarAccess.getButtonTypeAccess().getDefokEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getButtonTypeAccess().getDefcancelEnumLiteralDeclaration_6()); }
(	'def-cancel' 
)
{ after(grammarAccess.getButtonTypeAccess().getDefcancelEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getButtonTypeAccess().getDefyesEnumLiteralDeclaration_7()); }
(	'def-yes' 
)
{ after(grammarAccess.getButtonTypeAccess().getDefyesEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getButtonTypeAccess().getDefnoEnumLiteralDeclaration_8()); }
(	'def-no' 
)
{ after(grammarAccess.getButtonTypeAccess().getDefnoEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getButtonTypeAccess().getDefretryEnumLiteralDeclaration_9()); }
(	'def-retry' 
)
{ after(grammarAccess.getButtonTypeAccess().getDefretryEnumLiteralDeclaration_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttrGetParams__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrGetParamsAccess().getTypeEnumLiteralDeclaration_0()); }
(	'type' 
)
{ after(grammarAccess.getAttrGetParamsAccess().getTypeEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAttrGetParamsAccess().getValueEnumLiteralDeclaration_1()); }
(	'value' 
)
{ after(grammarAccess.getAttrGetParamsAccess().getValueEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getAttrGetParamsAccess().getNameEnumLiteralDeclaration_2()); }
(	'name' 
)
{ after(grammarAccess.getAttrGetParamsAccess().getNameEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventName__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventNameAccess().getBeforecreatemodelEnumLiteralDeclaration_0()); }
(	'BeforeCreateModel' 
)
{ after(grammarAccess.getEventNameAccess().getBeforecreatemodelEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getEventNameAccess().getBeforecreaterelationinstanceEnumLiteralDeclaration_1()); }
(	'BeforeCreateRelationInstance' 
)
{ after(grammarAccess.getEventNameAccess().getBeforecreaterelationinstanceEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getEventNameAccess().getBeforedeleteinstanceEnumLiteralDeclaration_2()); }
(	'BeforeDeleteInstance' 
)
{ after(grammarAccess.getEventNameAccess().getBeforedeleteinstanceEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getEventNameAccess().getBeforedeletemodelEnumLiteralDeclaration_3()); }
(	'BeforeDeleteModel' 
)
{ after(grammarAccess.getEventNameAccess().getBeforedeletemodelEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getEventNameAccess().getBeforediscardmodelEnumLiteralDeclaration_4()); }
(	'BeforeDiscardModel' 
)
{ after(grammarAccess.getEventNameAccess().getBeforediscardmodelEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getEventNameAccess().getBeforesavemodelEnumLiteralDeclaration_5()); }
(	'BeforeSaveModel' 
)
{ after(grammarAccess.getEventNameAccess().getBeforesavemodelEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getEventNameAccess().getCreateinstanceEnumLiteralDeclaration_6()); }
(	'CreateInstance' 
)
{ after(grammarAccess.getEventNameAccess().getCreateinstanceEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getEventNameAccess().getCreatemodelEnumLiteralDeclaration_7()); }
(	'CreateModel' 
)
{ after(grammarAccess.getEventNameAccess().getCreatemodelEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getEventNameAccess().getCreaterelationinstanceEnumLiteralDeclaration_8()); }
(	'CreateRelationInstance' 
)
{ after(grammarAccess.getEventNameAccess().getCreaterelationinstanceEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getEventNameAccess().getDeleteinstanceEnumLiteralDeclaration_9()); }
(	'DeleteInstance' 
)
{ after(grammarAccess.getEventNameAccess().getDeleteinstanceEnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getEventNameAccess().getDeletemodelEnumLiteralDeclaration_10()); }
(	'DeleteModel' 
)
{ after(grammarAccess.getEventNameAccess().getDeletemodelEnumLiteralDeclaration_10()); }
)

    |(
{ before(grammarAccess.getEventNameAccess().getDeleterelationinstanceEnumLiteralDeclaration_11()); }
(	'DeleteRelationInstance' 
)
{ after(grammarAccess.getEventNameAccess().getDeleterelationinstanceEnumLiteralDeclaration_11()); }
)

    |(
{ before(grammarAccess.getEventNameAccess().getDiscardinstanceEnumLiteralDeclaration_12()); }
(	'DiscardInstance' 
)
{ after(grammarAccess.getEventNameAccess().getDiscardinstanceEnumLiteralDeclaration_12()); }
)

    |(
{ before(grammarAccess.getEventNameAccess().getDiscardmodelEnumLiteralDeclaration_13()); }
(	'DiscardModel' 
)
{ after(grammarAccess.getEventNameAccess().getDiscardmodelEnumLiteralDeclaration_13()); }
)

    |(
{ before(grammarAccess.getEventNameAccess().getOpenmodelEnumLiteralDeclaration_14()); }
(	'OpenModel' 
)
{ after(grammarAccess.getEventNameAccess().getOpenmodelEnumLiteralDeclaration_14()); }
)

    |(
{ before(grammarAccess.getEventNameAccess().getRenameinstanceEnumLiteralDeclaration_15()); }
(	'RenameInstance' 
)
{ after(grammarAccess.getEventNameAccess().getRenameinstanceEnumLiteralDeclaration_15()); }
)

    |(
{ before(grammarAccess.getEventNameAccess().getSavemodelEnumLiteralDeclaration_16()); }
(	'SaveModel' 
)
{ after(grammarAccess.getEventNameAccess().getSavemodelEnumLiteralDeclaration_16()); }
)

    |(
{ before(grammarAccess.getEventNameAccess().getSetattributevalueEnumLiteralDeclaration_17()); }
(	'SetAttributeValue' 
)
{ after(grammarAccess.getEventNameAccess().getSetattributevalueEnumLiteralDeclaration_17()); }
)

    |(
{ before(grammarAccess.getEventNameAccess().getAftercreatemodelingconnectorEnumLiteralDeclaration_18()); }
(	'AfterCreateModelingConnector' 
)
{ after(grammarAccess.getEventNameAccess().getAftercreatemodelingconnectorEnumLiteralDeclaration_18()); }
)

    |(
{ before(grammarAccess.getEventNameAccess().getAftercreatemodelingnodeEnumLiteralDeclaration_19()); }
(	'AfterCreateModelingNode' 
)
{ after(grammarAccess.getEventNameAccess().getAftercreatemodelingnodeEnumLiteralDeclaration_19()); }
)

    |(
{ before(grammarAccess.getEventNameAccess().getAftereditattributevalueEnumLiteralDeclaration_20()); }
(	'AfterEditAttributeValue' 
)
{ after(grammarAccess.getEventNameAccess().getAftereditattributevalueEnumLiteralDeclaration_20()); }
)

    |(
{ before(grammarAccess.getEventNameAccess().getToolinitializedEnumLiteralDeclaration_21()); }
(	'ToolInitialized' 
)
{ after(grammarAccess.getEventNameAccess().getToolinitializedEnumLiteralDeclaration_21()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Root__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Root__Group__0__Impl
	rule__Root__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootAccess().getMethodnameAssignment_0()); }
(rule__Root__MethodnameAssignment_0)
{ after(grammarAccess.getRootAccess().getMethodnameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Root__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Root__Group__1__Impl
	rule__Root__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootAccess().getAlternatives_1()); }
(rule__Root__Alternatives_1)*
{ after(grammarAccess.getRootAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Root__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Root__Group__2__Impl
	rule__Root__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootAccess().getIncludelibraryAssignment_2()); }
(rule__Root__IncludelibraryAssignment_2)*
{ after(grammarAccess.getRootAccess().getIncludelibraryAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Root__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Root__Group__3__Impl
	rule__Root__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootAccess().getEmbedcodeAssignment_3()); }
(rule__Root__EmbedcodeAssignment_3)*
{ after(grammarAccess.getRootAccess().getEmbedcodeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Root__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Root__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootAccess().getMethodAssignment_4()); }
(rule__Root__MethodAssignment_4)
{ after(grammarAccess.getRootAccess().getMethodAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MethodName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodName__Group__0__Impl
	rule__MethodName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodNameAccess().getMethodKeyword_0()); }

	'method' 

{ after(grammarAccess.getMethodNameAccess().getMethodKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodNameAccess().getNameAssignment_1()); }
(rule__MethodName__NameAssignment_1)
{ after(grammarAccess.getMethodNameAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IncludeLibrary__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeLibrary__Group__0__Impl
	rule__IncludeLibrary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeLibrary__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeLibraryAccess().getIncludeKeyword_0()); }

	'include' 

{ after(grammarAccess.getIncludeLibraryAccess().getIncludeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeLibrary__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeLibrary__Group__1__Impl
	rule__IncludeLibrary__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeLibrary__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeLibraryAccess().getLessThanSignKeyword_1()); }

	'<' 

{ after(grammarAccess.getIncludeLibraryAccess().getLessThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeLibrary__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeLibrary__Group__2__Impl
	rule__IncludeLibrary__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeLibrary__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeLibraryAccess().getNameAssignment_2()); }
(rule__IncludeLibrary__NameAssignment_2)
{ after(grammarAccess.getIncludeLibraryAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeLibrary__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeLibrary__Group__3__Impl
	rule__IncludeLibrary__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeLibrary__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeLibraryAccess().getGroup_3()); }
(rule__IncludeLibrary__Group_3__0)?
{ after(grammarAccess.getIncludeLibraryAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeLibrary__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeLibrary__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeLibrary__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeLibraryAccess().getGreaterThanSignKeyword_4()); }

	'>' 

{ after(grammarAccess.getIncludeLibraryAccess().getGreaterThanSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__IncludeLibrary__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeLibrary__Group_3__0__Impl
	rule__IncludeLibrary__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeLibrary__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeLibraryAccess().getColonKeyword_3_0()); }

	':' 

{ after(grammarAccess.getIncludeLibraryAccess().getColonKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeLibrary__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeLibrary__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeLibrary__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeLibraryAccess().getIncludelibrarytypeAssignment_3_1()); }
(rule__IncludeLibrary__IncludelibrarytypeAssignment_3_1)
{ after(grammarAccess.getIncludeLibraryAccess().getIncludelibrarytypeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IncludeLibraryType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeLibraryType__Group__0__Impl
	rule__IncludeLibraryType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeLibraryType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeLibraryTypeAccess().getDefKeyword_0()); }

	'def' 

{ after(grammarAccess.getIncludeLibraryTypeAccess().getDefKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeLibraryType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeLibraryType__Group__1__Impl
	rule__IncludeLibraryType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeLibraryType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeLibraryTypeAccess().getIncludeLibraryTypeKeyword_1()); }

	'IncludeLibraryType' 

{ after(grammarAccess.getIncludeLibraryTypeAccess().getIncludeLibraryTypeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeLibraryType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncludeLibraryType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeLibraryType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeLibraryTypeAccess().getNameAssignment_2()); }
(rule__IncludeLibraryType__NameAssignment_2)
{ after(grammarAccess.getIncludeLibraryTypeAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EmbedCode__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbedCode__Group__0__Impl
	rule__EmbedCode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbedCode__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbedCodeAccess().getEmbedKeyword_0()); }

	'embed' 

{ after(grammarAccess.getEmbedCodeAccess().getEmbedKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbedCode__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbedCode__Group__1__Impl
	rule__EmbedCode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbedCode__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbedCodeAccess().getNameAssignment_1()); }
(rule__EmbedCode__NameAssignment_1)
{ after(grammarAccess.getEmbedCodeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbedCode__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbedCode__Group__2__Impl
	rule__EmbedCode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbedCode__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbedCodeAccess().getLessThanSignKeyword_2()); }

	'<' 

{ after(grammarAccess.getEmbedCodeAccess().getLessThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbedCode__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbedCode__Group__3__Impl
	rule__EmbedCode__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbedCode__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbedCodeAccess().getEmbedplatformtypeAssignment_3()); }
(rule__EmbedCode__EmbedplatformtypeAssignment_3)
{ after(grammarAccess.getEmbedCodeAccess().getEmbedplatformtypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbedCode__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbedCode__Group__4__Impl
	rule__EmbedCode__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbedCode__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbedCodeAccess().getGroup_4()); }
(rule__EmbedCode__Group_4__0)?
{ after(grammarAccess.getEmbedCodeAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbedCode__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbedCode__Group__5__Impl
	rule__EmbedCode__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbedCode__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbedCodeAccess().getGreaterThanSignKeyword_5()); }

	'>' 

{ after(grammarAccess.getEmbedCodeAccess().getGreaterThanSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbedCode__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbedCode__Group__6__Impl
	rule__EmbedCode__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbedCode__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbedCodeAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getEmbedCodeAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbedCode__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbedCode__Group__7__Impl
	rule__EmbedCode__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbedCode__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbedCodeAccess().getEmbeddedcodeAssignment_7()); }
(rule__EmbedCode__EmbeddedcodeAssignment_7)
{ after(grammarAccess.getEmbedCodeAccess().getEmbeddedcodeAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbedCode__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbedCode__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbedCode__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbedCodeAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getEmbedCodeAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__EmbedCode__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbedCode__Group_4__0__Impl
	rule__EmbedCode__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbedCode__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbedCodeAccess().getColonKeyword_4_0()); }

	':' 

{ after(grammarAccess.getEmbedCodeAccess().getColonKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbedCode__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbedCode__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbedCode__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbedCodeAccess().getEmbedcodetypeAssignment_4_1()); }
(rule__EmbedCode__EmbedcodetypeAssignment_4_1)
{ after(grammarAccess.getEmbedCodeAccess().getEmbedcodetypeAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EmbedPlatformType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbedPlatformType__Group__0__Impl
	rule__EmbedPlatformType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbedPlatformType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbedPlatformTypeAccess().getDefKeyword_0()); }

	'def' 

{ after(grammarAccess.getEmbedPlatformTypeAccess().getDefKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbedPlatformType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbedPlatformType__Group__1__Impl
	rule__EmbedPlatformType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbedPlatformType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbedPlatformTypeAccess().getEmbedPlatformTypeKeyword_1()); }

	'EmbedPlatformType' 

{ after(grammarAccess.getEmbedPlatformTypeAccess().getEmbedPlatformTypeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbedPlatformType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbedPlatformType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbedPlatformType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbedPlatformTypeAccess().getNameAssignment_2()); }
(rule__EmbedPlatformType__NameAssignment_2)
{ after(grammarAccess.getEmbedPlatformTypeAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EmbedCodeType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbedCodeType__Group__0__Impl
	rule__EmbedCodeType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbedCodeType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbedCodeTypeAccess().getDefKeyword_0()); }

	'def' 

{ after(grammarAccess.getEmbedCodeTypeAccess().getDefKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbedCodeType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbedCodeType__Group__1__Impl
	rule__EmbedCodeType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbedCodeType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbedCodeTypeAccess().getEmbedCodeTypeKeyword_1()); }

	'EmbedCodeType' 

{ after(grammarAccess.getEmbedCodeTypeAccess().getEmbedCodeTypeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmbedCodeType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmbedCodeType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmbedCodeType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbedCodeTypeAccess().getNameAssignment_2()); }
(rule__EmbedCodeType__NameAssignment_2)
{ after(grammarAccess.getEmbedCodeTypeAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InsertEmbedCode__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertEmbedCode__Group__0__Impl
	rule__InsertEmbedCode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertEmbedCode__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertEmbedCodeAccess().getInsertKeyword_0()); }

	'insert' 

{ after(grammarAccess.getInsertEmbedCodeAccess().getInsertKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertEmbedCode__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertEmbedCode__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertEmbedCode__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertEmbedCodeAccess().getCodesnippetnameAssignment_1()); }
(rule__InsertEmbedCode__CodesnippetnameAssignment_1)
{ after(grammarAccess.getInsertEmbedCodeAccess().getCodesnippetnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Method__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__0__Impl
	rule__Method__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getEnumerationAssignment_0()); }
(rule__Method__EnumerationAssignment_0)*
{ after(grammarAccess.getMethodAccess().getEnumerationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__1__Impl
	rule__Method__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getSymbolstyleAssignment_1()); }
(rule__Method__SymbolstyleAssignment_1)*
{ after(grammarAccess.getMethodAccess().getSymbolstyleAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__2__Impl
	rule__Method__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getSymbolclassAssignment_2()); }
(rule__Method__SymbolclassAssignment_2)*
{ after(grammarAccess.getMethodAccess().getSymbolclassAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__3__Impl
	rule__Method__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getSymbolrelationAssignment_3()); }
(rule__Method__SymbolrelationAssignment_3)*
{ after(grammarAccess.getMethodAccess().getSymbolrelationAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__4__Impl
	rule__Method__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getMetamodelAssignment_4()); }
(rule__Method__MetamodelAssignment_4)
{ after(grammarAccess.getMethodAccess().getMetamodelAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__5__Impl
	rule__Method__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getAlgorithmAssignment_5()); }
(rule__Method__AlgorithmAssignment_5)*
{ after(grammarAccess.getMethodAccess().getAlgorithmAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getEventAssignment_6()); }
(rule__Method__EventAssignment_6)*
{ after(grammarAccess.getMethodAccess().getEventAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Enumeration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumeration__Group__0__Impl
	rule__Enumeration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationAccess().getEnumKeyword_0()); }

	'enum' 

{ after(grammarAccess.getEnumerationAccess().getEnumKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enumeration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumeration__Group__1__Impl
	rule__Enumeration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationAccess().getNameAssignment_1()); }
(rule__Enumeration__NameAssignment_1)
{ after(grammarAccess.getEnumerationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enumeration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumeration__Group__2__Impl
	rule__Enumeration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getEnumerationAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enumeration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumeration__Group__3__Impl
	rule__Enumeration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getEnumerationAccess().getEnumvaluesAssignment_3()); }
(rule__Enumeration__EnumvaluesAssignment_3)
{ after(grammarAccess.getEnumerationAccess().getEnumvaluesAssignment_3()); }
)
(
{ before(grammarAccess.getEnumerationAccess().getEnumvaluesAssignment_3()); }
(rule__Enumeration__EnumvaluesAssignment_3)*
{ after(grammarAccess.getEnumerationAccess().getEnumvaluesAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enumeration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumeration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getEnumerationAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Metamodel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Metamodel__Group__0__Impl
	rule__Metamodel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Metamodel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMetamodelAccess().getClassAssignment_0()); }
(rule__Metamodel__ClassAssignment_0)
{ after(grammarAccess.getMetamodelAccess().getClassAssignment_0()); }
)
(
{ before(grammarAccess.getMetamodelAccess().getClassAssignment_0()); }
(rule__Metamodel__ClassAssignment_0)*
{ after(grammarAccess.getMetamodelAccess().getClassAssignment_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Metamodel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Metamodel__Group__1__Impl
	rule__Metamodel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Metamodel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelAccess().getRelationAssignment_1()); }
(rule__Metamodel__RelationAssignment_1)*
{ after(grammarAccess.getMetamodelAccess().getRelationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Metamodel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Metamodel__Group__2__Impl
	rule__Metamodel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Metamodel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelAccess().getAttributeAssignment_2()); }
(rule__Metamodel__AttributeAssignment_2)*
{ after(grammarAccess.getMetamodelAccess().getAttributeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Metamodel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Metamodel__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Metamodel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMetamodelAccess().getModeltypeAssignment_3()); }
(rule__Metamodel__ModeltypeAssignment_3)
{ after(grammarAccess.getMetamodelAccess().getModeltypeAssignment_3()); }
)
(
{ before(grammarAccess.getMetamodelAccess().getModeltypeAssignment_3()); }
(rule__Metamodel__ModeltypeAssignment_3)*
{ after(grammarAccess.getMetamodelAccess().getModeltypeAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Class__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__0__Impl
	rule__Class__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getClassKeyword_0()); }

	'class' 

{ after(grammarAccess.getClassAccess().getClassKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__1__Impl
	rule__Class__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getNameAssignment_1()); }
(rule__Class__NameAssignment_1)
{ after(grammarAccess.getClassAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__2__Impl
	rule__Class__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getGroup_2()); }
(rule__Class__Group_2__0)?
{ after(grammarAccess.getClassAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__3__Impl
	rule__Class__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getGroup_3()); }
(rule__Class__Group_3__0)?
{ after(grammarAccess.getClassAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__4__Impl
	rule__Class__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__5__Impl
	rule__Class__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getAlternatives_5()); }
(rule__Class__Alternatives_5)*
{ after(grammarAccess.getClassAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Class__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_2__0__Impl
	rule__Class__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getClassAccess().getExtendsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getParentclassnameAssignment_2_1()); }
(rule__Class__ParentclassnameAssignment_2_1)
{ after(grammarAccess.getClassAccess().getParentclassnameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_3__0__Impl
	rule__Class__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getSymbolKeyword_3_0()); }

	'symbol' 

{ after(grammarAccess.getClassAccess().getSymbolKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getSymbolclassAssignment_3_1()); }
(rule__Class__SymbolclassAssignment_3_1)
{ after(grammarAccess.getClassAccess().getSymbolclassAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__0__Impl
	rule__Relation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getRelationKeyword_0()); }

	'relation' 

{ after(grammarAccess.getRelationAccess().getRelationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__1__Impl
	rule__Relation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getNameAssignment_1()); }
(rule__Relation__NameAssignment_1)
{ after(grammarAccess.getRelationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__2__Impl
	rule__Relation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getGroup_2()); }
(rule__Relation__Group_2__0)?
{ after(grammarAccess.getRelationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__3__Impl
	rule__Relation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getGroup_3()); }
(rule__Relation__Group_3__0)?
{ after(grammarAccess.getRelationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__4__Impl
	rule__Relation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getFromKeyword_4()); }

	'from' 

{ after(grammarAccess.getRelationAccess().getFromKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__5__Impl
	rule__Relation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getFromclassnameAssignment_5()); }
(rule__Relation__FromclassnameAssignment_5)
{ after(grammarAccess.getRelationAccess().getFromclassnameAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__6__Impl
	rule__Relation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getToKeyword_6()); }

	'to' 

{ after(grammarAccess.getRelationAccess().getToKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__7__Impl
	rule__Relation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getToclassnameAssignment_7()); }
(rule__Relation__ToclassnameAssignment_7)
{ after(grammarAccess.getRelationAccess().getToclassnameAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__8__Impl
	rule__Relation__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getLeftCurlyBracketKeyword_8()); }

	'{' 

{ after(grammarAccess.getRelationAccess().getLeftCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__9__Impl
	rule__Relation__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getAlternatives_9()); }
(rule__Relation__Alternatives_9)*
{ after(grammarAccess.getRelationAccess().getAlternatives_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getRelationAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Relation__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_2__0__Impl
	rule__Relation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getRelationAccess().getExtendsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getParentrelationnameAssignment_2_1()); }
(rule__Relation__ParentrelationnameAssignment_2_1)
{ after(grammarAccess.getRelationAccess().getParentrelationnameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_3__0__Impl
	rule__Relation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getSymbolKeyword_3_0()); }

	'symbol' 

{ after(grammarAccess.getRelationAccess().getSymbolKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getSymbolrelationAssignment_3_1()); }
(rule__Relation__SymbolrelationAssignment_3_1)
{ after(grammarAccess.getRelationAccess().getSymbolrelationAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Attribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getAttributeKeyword_0()); }

	'attribute' 

{ after(grammarAccess.getAttributeAccess().getAttributeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
(rule__Attribute__NameAssignment_1)
{ after(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getAttributeAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__3__Impl
	rule__Attribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeAssignment_3()); }
(rule__Attribute__TypeAssignment_3)
{ after(grammarAccess.getAttributeAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getGroup_4()); }
(rule__Attribute__Group_4__0)?
{ after(grammarAccess.getAttributeAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Attribute__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_4__0__Impl
	rule__Attribute__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getAccessKeyword_4_0()); }

	'access' 

{ after(grammarAccess.getAttributeAccess().getAccessKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_4__1__Impl
	rule__Attribute__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getColonKeyword_4_1()); }

	':' 

{ after(grammarAccess.getAttributeAccess().getColonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getAccessAssignment_4_2()); }
(rule__Attribute__AccessAssignment_4_2)
{ after(grammarAccess.getAttributeAccess().getAccessAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClassAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassAttribute__Group__0__Impl
	rule__ClassAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAttributeAccess().getClassattributeKeyword_0()); }

	'classattribute' 

{ after(grammarAccess.getClassAttributeAccess().getClassattributeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassAttribute__Group__1__Impl
	rule__ClassAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAttributeAccess().getNameAssignment_1()); }
(rule__ClassAttribute__NameAssignment_1)
{ after(grammarAccess.getClassAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassAttribute__Group__2__Impl
	rule__ClassAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAttributeAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getClassAttributeAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassAttribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAttributeAccess().getTypeAssignment_3()); }
(rule__ClassAttribute__TypeAssignment_3)
{ after(grammarAccess.getClassAttributeAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Reference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__0__Impl
	rule__Reference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getReferenceKeyword_0()); }

	'reference' 

{ after(grammarAccess.getReferenceAccess().getReferenceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__1__Impl
	rule__Reference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getNameAssignment_1()); }
(rule__Reference__NameAssignment_1)
{ after(grammarAccess.getReferenceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__2__Impl
	rule__Reference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getHyphenMinusGreaterThanSignKeyword_2()); }

	'->' 

{ after(grammarAccess.getReferenceAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getRefnameAssignment_3()); }
(rule__Reference__RefnameAssignment_3)
{ after(grammarAccess.getReferenceAccess().getRefnameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RefName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefName__Group__0__Impl
	rule__RefName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefNameAccess().getGroup_0()); }
(rule__RefName__Group_0__0)
{ after(grammarAccess.getRefNameAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefNameAccess().getGroup_1()); }
(rule__RefName__Group_1__0)?
{ after(grammarAccess.getRefNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RefName__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefName__Group_0__0__Impl
	rule__RefName__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefName__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefNameAccess().getModeltypeKeyword_0_0()); }

	'modeltype' 

{ after(grammarAccess.getRefNameAccess().getModeltypeKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefName__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefName__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefName__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefNameAccess().getModeltypenameAssignment_0_1()); }
(rule__RefName__ModeltypenameAssignment_0_1)
{ after(grammarAccess.getRefNameAccess().getModeltypenameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RefName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefName__Group_1__0__Impl
	rule__RefName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefNameAccess().getClassKeyword_1_0()); }

	'class' 

{ after(grammarAccess.getRefNameAccess().getClassKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefNameAccess().getClassnameAssignment_1_1()); }
(rule__RefName__ClassnameAssignment_1_1)
{ after(grammarAccess.getRefNameAccess().getClassnameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumType__Group__0__Impl
	rule__EnumType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getEnumKeyword_0()); }

	'enum' 

{ after(grammarAccess.getEnumTypeAccess().getEnumKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getNameAssignment_1()); }
(rule__EnumType__NameAssignment_1)
{ after(grammarAccess.getEnumTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModelType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelType__Group__0__Impl
	rule__ModelType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelTypeAccess().getModeltypeKeyword_0()); }

	'modeltype' 

{ after(grammarAccess.getModelTypeAccess().getModeltypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelType__Group__1__Impl
	rule__ModelType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelTypeAccess().getNameAssignment_1()); }
(rule__ModelType__NameAssignment_1)
{ after(grammarAccess.getModelTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelType__Group__2__Impl
	rule__ModelType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelTypeAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getModelTypeAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelType__Group__3__Impl
	rule__ModelType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelTypeAccess().getClassesKeyword_3()); }

	'classes' 

{ after(grammarAccess.getModelTypeAccess().getClassesKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelType__Group__4__Impl
	rule__ModelType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getModelTypeAccess().getClassnameAssignment_4()); }
(rule__ModelType__ClassnameAssignment_4)
{ after(grammarAccess.getModelTypeAccess().getClassnameAssignment_4()); }
)
(
{ before(grammarAccess.getModelTypeAccess().getClassnameAssignment_4()); }
(rule__ModelType__ClassnameAssignment_4)*
{ after(grammarAccess.getModelTypeAccess().getClassnameAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelType__Group__5__Impl
	rule__ModelType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelTypeAccess().getRelationsKeyword_5()); }

	'relations' 

{ after(grammarAccess.getModelTypeAccess().getRelationsKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelType__Group__6__Impl
	rule__ModelType__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelTypeAccess().getAlternatives_6()); }
(rule__ModelType__Alternatives_6)
{ after(grammarAccess.getModelTypeAccess().getAlternatives_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelType__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelType__Group__7__Impl
	rule__ModelType__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelTypeAccess().getModesKeyword_7()); }

	'modes' 

{ after(grammarAccess.getModelTypeAccess().getModesKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelType__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelType__Group__8__Impl
	rule__ModelType__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelTypeAccess().getAlternatives_8()); }
(rule__ModelType__Alternatives_8)
{ after(grammarAccess.getModelTypeAccess().getAlternatives_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelType__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelType__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelTypeAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getModelTypeAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Mode__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mode__Group__0__Impl
	rule__Mode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mode__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModeAccess().getModeKeyword_0()); }

	'mode' 

{ after(grammarAccess.getModeAccess().getModeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mode__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mode__Group__1__Impl
	rule__Mode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mode__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModeAccess().getNameAssignment_1()); }
(rule__Mode__NameAssignment_1)
{ after(grammarAccess.getModeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mode__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mode__Group__2__Impl
	rule__Mode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mode__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModeAccess().getIncludeKeyword_2()); }

	'include' 

{ after(grammarAccess.getModeAccess().getIncludeKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mode__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mode__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mode__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModeAccess().getGroup_3()); }
(rule__Mode__Group_3__0)
{ after(grammarAccess.getModeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Mode__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mode__Group_3__0__Impl
	rule__Mode__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mode__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModeAccess().getClassesKeyword_3_0()); }

	'classes' 

{ after(grammarAccess.getModeAccess().getClassesKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mode__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mode__Group_3__1__Impl
	rule__Mode__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mode__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getModeAccess().getClassnameAssignment_3_1()); }
(rule__Mode__ClassnameAssignment_3_1)
{ after(grammarAccess.getModeAccess().getClassnameAssignment_3_1()); }
)
(
{ before(grammarAccess.getModeAccess().getClassnameAssignment_3_1()); }
(rule__Mode__ClassnameAssignment_3_1)*
{ after(grammarAccess.getModeAccess().getClassnameAssignment_3_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mode__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mode__Group_3__2__Impl
	rule__Mode__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mode__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModeAccess().getRelationsKeyword_3_2()); }

	'relations' 

{ after(grammarAccess.getModeAccess().getRelationsKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mode__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mode__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mode__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getModeAccess().getAlternatives_3_3()); }
(rule__Mode__Alternatives_3_3)
{ after(grammarAccess.getModeAccess().getAlternatives_3_3()); }
)
(
{ before(grammarAccess.getModeAccess().getAlternatives_3_3()); }
(rule__Mode__Alternatives_3_3)*
{ after(grammarAccess.getModeAccess().getAlternatives_3_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SymbolClass__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolClass__Group__0__Impl
	rule__SymbolClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolClass__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolClassAccess().getClassgraphKeyword_0()); }

	'classgraph' 

{ after(grammarAccess.getSymbolClassAccess().getClassgraphKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolClass__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolClass__Group__1__Impl
	rule__SymbolClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolClass__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolClassAccess().getNameAssignment_1()); }
(rule__SymbolClass__NameAssignment_1)
{ after(grammarAccess.getSymbolClassAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolClass__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolClass__Group__2__Impl
	rule__SymbolClass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolClass__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolClassAccess().getGroup_2()); }
(rule__SymbolClass__Group_2__0)?
{ after(grammarAccess.getSymbolClassAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolClass__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolClass__Group__3__Impl
	rule__SymbolClass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolClass__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolClassAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getSymbolClassAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolClass__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolClass__Group__4__Impl
	rule__SymbolClass__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolClass__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolClassAccess().getSvgcommandAssignment_4()); }
(rule__SymbolClass__SvgcommandAssignment_4)*
{ after(grammarAccess.getSymbolClassAccess().getSvgcommandAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolClass__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolClass__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolClass__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolClassAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getSymbolClassAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SymbolClass__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolClass__Group_2__0__Impl
	rule__SymbolClass__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolClass__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolClassAccess().getStyleKeyword_2_0()); }

	'style' 

{ after(grammarAccess.getSymbolClassAccess().getStyleKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolClass__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolClass__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolClass__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolClassAccess().getGlobalstyleAssignment_2_1()); }
(rule__SymbolClass__GlobalstyleAssignment_2_1)
{ after(grammarAccess.getSymbolClassAccess().getGlobalstyleAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SymbolRelation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolRelation__Group__0__Impl
	rule__SymbolRelation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRelation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolRelationAccess().getRelationgraphKeyword_0()); }

	'relationgraph' 

{ after(grammarAccess.getSymbolRelationAccess().getRelationgraphKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolRelation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolRelation__Group__1__Impl
	rule__SymbolRelation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRelation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolRelationAccess().getNameAssignment_1()); }
(rule__SymbolRelation__NameAssignment_1)
{ after(grammarAccess.getSymbolRelationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolRelation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolRelation__Group__2__Impl
	rule__SymbolRelation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRelation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolRelationAccess().getGroup_2()); }
(rule__SymbolRelation__Group_2__0)?
{ after(grammarAccess.getSymbolRelationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolRelation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolRelation__Group__3__Impl
	rule__SymbolRelation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRelation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolRelationAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getSymbolRelationAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolRelation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolRelation__Group__4__Impl
	rule__SymbolRelation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRelation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolRelationAccess().getFromKeyword_4()); }

	'from' 

{ after(grammarAccess.getSymbolRelationAccess().getFromKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolRelation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolRelation__Group__5__Impl
	rule__SymbolRelation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRelation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolRelationAccess().getSvgcommandsfromAssignment_5()); }
(rule__SymbolRelation__SvgcommandsfromAssignment_5)*
{ after(grammarAccess.getSymbolRelationAccess().getSvgcommandsfromAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolRelation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolRelation__Group__6__Impl
	rule__SymbolRelation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRelation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolRelationAccess().getMiddleKeyword_6()); }

	'middle' 

{ after(grammarAccess.getSymbolRelationAccess().getMiddleKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolRelation__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolRelation__Group__7__Impl
	rule__SymbolRelation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRelation__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolRelationAccess().getSvgcommandsmiddleAssignment_7()); }
(rule__SymbolRelation__SvgcommandsmiddleAssignment_7)*
{ after(grammarAccess.getSymbolRelationAccess().getSvgcommandsmiddleAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolRelation__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolRelation__Group__8__Impl
	rule__SymbolRelation__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRelation__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolRelationAccess().getToKeyword_8()); }

	'to' 

{ after(grammarAccess.getSymbolRelationAccess().getToKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolRelation__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolRelation__Group__9__Impl
	rule__SymbolRelation__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRelation__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolRelationAccess().getSvgcommandstoAssignment_9()); }
(rule__SymbolRelation__SvgcommandstoAssignment_9)*
{ after(grammarAccess.getSymbolRelationAccess().getSvgcommandstoAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolRelation__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolRelation__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRelation__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolRelationAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getSymbolRelationAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__SymbolRelation__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolRelation__Group_2__0__Impl
	rule__SymbolRelation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRelation__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolRelationAccess().getStyleKeyword_2_0()); }

	'style' 

{ after(grammarAccess.getSymbolRelationAccess().getStyleKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolRelation__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolRelation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRelation__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolRelationAccess().getGlobalstyleAssignment_2_1()); }
(rule__SymbolRelation__GlobalstyleAssignment_2_1)
{ after(grammarAccess.getSymbolRelationAccess().getGlobalstyleAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SVGCommand__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SVGCommand__Group_1__0__Impl
	rule__SVGCommand__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SVGCommand__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSVGCommandAccess().getAlternatives_1_0()); }
(rule__SVGCommand__Alternatives_1_0)
{ after(grammarAccess.getSVGCommandAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SVGCommand__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SVGCommand__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SVGCommand__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSVGCommandAccess().getAlternatives_1_1()); }
(rule__SVGCommand__Alternatives_1_1)?
{ after(grammarAccess.getSVGCommandAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SVGCommand__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SVGCommand__Group_1_1_1__0__Impl
	rule__SVGCommand__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SVGCommand__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSVGCommandAccess().getStyleKeyword_1_1_1_0()); }

	'style' 

{ after(grammarAccess.getSVGCommandAccess().getStyleKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SVGCommand__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SVGCommand__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SVGCommand__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSVGCommandAccess().getSymbolstylerefAssignment_1_1_1_1()); }
(rule__SVGCommand__SymbolstylerefAssignment_1_1_1_1)
{ after(grammarAccess.getSVGCommandAccess().getSymbolstylerefAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Rectangle__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rectangle__Group__0__Impl
	rule__Rectangle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRectangleAccess().getRectangleKeyword_0()); }

	'rectangle' 

{ after(grammarAccess.getRectangleAccess().getRectangleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rectangle__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rectangle__Group__1__Impl
	rule__Rectangle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRectangleAccess().getXKeyword_1()); }

	'x' 

{ after(grammarAccess.getRectangleAccess().getXKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rectangle__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rectangle__Group__2__Impl
	rule__Rectangle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRectangleAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getRectangleAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rectangle__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rectangle__Group__3__Impl
	rule__Rectangle__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRectangleAccess().getXAssignment_3()); }
(rule__Rectangle__XAssignment_3)
{ after(grammarAccess.getRectangleAccess().getXAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rectangle__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rectangle__Group__4__Impl
	rule__Rectangle__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRectangleAccess().getYKeyword_4()); }

	'y' 

{ after(grammarAccess.getRectangleAccess().getYKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rectangle__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rectangle__Group__5__Impl
	rule__Rectangle__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRectangleAccess().getEqualsSignKeyword_5()); }

	'=' 

{ after(grammarAccess.getRectangleAccess().getEqualsSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rectangle__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rectangle__Group__6__Impl
	rule__Rectangle__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRectangleAccess().getYAssignment_6()); }
(rule__Rectangle__YAssignment_6)
{ after(grammarAccess.getRectangleAccess().getYAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rectangle__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rectangle__Group__7__Impl
	rule__Rectangle__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRectangleAccess().getWKeyword_7()); }

	'w' 

{ after(grammarAccess.getRectangleAccess().getWKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rectangle__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rectangle__Group__8__Impl
	rule__Rectangle__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRectangleAccess().getEqualsSignKeyword_8()); }

	'=' 

{ after(grammarAccess.getRectangleAccess().getEqualsSignKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rectangle__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rectangle__Group__9__Impl
	rule__Rectangle__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRectangleAccess().getWidthAssignment_9()); }
(rule__Rectangle__WidthAssignment_9)
{ after(grammarAccess.getRectangleAccess().getWidthAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rectangle__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rectangle__Group__10__Impl
	rule__Rectangle__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRectangleAccess().getHKeyword_10()); }

	'h' 

{ after(grammarAccess.getRectangleAccess().getHKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rectangle__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rectangle__Group__11__Impl
	rule__Rectangle__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRectangleAccess().getEqualsSignKeyword_11()); }

	'=' 

{ after(grammarAccess.getRectangleAccess().getEqualsSignKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rectangle__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rectangle__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRectangleAccess().getHeightAssignment_12()); }
(rule__Rectangle__HeightAssignment_12)
{ after(grammarAccess.getRectangleAccess().getHeightAssignment_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__Circle__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Circle__Group__0__Impl
	rule__Circle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getCircleKeyword_0()); }

	'circle' 

{ after(grammarAccess.getCircleAccess().getCircleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Circle__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Circle__Group__1__Impl
	rule__Circle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getCxKeyword_1()); }

	'cx' 

{ after(grammarAccess.getCircleAccess().getCxKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Circle__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Circle__Group__2__Impl
	rule__Circle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getCircleAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Circle__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Circle__Group__3__Impl
	rule__Circle__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getCxAssignment_3()); }
(rule__Circle__CxAssignment_3)
{ after(grammarAccess.getCircleAccess().getCxAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Circle__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Circle__Group__4__Impl
	rule__Circle__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getCyKeyword_4()); }

	'cy' 

{ after(grammarAccess.getCircleAccess().getCyKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Circle__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Circle__Group__5__Impl
	rule__Circle__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getEqualsSignKeyword_5()); }

	'=' 

{ after(grammarAccess.getCircleAccess().getEqualsSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Circle__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Circle__Group__6__Impl
	rule__Circle__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getCyAssignment_6()); }
(rule__Circle__CyAssignment_6)
{ after(grammarAccess.getCircleAccess().getCyAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Circle__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Circle__Group__7__Impl
	rule__Circle__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getRKeyword_7()); }

	'r' 

{ after(grammarAccess.getCircleAccess().getRKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Circle__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Circle__Group__8__Impl
	rule__Circle__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getEqualsSignKeyword_8()); }

	'=' 

{ after(grammarAccess.getCircleAccess().getEqualsSignKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Circle__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Circle__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getRAssignment_9()); }
(rule__Circle__RAssignment_9)
{ after(grammarAccess.getCircleAccess().getRAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Ellipse__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ellipse__Group__0__Impl
	rule__Ellipse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEllipseAccess().getEllipseKeyword_0()); }

	'ellipse' 

{ after(grammarAccess.getEllipseAccess().getEllipseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ellipse__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ellipse__Group__1__Impl
	rule__Ellipse__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEllipseAccess().getCxKeyword_1()); }

	'cx' 

{ after(grammarAccess.getEllipseAccess().getCxKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ellipse__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ellipse__Group__2__Impl
	rule__Ellipse__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEllipseAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getEllipseAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ellipse__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ellipse__Group__3__Impl
	rule__Ellipse__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEllipseAccess().getCxAssignment_3()); }
(rule__Ellipse__CxAssignment_3)
{ after(grammarAccess.getEllipseAccess().getCxAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ellipse__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ellipse__Group__4__Impl
	rule__Ellipse__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEllipseAccess().getCyKeyword_4()); }

	'cy' 

{ after(grammarAccess.getEllipseAccess().getCyKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ellipse__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ellipse__Group__5__Impl
	rule__Ellipse__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEllipseAccess().getEqualsSignKeyword_5()); }

	'=' 

{ after(grammarAccess.getEllipseAccess().getEqualsSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ellipse__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ellipse__Group__6__Impl
	rule__Ellipse__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEllipseAccess().getCyAssignment_6()); }
(rule__Ellipse__CyAssignment_6)
{ after(grammarAccess.getEllipseAccess().getCyAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ellipse__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ellipse__Group__7__Impl
	rule__Ellipse__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEllipseAccess().getRxKeyword_7()); }

	'rx' 

{ after(grammarAccess.getEllipseAccess().getRxKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ellipse__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ellipse__Group__8__Impl
	rule__Ellipse__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEllipseAccess().getEqualsSignKeyword_8()); }

	'=' 

{ after(grammarAccess.getEllipseAccess().getEqualsSignKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ellipse__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ellipse__Group__9__Impl
	rule__Ellipse__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEllipseAccess().getRxAssignment_9()); }
(rule__Ellipse__RxAssignment_9)
{ after(grammarAccess.getEllipseAccess().getRxAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ellipse__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ellipse__Group__10__Impl
	rule__Ellipse__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEllipseAccess().getRyKeyword_10()); }

	'ry' 

{ after(grammarAccess.getEllipseAccess().getRyKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ellipse__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ellipse__Group__11__Impl
	rule__Ellipse__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEllipseAccess().getEqualsSignKeyword_11()); }

	'=' 

{ after(grammarAccess.getEllipseAccess().getEqualsSignKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ellipse__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ellipse__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEllipseAccess().getRyAssignment_12()); }
(rule__Ellipse__RyAssignment_12)
{ after(grammarAccess.getEllipseAccess().getRyAssignment_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__Line__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Line__Group__0__Impl
	rule__Line__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineAccess().getLineKeyword_0()); }

	'line' 

{ after(grammarAccess.getLineAccess().getLineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Line__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Line__Group__1__Impl
	rule__Line__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineAccess().getX1Keyword_1()); }

	'x1' 

{ after(grammarAccess.getLineAccess().getX1Keyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Line__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Line__Group__2__Impl
	rule__Line__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getLineAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Line__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Line__Group__3__Impl
	rule__Line__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineAccess().getX1Assignment_3()); }
(rule__Line__X1Assignment_3)
{ after(grammarAccess.getLineAccess().getX1Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Line__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Line__Group__4__Impl
	rule__Line__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineAccess().getY1Keyword_4()); }

	'y1' 

{ after(grammarAccess.getLineAccess().getY1Keyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Line__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Line__Group__5__Impl
	rule__Line__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineAccess().getEqualsSignKeyword_5()); }

	'=' 

{ after(grammarAccess.getLineAccess().getEqualsSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Line__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Line__Group__6__Impl
	rule__Line__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineAccess().getY1Assignment_6()); }
(rule__Line__Y1Assignment_6)
{ after(grammarAccess.getLineAccess().getY1Assignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Line__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Line__Group__7__Impl
	rule__Line__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineAccess().getX2Keyword_7()); }

	'x2' 

{ after(grammarAccess.getLineAccess().getX2Keyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Line__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Line__Group__8__Impl
	rule__Line__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineAccess().getEqualsSignKeyword_8()); }

	'=' 

{ after(grammarAccess.getLineAccess().getEqualsSignKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Line__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Line__Group__9__Impl
	rule__Line__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineAccess().getX2Assignment_9()); }
(rule__Line__X2Assignment_9)
{ after(grammarAccess.getLineAccess().getX2Assignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Line__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Line__Group__10__Impl
	rule__Line__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineAccess().getY2Keyword_10()); }

	'y2' 

{ after(grammarAccess.getLineAccess().getY2Keyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Line__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Line__Group__11__Impl
	rule__Line__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineAccess().getEqualsSignKeyword_11()); }

	'=' 

{ after(grammarAccess.getLineAccess().getEqualsSignKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Line__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Line__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineAccess().getY2Assignment_12()); }
(rule__Line__Y2Assignment_12)
{ after(grammarAccess.getLineAccess().getY2Assignment_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__Polyline__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Polyline__Group__0__Impl
	rule__Polyline__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Polyline__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolylineAccess().getPolylineKeyword_0()); }

	'polyline' 

{ after(grammarAccess.getPolylineAccess().getPolylineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Polyline__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Polyline__Group__1__Impl
	rule__Polyline__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Polyline__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolylineAccess().getPointsKeyword_1()); }

	'points' 

{ after(grammarAccess.getPolylineAccess().getPointsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Polyline__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Polyline__Group__2__Impl
	rule__Polyline__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Polyline__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolylineAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getPolylineAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Polyline__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Polyline__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Polyline__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPolylineAccess().getPointsAssignment_3()); }
(rule__Polyline__PointsAssignment_3)
{ after(grammarAccess.getPolylineAccess().getPointsAssignment_3()); }
)
(
{ before(grammarAccess.getPolylineAccess().getPointsAssignment_3()); }
(rule__Polyline__PointsAssignment_3)*
{ after(grammarAccess.getPolylineAccess().getPointsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Polygon__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Polygon__Group__0__Impl
	rule__Polygon__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolygonAccess().getPolygonKeyword_0()); }

	'polygon' 

{ after(grammarAccess.getPolygonAccess().getPolygonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Polygon__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Polygon__Group__1__Impl
	rule__Polygon__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolygonAccess().getPointsKeyword_1()); }

	'points' 

{ after(grammarAccess.getPolygonAccess().getPointsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Polygon__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Polygon__Group__2__Impl
	rule__Polygon__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolygonAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getPolygonAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Polygon__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Polygon__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPolygonAccess().getPointsAssignment_3()); }
(rule__Polygon__PointsAssignment_3)
{ after(grammarAccess.getPolygonAccess().getPointsAssignment_3()); }
)
(
{ before(grammarAccess.getPolygonAccess().getPointsAssignment_3()); }
(rule__Polygon__PointsAssignment_3)*
{ after(grammarAccess.getPolygonAccess().getPointsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Path__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Path__Group__0__Impl
	rule__Path__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathAccess().getPathKeyword_0()); }

	'path' 

{ after(grammarAccess.getPathAccess().getPathKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Path__Group__1__Impl
	rule__Path__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathAccess().getDKeyword_1()); }

	'd' 

{ after(grammarAccess.getPathAccess().getDKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Path__Group__2__Impl
	rule__Path__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getPathAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Path__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPathAccess().getPathdataAssignment_3()); }
(rule__Path__PathdataAssignment_3)
{ after(grammarAccess.getPathAccess().getPathdataAssignment_3()); }
)
(
{ before(grammarAccess.getPathAccess().getPathdataAssignment_3()); }
(rule__Path__PathdataAssignment_3)*
{ after(grammarAccess.getPathAccess().getPathdataAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Text__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Text__Group__0__Impl
	rule__Text__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getTextKeyword_0()); }

	'text' 

{ after(grammarAccess.getTextAccess().getTextKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Text__Group__1__Impl
	rule__Text__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getValueAssignment_1()); }
(rule__Text__ValueAssignment_1)
{ after(grammarAccess.getTextAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Text__Group__2__Impl
	rule__Text__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getXKeyword_2()); }

	'x' 

{ after(grammarAccess.getTextAccess().getXKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Text__Group__3__Impl
	rule__Text__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getTextAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Text__Group__4__Impl
	rule__Text__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getXAssignment_4()); }
(rule__Text__XAssignment_4)
{ after(grammarAccess.getTextAccess().getXAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Text__Group__5__Impl
	rule__Text__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getYKeyword_5()); }

	'y' 

{ after(grammarAccess.getTextAccess().getYKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Text__Group__6__Impl
	rule__Text__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getEqualsSignKeyword_6()); }

	'=' 

{ after(grammarAccess.getTextAccess().getEqualsSignKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Text__Group__7__Impl
	rule__Text__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getYAssignment_7()); }
(rule__Text__YAssignment_7)
{ after(grammarAccess.getTextAccess().getYAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Text__Group__8__Impl
	rule__Text__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getGroup_8()); }
(rule__Text__Group_8__0)?
{ after(grammarAccess.getTextAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Text__Group__9__Impl
	rule__Text__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getGroup_9()); }
(rule__Text__Group_9__0)?
{ after(grammarAccess.getTextAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Text__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getGroup_10()); }
(rule__Text__Group_10__0)?
{ after(grammarAccess.getTextAccess().getGroup_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Text__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Text__Group_8__0__Impl
	rule__Text__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getFontFamilyKeyword_8_0()); }

	'font-family' 

{ after(grammarAccess.getTextAccess().getFontFamilyKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Text__Group_8__1__Impl
	rule__Text__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getEqualsSignKeyword_8_1()); }

	'=' 

{ after(grammarAccess.getTextAccess().getEqualsSignKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Text__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getFontfamilyAssignment_8_2()); }
(rule__Text__FontfamilyAssignment_8_2)
{ after(grammarAccess.getTextAccess().getFontfamilyAssignment_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Text__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Text__Group_9__0__Impl
	rule__Text__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getFontSizeKeyword_9_0()); }

	'font-size' 

{ after(grammarAccess.getTextAccess().getFontSizeKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Text__Group_9__1__Impl
	rule__Text__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getEqualsSignKeyword_9_1()); }

	'=' 

{ after(grammarAccess.getTextAccess().getEqualsSignKeyword_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Text__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getFontsizeAssignment_9_2()); }
(rule__Text__FontsizeAssignment_9_2)
{ after(grammarAccess.getTextAccess().getFontsizeAssignment_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Text__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Text__Group_10__0__Impl
	rule__Text__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getFillKeyword_10_0()); }

	'fill' 

{ after(grammarAccess.getTextAccess().getFillKeyword_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Text__Group_10__1__Impl
	rule__Text__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getEqualsSignKeyword_10_1()); }

	'=' 

{ after(grammarAccess.getTextAccess().getEqualsSignKeyword_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group_10__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Text__Group_10__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_10__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getFillcolorAssignment_10_2()); }
(rule__Text__FillcolorAssignment_10_2)
{ after(grammarAccess.getTextAccess().getFillcolorAssignment_10_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MoveTo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MoveTo__Group__0__Impl
	rule__MoveTo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveTo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMoveToAccess().getAlternatives_0()); }
(rule__MoveTo__Alternatives_0)
{ after(grammarAccess.getMoveToAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MoveTo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MoveTo__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MoveTo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMoveToAccess().getParametersAssignment_1()); }
(rule__MoveTo__ParametersAssignment_1)
{ after(grammarAccess.getMoveToAccess().getParametersAssignment_1()); }
)
(
{ before(grammarAccess.getMoveToAccess().getParametersAssignment_1()); }
(rule__MoveTo__ParametersAssignment_1)*
{ after(grammarAccess.getMoveToAccess().getParametersAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LineTo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LineTo__Group__0__Impl
	rule__LineTo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LineTo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineToAccess().getAlternatives_0()); }
(rule__LineTo__Alternatives_0)
{ after(grammarAccess.getLineToAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LineTo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LineTo__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LineTo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getLineToAccess().getParametersAssignment_1()); }
(rule__LineTo__ParametersAssignment_1)
{ after(grammarAccess.getLineToAccess().getParametersAssignment_1()); }
)
(
{ before(grammarAccess.getLineToAccess().getParametersAssignment_1()); }
(rule__LineTo__ParametersAssignment_1)*
{ after(grammarAccess.getLineToAccess().getParametersAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__HorizontalLineTo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HorizontalLineTo__Group__0__Impl
	rule__HorizontalLineTo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalLineTo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHorizontalLineToAccess().getAlternatives_0()); }
(rule__HorizontalLineTo__Alternatives_0)
{ after(grammarAccess.getHorizontalLineToAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HorizontalLineTo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HorizontalLineTo__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalLineTo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getHorizontalLineToAccess().getParametersAssignment_1()); }
(rule__HorizontalLineTo__ParametersAssignment_1)
{ after(grammarAccess.getHorizontalLineToAccess().getParametersAssignment_1()); }
)
(
{ before(grammarAccess.getHorizontalLineToAccess().getParametersAssignment_1()); }
(rule__HorizontalLineTo__ParametersAssignment_1)*
{ after(grammarAccess.getHorizontalLineToAccess().getParametersAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VerticalLineTo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerticalLineTo__Group__0__Impl
	rule__VerticalLineTo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerticalLineTo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerticalLineToAccess().getAlternatives_0()); }
(rule__VerticalLineTo__Alternatives_0)
{ after(grammarAccess.getVerticalLineToAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerticalLineTo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerticalLineTo__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerticalLineTo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getVerticalLineToAccess().getParametersAssignment_1()); }
(rule__VerticalLineTo__ParametersAssignment_1)
{ after(grammarAccess.getVerticalLineToAccess().getParametersAssignment_1()); }
)
(
{ before(grammarAccess.getVerticalLineToAccess().getParametersAssignment_1()); }
(rule__VerticalLineTo__ParametersAssignment_1)*
{ after(grammarAccess.getVerticalLineToAccess().getParametersAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CurveTo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CurveTo__Group__0__Impl
	rule__CurveTo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CurveTo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCurveToAccess().getAlternatives_0()); }
(rule__CurveTo__Alternatives_0)
{ after(grammarAccess.getCurveToAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CurveTo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CurveTo__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CurveTo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getCurveToAccess().getParametersAssignment_1()); }
(rule__CurveTo__ParametersAssignment_1)
{ after(grammarAccess.getCurveToAccess().getParametersAssignment_1()); }
)
(
{ before(grammarAccess.getCurveToAccess().getParametersAssignment_1()); }
(rule__CurveTo__ParametersAssignment_1)*
{ after(grammarAccess.getCurveToAccess().getParametersAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SmoothCurveTo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SmoothCurveTo__Group__0__Impl
	rule__SmoothCurveTo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SmoothCurveTo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSmoothCurveToAccess().getAlternatives_0()); }
(rule__SmoothCurveTo__Alternatives_0)
{ after(grammarAccess.getSmoothCurveToAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SmoothCurveTo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SmoothCurveTo__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SmoothCurveTo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSmoothCurveToAccess().getParametersAssignment_1()); }
(rule__SmoothCurveTo__ParametersAssignment_1)
{ after(grammarAccess.getSmoothCurveToAccess().getParametersAssignment_1()); }
)
(
{ before(grammarAccess.getSmoothCurveToAccess().getParametersAssignment_1()); }
(rule__SmoothCurveTo__ParametersAssignment_1)*
{ after(grammarAccess.getSmoothCurveToAccess().getParametersAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QuadraticBezierCurve__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuadraticBezierCurve__Group__0__Impl
	rule__QuadraticBezierCurve__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuadraticBezierCurve__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuadraticBezierCurveAccess().getAlternatives_0()); }
(rule__QuadraticBezierCurve__Alternatives_0)
{ after(grammarAccess.getQuadraticBezierCurveAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuadraticBezierCurve__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuadraticBezierCurve__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuadraticBezierCurve__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getQuadraticBezierCurveAccess().getParametersAssignment_1()); }
(rule__QuadraticBezierCurve__ParametersAssignment_1)
{ after(grammarAccess.getQuadraticBezierCurveAccess().getParametersAssignment_1()); }
)
(
{ before(grammarAccess.getQuadraticBezierCurveAccess().getParametersAssignment_1()); }
(rule__QuadraticBezierCurve__ParametersAssignment_1)*
{ after(grammarAccess.getQuadraticBezierCurveAccess().getParametersAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SmoothQuadraticBezierCurveTo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SmoothQuadraticBezierCurveTo__Group__0__Impl
	rule__SmoothQuadraticBezierCurveTo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SmoothQuadraticBezierCurveTo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSmoothQuadraticBezierCurveToAccess().getAlternatives_0()); }
(rule__SmoothQuadraticBezierCurveTo__Alternatives_0)
{ after(grammarAccess.getSmoothQuadraticBezierCurveToAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SmoothQuadraticBezierCurveTo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SmoothQuadraticBezierCurveTo__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SmoothQuadraticBezierCurveTo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSmoothQuadraticBezierCurveToAccess().getParametersAssignment_1()); }
(rule__SmoothQuadraticBezierCurveTo__ParametersAssignment_1)
{ after(grammarAccess.getSmoothQuadraticBezierCurveToAccess().getParametersAssignment_1()); }
)
(
{ before(grammarAccess.getSmoothQuadraticBezierCurveToAccess().getParametersAssignment_1()); }
(rule__SmoothQuadraticBezierCurveTo__ParametersAssignment_1)*
{ after(grammarAccess.getSmoothQuadraticBezierCurveToAccess().getParametersAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EllipticalArc__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EllipticalArc__Group__0__Impl
	rule__EllipticalArc__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EllipticalArc__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEllipticalArcAccess().getAlternatives_0()); }
(rule__EllipticalArc__Alternatives_0)
{ after(grammarAccess.getEllipticalArcAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EllipticalArc__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EllipticalArc__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EllipticalArc__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getEllipticalArcAccess().getParametersAssignment_1()); }
(rule__EllipticalArc__ParametersAssignment_1)
{ after(grammarAccess.getEllipticalArcAccess().getParametersAssignment_1()); }
)
(
{ before(grammarAccess.getEllipticalArcAccess().getParametersAssignment_1()); }
(rule__EllipticalArc__ParametersAssignment_1)*
{ after(grammarAccess.getEllipticalArcAccess().getParametersAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Points__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Points__Group__0__Impl
	rule__Points__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Points__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsAccess().getXAssignment_0()); }
(rule__Points__XAssignment_0)
{ after(grammarAccess.getPointsAccess().getXAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Points__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Points__Group__1__Impl
	rule__Points__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Points__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsAccess().getCommaKeyword_1()); }

	',' 

{ after(grammarAccess.getPointsAccess().getCommaKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Points__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Points__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Points__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsAccess().getYAssignment_2()); }
(rule__Points__YAssignment_2)
{ after(grammarAccess.getPointsAccess().getYAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PathParametersMLT__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersMLT__Group__0__Impl
	rule__PathParametersMLT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersMLT__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersMLTAccess().getXAssignment_0()); }
(rule__PathParametersMLT__XAssignment_0)
{ after(grammarAccess.getPathParametersMLTAccess().getXAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathParametersMLT__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersMLT__Group__1__Impl
	rule__PathParametersMLT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersMLT__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersMLTAccess().getCommaKeyword_1()); }

	',' 

{ after(grammarAccess.getPathParametersMLTAccess().getCommaKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathParametersMLT__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersMLT__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersMLT__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersMLTAccess().getYAssignment_2()); }
(rule__PathParametersMLT__YAssignment_2)
{ after(grammarAccess.getPathParametersMLTAccess().getYAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PathParametersS__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersS__Group__0__Impl
	rule__PathParametersS__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersS__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersSAccess().getX2Assignment_0()); }
(rule__PathParametersS__X2Assignment_0)
{ after(grammarAccess.getPathParametersSAccess().getX2Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathParametersS__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersS__Group__1__Impl
	rule__PathParametersS__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersS__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersSAccess().getY2Assignment_1()); }
(rule__PathParametersS__Y2Assignment_1)
{ after(grammarAccess.getPathParametersSAccess().getY2Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathParametersS__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersS__Group__2__Impl
	rule__PathParametersS__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersS__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersSAccess().getXAssignment_2()); }
(rule__PathParametersS__XAssignment_2)
{ after(grammarAccess.getPathParametersSAccess().getXAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathParametersS__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersS__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersS__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersSAccess().getYAssignment_3()); }
(rule__PathParametersS__YAssignment_3)
{ after(grammarAccess.getPathParametersSAccess().getYAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PathParametersQ__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersQ__Group__0__Impl
	rule__PathParametersQ__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersQ__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersQAccess().getX1Assignment_0()); }
(rule__PathParametersQ__X1Assignment_0)
{ after(grammarAccess.getPathParametersQAccess().getX1Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathParametersQ__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersQ__Group__1__Impl
	rule__PathParametersQ__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersQ__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersQAccess().getY1Assignment_1()); }
(rule__PathParametersQ__Y1Assignment_1)
{ after(grammarAccess.getPathParametersQAccess().getY1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathParametersQ__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersQ__Group__2__Impl
	rule__PathParametersQ__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersQ__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersQAccess().getXAssignment_2()); }
(rule__PathParametersQ__XAssignment_2)
{ after(grammarAccess.getPathParametersQAccess().getXAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathParametersQ__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersQ__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersQ__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersQAccess().getYAssignment_3()); }
(rule__PathParametersQ__YAssignment_3)
{ after(grammarAccess.getPathParametersQAccess().getYAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PathParametersC__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersC__Group__0__Impl
	rule__PathParametersC__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersC__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersCAccess().getX1Assignment_0()); }
(rule__PathParametersC__X1Assignment_0)
{ after(grammarAccess.getPathParametersCAccess().getX1Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathParametersC__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersC__Group__1__Impl
	rule__PathParametersC__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersC__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersCAccess().getY1Assignment_1()); }
(rule__PathParametersC__Y1Assignment_1)
{ after(grammarAccess.getPathParametersCAccess().getY1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathParametersC__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersC__Group__2__Impl
	rule__PathParametersC__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersC__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersCAccess().getX2Assignment_2()); }
(rule__PathParametersC__X2Assignment_2)
{ after(grammarAccess.getPathParametersCAccess().getX2Assignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathParametersC__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersC__Group__3__Impl
	rule__PathParametersC__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersC__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersCAccess().getY2Assignment_3()); }
(rule__PathParametersC__Y2Assignment_3)
{ after(grammarAccess.getPathParametersCAccess().getY2Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathParametersC__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersC__Group__4__Impl
	rule__PathParametersC__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersC__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersCAccess().getXAssignment_4()); }
(rule__PathParametersC__XAssignment_4)
{ after(grammarAccess.getPathParametersCAccess().getXAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathParametersC__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersC__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersC__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersCAccess().getYAssignment_5()); }
(rule__PathParametersC__YAssignment_5)
{ after(grammarAccess.getPathParametersCAccess().getYAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__PathParametersA__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersA__Group__0__Impl
	rule__PathParametersA__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersA__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersAAccess().getRxAssignment_0()); }
(rule__PathParametersA__RxAssignment_0)
{ after(grammarAccess.getPathParametersAAccess().getRxAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathParametersA__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersA__Group__1__Impl
	rule__PathParametersA__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersA__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersAAccess().getCommaKeyword_1()); }

	',' 

{ after(grammarAccess.getPathParametersAAccess().getCommaKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathParametersA__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersA__Group__2__Impl
	rule__PathParametersA__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersA__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersAAccess().getRyAssignment_2()); }
(rule__PathParametersA__RyAssignment_2)
{ after(grammarAccess.getPathParametersAAccess().getRyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathParametersA__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersA__Group__3__Impl
	rule__PathParametersA__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersA__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersAAccess().getXaxisrotAssignment_3()); }
(rule__PathParametersA__XaxisrotAssignment_3)
{ after(grammarAccess.getPathParametersAAccess().getXaxisrotAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathParametersA__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersA__Group__4__Impl
	rule__PathParametersA__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersA__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersAAccess().getLargearcflagAssignment_4()); }
(rule__PathParametersA__LargearcflagAssignment_4)
{ after(grammarAccess.getPathParametersAAccess().getLargearcflagAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathParametersA__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersA__Group__5__Impl
	rule__PathParametersA__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersA__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersAAccess().getSweepflagAssignment_5()); }
(rule__PathParametersA__SweepflagAssignment_5)
{ after(grammarAccess.getPathParametersAAccess().getSweepflagAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathParametersA__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersA__Group__6__Impl
	rule__PathParametersA__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersA__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersAAccess().getXAssignment_6()); }
(rule__PathParametersA__XAssignment_6)
{ after(grammarAccess.getPathParametersAAccess().getXAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PathParametersA__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PathParametersA__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersA__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersAAccess().getYAssignment_7()); }
(rule__PathParametersA__YAssignment_7)
{ after(grammarAccess.getPathParametersAAccess().getYAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__SymbolStyle__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolStyle__Group__0__Impl
	rule__SymbolStyle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getStyleKeyword_0()); }

	'style' 

{ after(grammarAccess.getSymbolStyleAccess().getStyleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolStyle__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolStyle__Group__1__Impl
	rule__SymbolStyle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getNameAssignment_1()); }
(rule__SymbolStyle__NameAssignment_1)
{ after(grammarAccess.getSymbolStyleAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolStyle__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolStyle__Group__2__Impl
	rule__SymbolStyle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getSymbolStyleAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolStyle__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolStyle__Group__3__Impl
	rule__SymbolStyle__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getFillKeyword_3()); }

	'fill' 

{ after(grammarAccess.getSymbolStyleAccess().getFillKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolStyle__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolStyle__Group__4__Impl
	rule__SymbolStyle__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getSymbolStyleAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolStyle__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolStyle__Group__5__Impl
	rule__SymbolStyle__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getAlternatives_5()); }
(rule__SymbolStyle__Alternatives_5)
{ after(grammarAccess.getSymbolStyleAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolStyle__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolStyle__Group__6__Impl
	rule__SymbolStyle__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getStrokeKeyword_6()); }

	'stroke' 

{ after(grammarAccess.getSymbolStyleAccess().getStrokeKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolStyle__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolStyle__Group__7__Impl
	rule__SymbolStyle__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getColonKeyword_7()); }

	':' 

{ after(grammarAccess.getSymbolStyleAccess().getColonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolStyle__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolStyle__Group__8__Impl
	rule__SymbolStyle__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getStrokecolorAssignment_8()); }
(rule__SymbolStyle__StrokecolorAssignment_8)
{ after(grammarAccess.getSymbolStyleAccess().getStrokecolorAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolStyle__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolStyle__Group__9__Impl
	rule__SymbolStyle__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getStrokeWidthKeyword_9()); }

	'stroke-width' 

{ after(grammarAccess.getSymbolStyleAccess().getStrokeWidthKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolStyle__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolStyle__Group__10__Impl
	rule__SymbolStyle__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getColonKeyword_10()); }

	':' 

{ after(grammarAccess.getSymbolStyleAccess().getColonKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolStyle__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolStyle__Group__11__Impl
	rule__SymbolStyle__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getStrokewidthAssignment_11()); }
(rule__SymbolStyle__StrokewidthAssignment_11)
{ after(grammarAccess.getSymbolStyleAccess().getStrokewidthAssignment_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolStyle__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolStyle__Group__12__Impl
	rule__SymbolStyle__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getGroup_12()); }
(rule__SymbolStyle__Group_12__0)?
{ after(grammarAccess.getSymbolStyleAccess().getGroup_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolStyle__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolStyle__Group__13__Impl
	rule__SymbolStyle__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getGroup_13()); }
(rule__SymbolStyle__Group_13__0)?
{ after(grammarAccess.getSymbolStyleAccess().getGroup_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolStyle__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolStyle__Group__14__Impl
	rule__SymbolStyle__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getInsertembedcodeAssignment_14()); }
(rule__SymbolStyle__InsertembedcodeAssignment_14)*
{ after(grammarAccess.getSymbolStyleAccess().getInsertembedcodeAssignment_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolStyle__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolStyle__Group__15__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__Group__15__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getRightCurlyBracketKeyword_15()); }

	'}' 

{ after(grammarAccess.getSymbolStyleAccess().getRightCurlyBracketKeyword_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}


































rule__SymbolStyle__Group_12__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolStyle__Group_12__0__Impl
	rule__SymbolStyle__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__Group_12__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getFontFamilyKeyword_12_0()); }

	'font-family' 

{ after(grammarAccess.getSymbolStyleAccess().getFontFamilyKeyword_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolStyle__Group_12__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolStyle__Group_12__1__Impl
	rule__SymbolStyle__Group_12__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__Group_12__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getColonKeyword_12_1()); }

	':' 

{ after(grammarAccess.getSymbolStyleAccess().getColonKeyword_12_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolStyle__Group_12__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolStyle__Group_12__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__Group_12__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getFontfamilyAssignment_12_2()); }
(rule__SymbolStyle__FontfamilyAssignment_12_2)
{ after(grammarAccess.getSymbolStyleAccess().getFontfamilyAssignment_12_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SymbolStyle__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolStyle__Group_13__0__Impl
	rule__SymbolStyle__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__Group_13__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getFontSizeKeyword_13_0()); }

	'font-size' 

{ after(grammarAccess.getSymbolStyleAccess().getFontSizeKeyword_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolStyle__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolStyle__Group_13__1__Impl
	rule__SymbolStyle__Group_13__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__Group_13__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getColonKeyword_13_1()); }

	':' 

{ after(grammarAccess.getSymbolStyleAccess().getColonKeyword_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolStyle__Group_13__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolStyle__Group_13__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__Group_13__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getFontsizeAssignment_13_2()); }
(rule__SymbolStyle__FontsizeAssignment_13_2)
{ after(grammarAccess.getSymbolStyleAccess().getFontsizeAssignment_13_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FillColor__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FillColor__Group_0__0__Impl
	rule__FillColor__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FillColor__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFillColorAccess().getFillColorAction_0_0()); }
(

)
{ after(grammarAccess.getFillColorAccess().getFillColorAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FillColor__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FillColor__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FillColor__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFillColorAccess().getColorAssignment_0_1()); }
(rule__FillColor__ColorAssignment_0_1)
{ after(grammarAccess.getFillColorAccess().getColorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StrokeColor__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StrokeColor__Group_0__0__Impl
	rule__StrokeColor__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StrokeColor__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStrokeColorAccess().getStrokeColorAction_0_0()); }
(

)
{ after(grammarAccess.getStrokeColorAccess().getStrokeColorAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StrokeColor__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StrokeColor__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StrokeColor__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStrokeColorAccess().getColorAssignment_0_1()); }
(rule__StrokeColor__ColorAssignment_0_1)
{ after(grammarAccess.getStrokeColorAccess().getColorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FontFamily__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FontFamily__Group_0__0__Impl
	rule__FontFamily__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FontFamily__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFontFamilyAccess().getFontFamilyAction_0_0()); }
(

)
{ after(grammarAccess.getFontFamilyAccess().getFontFamilyAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FontFamily__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FontFamily__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FontFamily__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFontFamilyAccess().getFontstrAssignment_0_1()); }
(rule__FontFamily__FontstrAssignment_0_1)
{ after(grammarAccess.getFontFamilyAccess().getFontstrAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Algorithm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Algorithm__Group__0__Impl
	rule__Algorithm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgorithmAccess().getAlgorithmKeyword_0()); }

	'algorithm' 

{ after(grammarAccess.getAlgorithmAccess().getAlgorithmKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Algorithm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Algorithm__Group__1__Impl
	rule__Algorithm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgorithmAccess().getNameAssignment_1()); }
(rule__Algorithm__NameAssignment_1)
{ after(grammarAccess.getAlgorithmAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Algorithm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Algorithm__Group__2__Impl
	rule__Algorithm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgorithmAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getAlgorithmAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Algorithm__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Algorithm__Group__3__Impl
	rule__Algorithm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgorithmAccess().getStmntAssignment_3()); }
(rule__Algorithm__StmntAssignment_3)*
{ after(grammarAccess.getAlgorithmAccess().getStmntAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Algorithm__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Algorithm__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgorithmAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getAlgorithmAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SelectionStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group__0__Impl
	rule__SelectionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getGroup_0()); }
(rule__SelectionStatement__Group_0__0)
{ after(grammarAccess.getSelectionStatementAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getGroup_1()); }
(rule__SelectionStatement__Group_1__0)?
{ after(grammarAccess.getSelectionStatementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelectionStatement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_0__0__Impl
	rule__SelectionStatement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getIfKeyword_0_0()); }

	'if' 

{ after(grammarAccess.getSelectionStatementAccess().getIfKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_0__1__Impl
	rule__SelectionStatement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getLeftParenthesisKeyword_0_1()); }

	'(' 

{ after(grammarAccess.getSelectionStatementAccess().getLeftParenthesisKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_0__2__Impl
	rule__SelectionStatement__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getIfconditionAssignment_0_2()); }
(rule__SelectionStatement__IfconditionAssignment_0_2)
{ after(grammarAccess.getSelectionStatementAccess().getIfconditionAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_0__3__Impl
	rule__SelectionStatement__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getRightParenthesisKeyword_0_3()); }

	')' 

{ after(grammarAccess.getSelectionStatementAccess().getRightParenthesisKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_0__4__Impl
	rule__SelectionStatement__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getLeftCurlyBracketKeyword_0_4()); }

	'{' 

{ after(grammarAccess.getSelectionStatementAccess().getLeftCurlyBracketKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_0__5__Impl
	rule__SelectionStatement__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getIfblockAssignment_0_5()); }
(rule__SelectionStatement__IfblockAssignment_0_5)*
{ after(grammarAccess.getSelectionStatementAccess().getIfblockAssignment_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_0__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getRightCurlyBracketKeyword_0_6()); }

	'}' 

{ after(grammarAccess.getSelectionStatementAccess().getRightCurlyBracketKeyword_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SelectionStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1__0__Impl
	rule__SelectionStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getGroup_1_0()); }
(rule__SelectionStatement__Group_1_0__0)*
{ after(grammarAccess.getSelectionStatementAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1__1__Impl
	rule__SelectionStatement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getElseKeyword_1_1()); }

	'else' 

{ after(grammarAccess.getSelectionStatementAccess().getElseKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1__2__Impl
	rule__SelectionStatement__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getLeftCurlyBracketKeyword_1_2()); }

	'{' 

{ after(grammarAccess.getSelectionStatementAccess().getLeftCurlyBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1__3__Impl
	rule__SelectionStatement__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getElseblockAssignment_1_3()); }
(rule__SelectionStatement__ElseblockAssignment_1_3)*
{ after(grammarAccess.getSelectionStatementAccess().getElseblockAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getRightCurlyBracketKeyword_1_4()); }

	'}' 

{ after(grammarAccess.getSelectionStatementAccess().getRightCurlyBracketKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SelectionStatement__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1_0__0__Impl
	rule__SelectionStatement__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getElseifKeyword_1_0_0()); }

	'elseif' 

{ after(grammarAccess.getSelectionStatementAccess().getElseifKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1_0__1__Impl
	rule__SelectionStatement__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getLeftParenthesisKeyword_1_0_1()); }

	'(' 

{ after(grammarAccess.getSelectionStatementAccess().getLeftParenthesisKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1_0__2__Impl
	rule__SelectionStatement__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getElseifconditionAssignment_1_0_2()); }
(rule__SelectionStatement__ElseifconditionAssignment_1_0_2)
{ after(grammarAccess.getSelectionStatementAccess().getElseifconditionAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1_0__3__Impl
	rule__SelectionStatement__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getRightParenthesisKeyword_1_0_3()); }

	')' 

{ after(grammarAccess.getSelectionStatementAccess().getRightParenthesisKeyword_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1_0__4__Impl
	rule__SelectionStatement__Group_1_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getLeftCurlyBracketKeyword_1_0_4()); }

	'{' 

{ after(grammarAccess.getSelectionStatementAccess().getLeftCurlyBracketKeyword_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_1_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1_0__5__Impl
	rule__SelectionStatement__Group_1_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getElseifblockAssignment_1_0_5()); }
(rule__SelectionStatement__ElseifblockAssignment_1_0_5)*
{ after(grammarAccess.getSelectionStatementAccess().getElseifblockAssignment_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionStatement__Group_1_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionStatement__Group_1_0__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Group_1_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getRightCurlyBracketKeyword_1_0_6()); }

	'}' 

{ after(grammarAccess.getSelectionStatementAccess().getRightCurlyBracketKeyword_1_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__WhileLoop__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileLoop__Group__0__Impl
	rule__WhileLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getWhileLoopAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileLoop__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileLoop__Group__1__Impl
	rule__WhileLoop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileLoop__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileLoop__Group__2__Impl
	rule__WhileLoop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getConditionAssignment_2()); }
(rule__WhileLoop__ConditionAssignment_2)
{ after(grammarAccess.getWhileLoopAccess().getConditionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileLoop__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileLoop__Group__3__Impl
	rule__WhileLoop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileLoop__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileLoop__Group__4__Impl
	rule__WhileLoop__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getWhileLoopAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileLoop__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileLoop__Group__5__Impl
	rule__WhileLoop__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getAlternatives_5()); }
(rule__WhileLoop__Alternatives_5)*
{ after(grammarAccess.getWhileLoopAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileLoop__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileLoop__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getWhileLoopAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ForLoop__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__0__Impl
	rule__ForLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getForLoopAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__1__Impl
	rule__ForLoop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getForLoopAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__2__Impl
	rule__ForLoop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getStartAssignment_2()); }
(rule__ForLoop__StartAssignment_2)
{ after(grammarAccess.getForLoopAccess().getStartAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__3__Impl
	rule__ForLoop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getForLoopAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__4__Impl
	rule__ForLoop__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getStopAssignment_4()); }
(rule__ForLoop__StopAssignment_4)
{ after(grammarAccess.getForLoopAccess().getStopAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__5__Impl
	rule__ForLoop__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getForLoopAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__6__Impl
	rule__ForLoop__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getIntervalAssignment_6()); }
(rule__ForLoop__IntervalAssignment_6)
{ after(grammarAccess.getForLoopAccess().getIntervalAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__7__Impl
	rule__ForLoop__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getForLoopAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__8__Impl
	rule__ForLoop__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getLeftCurlyBracketKeyword_8()); }

	'{' 

{ after(grammarAccess.getForLoopAccess().getLeftCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__9__Impl
	rule__ForLoop__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getAlternatives_9()); }
(rule__ForLoop__Alternatives_9)*
{ after(grammarAccess.getForLoopAccess().getAlternatives_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForLoop__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getForLoopAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Variable__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_0__0__Impl
	rule__Variable__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getVarKeyword_0_0()); }

	'var' 

{ after(grammarAccess.getVariableAccess().getVarKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_0__1__Impl
	rule__Variable__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameAssignment_0_1()); }
(rule__Variable__NameAssignment_0_1)
{ after(grammarAccess.getVariableAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getGroup_0_2()); }
(rule__Variable__Group_0_2__0)?
{ after(grammarAccess.getVariableAccess().getGroup_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Variable__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_0_2__0__Impl
	rule__Variable__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getOpassingAssignment_0_2_0()); }
(rule__Variable__OpassingAssignment_0_2_0)
{ after(grammarAccess.getVariableAccess().getOpassingAssignment_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getVarstatementAssignment_0_2_1()); }
(rule__Variable__VarstatementAssignment_0_2_1)
{ after(grammarAccess.getVariableAccess().getVarstatementAssignment_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1__0__Impl
	rule__Variable__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getVariableAssignment_1_0()); }
(rule__Variable__VariableAssignment_1_0)
{ after(grammarAccess.getVariableAccess().getVariableAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1__1__Impl
	rule__Variable__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getOpassingAssignment_1_1()); }
(rule__Variable__OpassingAssignment_1_1)
{ after(grammarAccess.getVariableAccess().getOpassingAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getVarstatementAssignment_1_2()); }
(rule__Variable__VarstatementAssignment_1_2)
{ after(grammarAccess.getVariableAccess().getVarstatementAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VarStatement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarStatement__Group_2__0__Impl
	rule__VarStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getClassKeyword_2_0()); }

	'class' 

{ after(grammarAccess.getVarStatementAccess().getClassKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarStatement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarStatement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getClassAssignment_2_1()); }
(rule__VarStatement__ClassAssignment_2_1)
{ after(grammarAccess.getVarStatementAccess().getClassAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarStatement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarStatement__Group_3__0__Impl
	rule__VarStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getAttributeKeyword_3_0()); }

	'attribute' 

{ after(grammarAccess.getVarStatementAccess().getAttributeKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarStatement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarStatement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getAttributeAssignment_3_1()); }
(rule__VarStatement__AttributeAssignment_3_1)
{ after(grammarAccess.getVarStatementAccess().getAttributeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarStatement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarStatement__Group_4__0__Impl
	rule__VarStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getReferenceKeyword_4_0()); }

	'reference' 

{ after(grammarAccess.getVarStatementAccess().getReferenceKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarStatement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarStatement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getReferenceAssignment_4_1()); }
(rule__VarStatement__ReferenceAssignment_4_1)
{ after(grammarAccess.getVarStatementAccess().getReferenceAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarStatement__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarStatement__Group_5__0__Impl
	rule__VarStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getSymbolclassKeyword_5_0()); }

	'symbolclass' 

{ after(grammarAccess.getVarStatementAccess().getSymbolclassKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarStatement__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarStatement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getSymbolclassAssignment_5_1()); }
(rule__VarStatement__SymbolclassAssignment_5_1)
{ after(grammarAccess.getVarStatementAccess().getSymbolclassAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarStatement__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarStatement__Group_6__0__Impl
	rule__VarStatement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getSymbolrelationKeyword_6_0()); }

	'symbolrelation' 

{ after(grammarAccess.getVarStatementAccess().getSymbolrelationKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarStatement__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarStatement__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getSymbolrelationAssignment_6_1()); }
(rule__VarStatement__SymbolrelationAssignment_6_1)
{ after(grammarAccess.getVarStatementAccess().getSymbolrelationAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarStatement__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarStatement__Group_7__0__Impl
	rule__VarStatement__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getSymbolstyleKeyword_7_0()); }

	'symbolstyle' 

{ after(grammarAccess.getVarStatementAccess().getSymbolstyleKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarStatement__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarStatement__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getSymbolstyleAssignment_7_1()); }
(rule__VarStatement__SymbolstyleAssignment_7_1)
{ after(grammarAccess.getVarStatementAccess().getSymbolstyleAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarStatement__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarStatement__Group_8__0__Impl
	rule__VarStatement__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getEmbeddedKeyword_8_0()); }

	'embedded' 

{ after(grammarAccess.getVarStatementAccess().getEmbeddedKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarStatement__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarStatement__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getEmbeddedcodeAssignment_8_1()); }
(rule__VarStatement__EmbeddedcodeAssignment_8_1)
{ after(grammarAccess.getVarStatementAccess().getEmbeddedcodeAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarStatement__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarStatement__Group_9__0__Impl
	rule__VarStatement__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getModeltypeKeyword_9_0()); }

	'modeltype' 

{ after(grammarAccess.getVarStatementAccess().getModeltypeKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarStatement__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarStatement__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getModeltypeAssignment_9_1()); }
(rule__VarStatement__ModeltypeAssignment_9_1)
{ after(grammarAccess.getVarStatementAccess().getModeltypeAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
{ after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
(rule__OrExpression__Group_1__0)*
{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1_0()); }
(rule__OrExpression__Group_1_0__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getRightAssignment_1_1()); }
(rule__OrExpression__RightAssignment_1_1)
{ after(grammarAccess.getOrExpressionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1_0_0()); }
(rule__OrExpression__Group_1_0_0__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OrExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1_0_0__0__Impl
	rule__OrExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOrExpressionLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getOrExpressionAccess().getOrExpressionLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOpAssignment_1_0_0_1()); }
(rule__OrExpression__OpAssignment_1_0_0_1)
{ after(grammarAccess.getOrExpressionAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getEqualExpressionParserRuleCall_0()); }
	ruleEqualExpression
{ after(grammarAccess.getAndExpressionAccess().getEqualExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
(rule__AndExpression__Group_1__0)*
{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1_0()); }
(rule__AndExpression__Group_1_0__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_1_1()); }
(rule__AndExpression__RightAssignment_1_1)
{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1_0_0()); }
(rule__AndExpression__Group_1_0_0__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AndExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1_0_0__0__Impl
	rule__AndExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOpAssignment_1_0_0_1()); }
(rule__AndExpression__OpAssignment_1_0_0_1)
{ after(grammarAccess.getAndExpressionAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualExpression__Group__0__Impl
	rule__EqualExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualExpressionAccess().getCompareExpressionParserRuleCall_0()); }
	ruleCompareExpression
{ after(grammarAccess.getEqualExpressionAccess().getCompareExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualExpressionAccess().getGroup_1()); }
(rule__EqualExpression__Group_1__0)*
{ after(grammarAccess.getEqualExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualExpression__Group_1__0__Impl
	rule__EqualExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualExpressionAccess().getGroup_1_0()); }
(rule__EqualExpression__Group_1_0__0)
{ after(grammarAccess.getEqualExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualExpressionAccess().getRightAssignment_1_1()); }
(rule__EqualExpression__RightAssignment_1_1)
{ after(grammarAccess.getEqualExpressionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualExpressionAccess().getGroup_1_0_0()); }
(rule__EqualExpression__Group_1_0_0__0)
{ after(grammarAccess.getEqualExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__EqualExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualExpression__Group_1_0_0__0__Impl
	rule__EqualExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualExpressionAccess().getEqualExpressionLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getEqualExpressionAccess().getEqualExpressionLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualExpressionAccess().getOpAssignment_1_0_0_1()); }
(rule__EqualExpression__OpAssignment_1_0_0_1)
{ after(grammarAccess.getEqualExpressionAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression__Group__0__Impl
	rule__CompareExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getAdditionExpressionParserRuleCall_0()); }
	ruleAdditionExpression
{ after(grammarAccess.getCompareExpressionAccess().getAdditionExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getGroup_1()); }
(rule__CompareExpression__Group_1__0)*
{ after(grammarAccess.getCompareExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression__Group_1__0__Impl
	rule__CompareExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getGroup_1_0()); }
(rule__CompareExpression__Group_1_0__0)
{ after(grammarAccess.getCompareExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getRightAssignment_1_1()); }
(rule__CompareExpression__RightAssignment_1_1)
{ after(grammarAccess.getCompareExpressionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getGroup_1_0_0()); }
(rule__CompareExpression__Group_1_0_0__0)
{ after(grammarAccess.getCompareExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__CompareExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression__Group_1_0_0__0__Impl
	rule__CompareExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getCompareExpressionLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getCompareExpressionAccess().getCompareExpressionLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getOpAssignment_1_0_0_1()); }
(rule__CompareExpression__OpAssignment_1_0_0_1)
{ after(grammarAccess.getCompareExpressionAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditionExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionExpression__Group__0__Impl
	rule__AdditionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionExpressionAccess().getMultiplicationExpressionParserRuleCall_0()); }
	ruleMultiplicationExpression
{ after(grammarAccess.getAdditionExpressionAccess().getMultiplicationExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionExpressionAccess().getGroup_1()); }
(rule__AdditionExpression__Group_1__0)*
{ after(grammarAccess.getAdditionExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditionExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionExpression__Group_1__0__Impl
	rule__AdditionExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionExpressionAccess().getGroup_1_0()); }
(rule__AdditionExpression__Group_1_0__0)
{ after(grammarAccess.getAdditionExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionExpressionAccess().getRightAssignment_1_1()); }
(rule__AdditionExpression__RightAssignment_1_1)
{ after(grammarAccess.getAdditionExpressionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditionExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionExpressionAccess().getGroup_1_0_0()); }
(rule__AdditionExpression__Group_1_0_0__0)
{ after(grammarAccess.getAdditionExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AdditionExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionExpression__Group_1_0_0__0__Impl
	rule__AdditionExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionExpressionAccess().getAdditionExpressionLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAdditionExpressionAccess().getAdditionExpressionLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionExpressionAccess().getOpAssignment_1_0_0_1()); }
(rule__AdditionExpression__OpAssignment_1_0_0_1)
{ after(grammarAccess.getAdditionExpressionAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicationExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationExpression__Group__0__Impl
	rule__MultiplicationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
	ruleUnaryExpression
{ after(grammarAccess.getMultiplicationExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpressionAccess().getGroup_1()); }
(rule__MultiplicationExpression__Group_1__0)*
{ after(grammarAccess.getMultiplicationExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicationExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationExpression__Group_1__0__Impl
	rule__MultiplicationExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpressionAccess().getGroup_1_0()); }
(rule__MultiplicationExpression__Group_1_0__0)
{ after(grammarAccess.getMultiplicationExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpressionAccess().getRightAssignment_1_1()); }
(rule__MultiplicationExpression__RightAssignment_1_1)
{ after(grammarAccess.getMultiplicationExpressionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicationExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpressionAccess().getGroup_1_0_0()); }
(rule__MultiplicationExpression__Group_1_0_0__0)
{ after(grammarAccess.getMultiplicationExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__MultiplicationExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationExpression__Group_1_0_0__0__Impl
	rule__MultiplicationExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpressionAccess().getMultiplicationExpressionLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getMultiplicationExpressionAccess().getMultiplicationExpressionLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpressionAccess().getOpAssignment_1_0_0_1()); }
(rule__MultiplicationExpression__OpAssignment_1_0_0_1)
{ after(grammarAccess.getMultiplicationExpressionAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group__0__Impl
	rule__UnaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getOpAssignment_0()); }
(rule__UnaryExpression__OpAssignment_0)?
{ after(grammarAccess.getUnaryExpressionAccess().getOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getOperandAssignment_1()); }
(rule__UnaryExpression__OperandAssignment_1)
{ after(grammarAccess.getUnaryExpressionAccess().getOperandAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__0__Impl
	rule__PrimaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__1__Impl
	rule__PrimaryExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionAssignment_1_1()); }
(rule__PrimaryExpression__ExpressionAssignment_1_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FileOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileOperation__Group__0__Impl
	rule__FileOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FileOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileOperationAccess().getFileKeyword_0()); }

	'file' 

{ after(grammarAccess.getFileOperationAccess().getFileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileOperation__Group__1__Impl
	rule__FileOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FileOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileOperationAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getFileOperationAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileOperation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileOperation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FileOperation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileOperationAccess().getAlternatives_2()); }
(rule__FileOperation__Alternatives_2)
{ after(grammarAccess.getFileOperationAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FileCopy__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileCopy__Group__0__Impl
	rule__FileCopy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FileCopy__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileCopyAccess().getCopyKeyword_0()); }

	'copy' 

{ after(grammarAccess.getFileCopyAccess().getCopyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileCopy__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileCopy__Group__1__Impl
	rule__FileCopy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FileCopy__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileCopyAccess().getSourceKeyword_1()); }

	'source' 

{ after(grammarAccess.getFileCopyAccess().getSourceKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileCopy__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileCopy__Group__2__Impl
	rule__FileCopy__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FileCopy__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileCopyAccess().getSrcAssignment_2()); }
(rule__FileCopy__SrcAssignment_2)
{ after(grammarAccess.getFileCopyAccess().getSrcAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileCopy__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileCopy__Group__3__Impl
	rule__FileCopy__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FileCopy__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileCopyAccess().getDestinationKeyword_3()); }

	'destination' 

{ after(grammarAccess.getFileCopyAccess().getDestinationKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileCopy__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileCopy__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FileCopy__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileCopyAccess().getDestAssignment_4()); }
(rule__FileCopy__DestAssignment_4)
{ after(grammarAccess.getFileCopyAccess().getDestAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FileDelete__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileDelete__Group__0__Impl
	rule__FileDelete__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FileDelete__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileDeleteAccess().getDeleteKeyword_0()); }

	'delete' 

{ after(grammarAccess.getFileDeleteAccess().getDeleteKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileDelete__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileDelete__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FileDelete__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileDeleteAccess().getFilenameAssignment_1()); }
(rule__FileDelete__FilenameAssignment_1)
{ after(grammarAccess.getFileDeleteAccess().getFilenameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FileCreate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileCreate__Group__0__Impl
	rule__FileCreate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FileCreate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileCreateAccess().getCreateKeyword_0()); }

	'create' 

{ after(grammarAccess.getFileCreateAccess().getCreateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileCreate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileCreate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FileCreate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileCreateAccess().getFilenameAssignment_1()); }
(rule__FileCreate__FilenameAssignment_1)
{ after(grammarAccess.getFileCreateAccess().getFilenameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FileRead__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileRead__Group__0__Impl
	rule__FileRead__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FileRead__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileReadAccess().getReadKeyword_0()); }

	'read' 

{ after(grammarAccess.getFileReadAccess().getReadKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileRead__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileRead__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FileRead__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileReadAccess().getFilenameAssignment_1()); }
(rule__FileRead__FilenameAssignment_1)
{ after(grammarAccess.getFileReadAccess().getFilenameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FileWrite__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileWrite__Group__0__Impl
	rule__FileWrite__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FileWrite__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileWriteAccess().getWriteKeyword_0()); }

	'write' 

{ after(grammarAccess.getFileWriteAccess().getWriteKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileWrite__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileWrite__Group__1__Impl
	rule__FileWrite__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FileWrite__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileWriteAccess().getFilenameAssignment_1()); }
(rule__FileWrite__FilenameAssignment_1)
{ after(grammarAccess.getFileWriteAccess().getFilenameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileWrite__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileWrite__Group__2__Impl
	rule__FileWrite__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FileWrite__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileWriteAccess().getTextKeyword_2()); }

	'text' 

{ after(grammarAccess.getFileWriteAccess().getTextKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileWrite__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileWrite__Group__3__Impl
	rule__FileWrite__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FileWrite__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileWriteAccess().getTextAssignment_3()); }
(rule__FileWrite__TextAssignment_3)
{ after(grammarAccess.getFileWriteAccess().getTextAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileWrite__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileWrite__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FileWrite__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileWriteAccess().getAppendAssignment_4()); }
(rule__FileWrite__AppendAssignment_4)?
{ after(grammarAccess.getFileWriteAccess().getAppendAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DirOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirOperation__Group__0__Impl
	rule__DirOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirOperationAccess().getDirKeyword_0()); }

	'dir' 

{ after(grammarAccess.getDirOperationAccess().getDirKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DirOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirOperation__Group__1__Impl
	rule__DirOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DirOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirOperationAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getDirOperationAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DirOperation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirOperation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirOperation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirOperationAccess().getAlternatives_2()); }
(rule__DirOperation__Alternatives_2)
{ after(grammarAccess.getDirOperationAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DirSetWorking__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirSetWorking__Group__0__Impl
	rule__DirSetWorking__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirSetWorking__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirSetWorkingAccess().getSetKeyword_0()); }

	'set' 

{ after(grammarAccess.getDirSetWorkingAccess().getSetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DirSetWorking__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirSetWorking__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirSetWorking__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirSetWorkingAccess().getDirnameAssignment_1()); }
(rule__DirSetWorking__DirnameAssignment_1)
{ after(grammarAccess.getDirSetWorkingAccess().getDirnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DirGetWorking__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirGetWorking__Group__0__Impl
	rule__DirGetWorking__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirGetWorking__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirGetWorkingAccess().getDirGetWorkingAction_0()); }
(

)
{ after(grammarAccess.getDirGetWorkingAccess().getDirGetWorkingAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DirGetWorking__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirGetWorking__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirGetWorking__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirGetWorkingAccess().getGetKeyword_1()); }

	'get' 

{ after(grammarAccess.getDirGetWorkingAccess().getGetKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DirCreate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirCreate__Group__0__Impl
	rule__DirCreate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirCreate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirCreateAccess().getCreateKeyword_0()); }

	'create' 

{ after(grammarAccess.getDirCreateAccess().getCreateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DirCreate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirCreate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirCreate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirCreateAccess().getDirnameAssignment_1()); }
(rule__DirCreate__DirnameAssignment_1)
{ after(grammarAccess.getDirCreateAccess().getDirnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DirDelete__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirDelete__Group__0__Impl
	rule__DirDelete__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirDelete__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirDeleteAccess().getDeleteKeyword_0()); }

	'delete' 

{ after(grammarAccess.getDirDeleteAccess().getDeleteKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DirDelete__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirDelete__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirDelete__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirDeleteAccess().getDirnameAssignment_1()); }
(rule__DirDelete__DirnameAssignment_1)
{ after(grammarAccess.getDirDeleteAccess().getDirnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DirList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirList__Group__0__Impl
	rule__DirList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DirList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirListAccess().getListKeyword_0()); }

	'list' 

{ after(grammarAccess.getDirListAccess().getListKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DirList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DirList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DirList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirListAccess().getDirnameAssignment_1()); }
(rule__DirList__DirnameAssignment_1)
{ after(grammarAccess.getDirListAccess().getDirnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleUI__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleUI__Group__0__Impl
	rule__SimpleUI__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleUI__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleUIAccess().getUiKeyword_0()); }

	'ui' 

{ after(grammarAccess.getSimpleUIAccess().getUiKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleUI__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleUI__Group__1__Impl
	rule__SimpleUI__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleUI__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleUIAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getSimpleUIAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleUI__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleUI__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleUI__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleUIAccess().getAlternatives_2()); }
(rule__SimpleUI__Alternatives_2)
{ after(grammarAccess.getSimpleUIAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EditBox__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EditBox__Group__0__Impl
	rule__EditBox__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EditBox__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEditBoxAccess().getEditboxKeyword_0()); }

	'editbox' 

{ after(grammarAccess.getEditBoxAccess().getEditboxKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EditBox__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EditBox__Group__1__Impl
	rule__EditBox__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EditBox__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEditBoxAccess().getTitleKeyword_1()); }

	'title' 

{ after(grammarAccess.getEditBoxAccess().getTitleKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EditBox__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EditBox__Group__2__Impl
	rule__EditBox__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EditBox__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEditBoxAccess().getTitleAssignment_2()); }
(rule__EditBox__TitleAssignment_2)
{ after(grammarAccess.getEditBoxAccess().getTitleAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EditBox__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EditBox__Group__3__Impl
	rule__EditBox__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EditBox__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEditBoxAccess().getTextKeyword_3()); }

	'text' 

{ after(grammarAccess.getEditBoxAccess().getTextKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EditBox__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EditBox__Group__4__Impl
	rule__EditBox__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EditBox__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEditBoxAccess().getTextAssignment_4()); }
(rule__EditBox__TextAssignment_4)
{ after(grammarAccess.getEditBoxAccess().getTextAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EditBox__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EditBox__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EditBox__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEditBoxAccess().getGroup_5()); }
(rule__EditBox__Group_5__0)?
{ after(grammarAccess.getEditBoxAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__EditBox__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EditBox__Group_5__0__Impl
	rule__EditBox__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EditBox__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEditBoxAccess().getButtonKeyword_5_0()); }

	'button' 

{ after(grammarAccess.getEditBoxAccess().getButtonKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EditBox__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EditBox__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EditBox__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEditBoxAccess().getOkbuttontextAssignment_5_1()); }
(rule__EditBox__OkbuttontextAssignment_5_1)
{ after(grammarAccess.getEditBoxAccess().getOkbuttontextAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InfoBox__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfoBox__Group__0__Impl
	rule__InfoBox__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InfoBox__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfoBoxAccess().getInfoboxKeyword_0()); }

	'infobox' 

{ after(grammarAccess.getInfoBoxAccess().getInfoboxKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfoBox__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfoBox__Group__1__Impl
	rule__InfoBox__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InfoBox__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfoBoxAccess().getTitleKeyword_1()); }

	'title' 

{ after(grammarAccess.getInfoBoxAccess().getTitleKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfoBox__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfoBox__Group__2__Impl
	rule__InfoBox__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InfoBox__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfoBoxAccess().getTitleAssignment_2()); }
(rule__InfoBox__TitleAssignment_2)
{ after(grammarAccess.getInfoBoxAccess().getTitleAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfoBox__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfoBox__Group__3__Impl
	rule__InfoBox__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InfoBox__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfoBoxAccess().getTextKeyword_3()); }

	'text' 

{ after(grammarAccess.getInfoBoxAccess().getTextKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InfoBox__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InfoBox__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InfoBox__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfoBoxAccess().getTextAssignment_4()); }
(rule__InfoBox__TextAssignment_4)
{ after(grammarAccess.getInfoBoxAccess().getTextAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ErrorBox__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ErrorBox__Group__0__Impl
	rule__ErrorBox__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorBox__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorBoxAccess().getErrorboxKeyword_0()); }

	'errorbox' 

{ after(grammarAccess.getErrorBoxAccess().getErrorboxKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ErrorBox__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ErrorBox__Group__1__Impl
	rule__ErrorBox__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorBox__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorBoxAccess().getTitleKeyword_1()); }

	'title' 

{ after(grammarAccess.getErrorBoxAccess().getTitleKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ErrorBox__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ErrorBox__Group__2__Impl
	rule__ErrorBox__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorBox__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorBoxAccess().getTitleAssignment_2()); }
(rule__ErrorBox__TitleAssignment_2)
{ after(grammarAccess.getErrorBoxAccess().getTitleAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ErrorBox__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ErrorBox__Group__3__Impl
	rule__ErrorBox__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorBox__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorBoxAccess().getTextKeyword_3()); }

	'text' 

{ after(grammarAccess.getErrorBoxAccess().getTextKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ErrorBox__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ErrorBox__Group__4__Impl
	rule__ErrorBox__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorBox__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorBoxAccess().getTextAssignment_4()); }
(rule__ErrorBox__TextAssignment_4)
{ after(grammarAccess.getErrorBoxAccess().getTextAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ErrorBox__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ErrorBox__Group__5__Impl
	rule__ErrorBox__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorBox__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorBoxAccess().getButtonKeyword_5()); }

	'button' 

{ after(grammarAccess.getErrorBoxAccess().getButtonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ErrorBox__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ErrorBox__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorBox__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorBoxAccess().getButtontypeAssignment_6()); }
(rule__ErrorBox__ButtontypeAssignment_6)
{ after(grammarAccess.getErrorBoxAccess().getButtontypeAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__WarningBox__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WarningBox__Group__0__Impl
	rule__WarningBox__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WarningBox__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWarningBoxAccess().getWarningboxKeyword_0()); }

	'warningbox' 

{ after(grammarAccess.getWarningBoxAccess().getWarningboxKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WarningBox__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WarningBox__Group__1__Impl
	rule__WarningBox__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WarningBox__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWarningBoxAccess().getTitleKeyword_1()); }

	'title' 

{ after(grammarAccess.getWarningBoxAccess().getTitleKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WarningBox__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WarningBox__Group__2__Impl
	rule__WarningBox__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WarningBox__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWarningBoxAccess().getTitleAssignment_2()); }
(rule__WarningBox__TitleAssignment_2)
{ after(grammarAccess.getWarningBoxAccess().getTitleAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WarningBox__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WarningBox__Group__3__Impl
	rule__WarningBox__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WarningBox__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWarningBoxAccess().getTextKeyword_3()); }

	'text' 

{ after(grammarAccess.getWarningBoxAccess().getTextKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WarningBox__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WarningBox__Group__4__Impl
	rule__WarningBox__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WarningBox__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWarningBoxAccess().getTextAssignment_4()); }
(rule__WarningBox__TextAssignment_4)
{ after(grammarAccess.getWarningBoxAccess().getTextAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WarningBox__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WarningBox__Group__5__Impl
	rule__WarningBox__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__WarningBox__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWarningBoxAccess().getButtonKeyword_5()); }

	'button' 

{ after(grammarAccess.getWarningBoxAccess().getButtonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WarningBox__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WarningBox__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WarningBox__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWarningBoxAccess().getButtontypeAssignment_6()); }
(rule__WarningBox__ButtontypeAssignment_6)
{ after(grammarAccess.getWarningBoxAccess().getButtontypeAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ViewBox__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewBox__Group__0__Impl
	rule__ViewBox__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewBox__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewBoxAccess().getViewboxKeyword_0()); }

	'viewbox' 

{ after(grammarAccess.getViewBoxAccess().getViewboxKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ViewBox__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewBox__Group__1__Impl
	rule__ViewBox__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewBox__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewBoxAccess().getTitleKeyword_1()); }

	'title' 

{ after(grammarAccess.getViewBoxAccess().getTitleKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ViewBox__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewBox__Group__2__Impl
	rule__ViewBox__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewBox__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewBoxAccess().getTitleAssignment_2()); }
(rule__ViewBox__TitleAssignment_2)
{ after(grammarAccess.getViewBoxAccess().getTitleAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ViewBox__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewBox__Group__3__Impl
	rule__ViewBox__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewBox__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewBoxAccess().getTextKeyword_3()); }

	'text' 

{ after(grammarAccess.getViewBoxAccess().getTextKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ViewBox__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewBox__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewBox__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewBoxAccess().getTextAssignment_4()); }
(rule__ViewBox__TextAssignment_4)
{ after(grammarAccess.getViewBoxAccess().getTextAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ItemOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ItemOperation__Group__0__Impl
	rule__ItemOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemOperationAccess().getItemKeyword_0()); }

	'item' 

{ after(grammarAccess.getItemOperationAccess().getItemKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ItemOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ItemOperation__Group__1__Impl
	rule__ItemOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemOperationAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getItemOperationAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ItemOperation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ItemOperation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemOperation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemOperationAccess().getAlternatives_2()); }
(rule__ItemOperation__Alternatives_2)
{ after(grammarAccess.getItemOperationAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MenuItem__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MenuItem__Group__0__Impl
	rule__MenuItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MenuItem__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMenuItemAccess().getMenuKeyword_0()); }

	'menu' 

{ after(grammarAccess.getMenuItemAccess().getMenuKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MenuItem__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MenuItem__Group__1__Impl
	rule__MenuItem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MenuItem__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMenuItemAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getMenuItemAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MenuItem__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MenuItem__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MenuItem__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMenuItemAccess().getAlternatives_2()); }
(rule__MenuItem__Alternatives_2)
{ after(grammarAccess.getMenuItemAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InsertMenuItem__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertMenuItem__Group__0__Impl
	rule__InsertMenuItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertMenuItem__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertMenuItemAccess().getInsertKeyword_0()); }

	'insert' 

{ after(grammarAccess.getInsertMenuItemAccess().getInsertKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertMenuItem__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertMenuItem__Group__1__Impl
	rule__InsertMenuItem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertMenuItem__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertMenuItemAccess().getNameAssignment_1()); }
(rule__InsertMenuItem__NameAssignment_1)
{ after(grammarAccess.getInsertMenuItemAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertMenuItem__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertMenuItem__Group__2__Impl
	rule__InsertMenuItem__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertMenuItem__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertMenuItemAccess().getToKeyword_2()); }

	'to' 

{ after(grammarAccess.getInsertMenuItemAccess().getToKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertMenuItem__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertMenuItem__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertMenuItem__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertMenuItemAccess().getMenuAssignment_3()); }
(rule__InsertMenuItem__MenuAssignment_3)
{ after(grammarAccess.getInsertMenuItemAccess().getMenuAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RemoveMenuItem__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemoveMenuItem__Group__0__Impl
	rule__RemoveMenuItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveMenuItem__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoveMenuItemAccess().getRemoveKeyword_0()); }

	'remove' 

{ after(grammarAccess.getRemoveMenuItemAccess().getRemoveKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RemoveMenuItem__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemoveMenuItem__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveMenuItem__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoveMenuItemAccess().getMenuitemnameAssignment_1()); }
(rule__RemoveMenuItem__MenuitemnameAssignment_1)
{ after(grammarAccess.getRemoveMenuItemAccess().getMenuitemnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContextItem__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContextItem__Group__0__Impl
	rule__ContextItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextItem__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextItemAccess().getContextKeyword_0()); }

	'context' 

{ after(grammarAccess.getContextItemAccess().getContextKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContextItem__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContextItem__Group__1__Impl
	rule__ContextItem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextItem__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextItemAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getContextItemAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContextItem__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContextItem__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextItem__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextItemAccess().getAlternatives_2()); }
(rule__ContextItem__Alternatives_2)
{ after(grammarAccess.getContextItemAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InsertContextItem__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertContextItem__Group__0__Impl
	rule__InsertContextItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertContextItem__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertContextItemAccess().getInsertKeyword_0()); }

	'insert' 

{ after(grammarAccess.getInsertContextItemAccess().getInsertKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertContextItem__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertContextItem__Group__1__Impl
	rule__InsertContextItem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertContextItem__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertContextItemAccess().getNameAssignment_1()); }
(rule__InsertContextItem__NameAssignment_1)
{ after(grammarAccess.getInsertContextItemAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertContextItem__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertContextItem__Group__2__Impl
	rule__InsertContextItem__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertContextItem__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertContextItemAccess().getToKeyword_2()); }

	'to' 

{ after(grammarAccess.getInsertContextItemAccess().getToKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertContextItem__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertContextItem__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertContextItem__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertContextItemAccess().getContextAssignment_3()); }
(rule__InsertContextItem__ContextAssignment_3)
{ after(grammarAccess.getInsertContextItemAccess().getContextAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RemoveContextItem__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemoveContextItem__Group__0__Impl
	rule__RemoveContextItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveContextItem__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoveContextItemAccess().getRemoveKeyword_0()); }

	'remove' 

{ after(grammarAccess.getRemoveContextItemAccess().getRemoveKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RemoveContextItem__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RemoveContextItem__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveContextItem__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoveContextItemAccess().getContextitemAssignment_1()); }
(rule__RemoveContextItem__ContextitemAssignment_1)
{ after(grammarAccess.getRemoveContextItemAccess().getContextitemAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModelOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelOperation__Group__0__Impl
	rule__ModelOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelOperationAccess().getModelKeyword_0()); }

	'model' 

{ after(grammarAccess.getModelOperationAccess().getModelKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelOperation__Group__1__Impl
	rule__ModelOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelOperationAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getModelOperationAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelOperation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelOperation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelOperation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelOperationAccess().getAlternatives_2()); }
(rule__ModelOperation__Alternatives_2)
{ after(grammarAccess.getModelOperationAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ModelCreate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelCreate__Group__0__Impl
	rule__ModelCreate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelCreate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelCreateAccess().getCreateKeyword_0()); }

	'create' 

{ after(grammarAccess.getModelCreateAccess().getCreateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelCreate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelCreate__Group__1__Impl
	rule__ModelCreate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelCreate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelCreateAccess().getNameAssignment_1()); }
(rule__ModelCreate__NameAssignment_1)
{ after(grammarAccess.getModelCreateAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelCreate__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelCreate__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelCreate__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelCreateAccess().getModeltypeAssignment_2()); }
(rule__ModelCreate__ModeltypeAssignment_2)
{ after(grammarAccess.getModelCreateAccess().getModeltypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ModelDelete__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelDelete__Group__0__Impl
	rule__ModelDelete__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDelete__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelDeleteAccess().getDeleteKeyword_0()); }

	'delete' 

{ after(grammarAccess.getModelDeleteAccess().getDeleteKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelDelete__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelDelete__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDelete__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelDeleteAccess().getModelnameAssignment_1()); }
(rule__ModelDelete__ModelnameAssignment_1)
{ after(grammarAccess.getModelDeleteAccess().getModelnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModelDiscard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelDiscard__Group__0__Impl
	rule__ModelDiscard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDiscard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelDiscardAccess().getDiscardKeyword_0()); }

	'discard' 

{ after(grammarAccess.getModelDiscardAccess().getDiscardKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelDiscard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelDiscard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDiscard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelDiscardAccess().getModelnameAssignment_1()); }
(rule__ModelDiscard__ModelnameAssignment_1)
{ after(grammarAccess.getModelDiscardAccess().getModelnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModelSave__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelSave__Group__0__Impl
	rule__ModelSave__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelSave__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelSaveAccess().getSaveKeyword_0()); }

	'save' 

{ after(grammarAccess.getModelSaveAccess().getSaveKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelSave__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelSave__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelSave__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelSaveAccess().getModelnameAssignment_1()); }
(rule__ModelSave__ModelnameAssignment_1)
{ after(grammarAccess.getModelSaveAccess().getModelnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModelLoad__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelLoad__Group__0__Impl
	rule__ModelLoad__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelLoad__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelLoadAccess().getLoadKeyword_0()); }

	'load' 

{ after(grammarAccess.getModelLoadAccess().getLoadKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelLoad__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelLoad__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelLoad__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelLoadAccess().getModelnameAssignment_1()); }
(rule__ModelLoad__ModelnameAssignment_1)
{ after(grammarAccess.getModelLoadAccess().getModelnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModelIsLoaded__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelIsLoaded__Group__0__Impl
	rule__ModelIsLoaded__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelIsLoaded__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelIsLoadedAccess().getIsloadedKeyword_0()); }

	'isloaded' 

{ after(grammarAccess.getModelIsLoadedAccess().getIsloadedKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelIsLoaded__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelIsLoaded__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelIsLoaded__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelIsLoadedAccess().getModelnameAssignment_1()); }
(rule__ModelIsLoaded__ModelnameAssignment_1)
{ after(grammarAccess.getModelIsLoadedAccess().getModelnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InstanceOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceOperation__Group__0__Impl
	rule__InstanceOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOperationAccess().getInstanceKeyword_0()); }

	'instance' 

{ after(grammarAccess.getInstanceOperationAccess().getInstanceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceOperation__Group__1__Impl
	rule__InstanceOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOperationAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getInstanceOperationAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceOperation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceOperation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOperation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOperationAccess().getAlternatives_2()); }
(rule__InstanceOperation__Alternatives_2)
{ after(grammarAccess.getInstanceOperationAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClassInstance__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassInstance__Group__0__Impl
	rule__ClassInstance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstance__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceAccess().getClassKeyword_0()); }

	'class' 

{ after(grammarAccess.getClassInstanceAccess().getClassKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassInstance__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassInstance__Group__1__Impl
	rule__ClassInstance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstance__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getClassInstanceAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassInstance__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassInstance__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstance__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceAccess().getAlternatives_2()); }
(rule__ClassInstance__Alternatives_2)
{ after(grammarAccess.getClassInstanceAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClassInstanceCreate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassInstanceCreate__Group__0__Impl
	rule__ClassInstanceCreate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceCreateAccess().getCreateKeyword_0()); }

	'create' 

{ after(grammarAccess.getClassInstanceCreateAccess().getCreateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassInstanceCreate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassInstanceCreate__Group__1__Impl
	rule__ClassInstanceCreate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceCreateAccess().getNameAssignment_1()); }
(rule__ClassInstanceCreate__NameAssignment_1)
{ after(grammarAccess.getClassInstanceCreateAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassInstanceCreate__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassInstanceCreate__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreate__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceCreateAccess().getNameofclassAssignment_2()); }
(rule__ClassInstanceCreate__NameofclassAssignment_2)
{ after(grammarAccess.getClassInstanceCreateAccess().getNameofclassAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClassInstanceDelete__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassInstanceDelete__Group__0__Impl
	rule__ClassInstanceDelete__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceDelete__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceDeleteAccess().getDeleteKeyword_0()); }

	'delete' 

{ after(grammarAccess.getClassInstanceDeleteAccess().getDeleteKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassInstanceDelete__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassInstanceDelete__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceDelete__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceDeleteAccess().getNameofclassinstanceAssignment_1()); }
(rule__ClassInstanceDelete__NameofclassinstanceAssignment_1)
{ after(grammarAccess.getClassInstanceDeleteAccess().getNameofclassinstanceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassInstanceGet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassInstanceGet__Group__0__Impl
	rule__ClassInstanceGet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceGet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceGetAccess().getGetKeyword_0()); }

	'get' 

{ after(grammarAccess.getClassInstanceGetAccess().getGetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassInstanceGet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassInstanceGet__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceGet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceGetAccess().getNameofclassinstanceAssignment_1()); }
(rule__ClassInstanceGet__NameofclassinstanceAssignment_1)
{ after(grammarAccess.getClassInstanceGetAccess().getNameofclassinstanceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassInstanceGetAll__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassInstanceGetAll__Group__0__Impl
	rule__ClassInstanceGetAll__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceGetAll__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceGetAllAccess().getGetallKeyword_0()); }

	'getall' 

{ after(grammarAccess.getClassInstanceGetAllAccess().getGetallKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassInstanceGetAll__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassInstanceGetAll__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceGetAll__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceGetAllAccess().getNameofclassAssignment_1()); }
(rule__ClassInstanceGetAll__NameofclassAssignment_1)
{ after(grammarAccess.getClassInstanceGetAllAccess().getNameofclassAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassInstanceSet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassInstanceSet__Group__0__Impl
	rule__ClassInstanceSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceSet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceSetAccess().getSetKeyword_0()); }

	'set' 

{ after(grammarAccess.getClassInstanceSetAccess().getSetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassInstanceSet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassInstanceSet__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceSet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceSetAccess().getNameofclassinstanceAssignment_1()); }
(rule__ClassInstanceSet__NameofclassinstanceAssignment_1)
{ after(grammarAccess.getClassInstanceSetAccess().getNameofclassinstanceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationInstance__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationInstance__Group__0__Impl
	rule__RelationInstance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstance__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceAccess().getRelationKeyword_0()); }

	'relation' 

{ after(grammarAccess.getRelationInstanceAccess().getRelationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationInstance__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationInstance__Group__1__Impl
	rule__RelationInstance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstance__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getRelationInstanceAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationInstance__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationInstance__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstance__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceAccess().getAlternatives_2()); }
(rule__RelationInstance__Alternatives_2)
{ after(grammarAccess.getRelationInstanceAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RelationInstanceCreate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationInstanceCreate__Group__0__Impl
	rule__RelationInstanceCreate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstanceCreate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceCreateAccess().getCreateKeyword_0()); }

	'create' 

{ after(grammarAccess.getRelationInstanceCreateAccess().getCreateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationInstanceCreate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationInstanceCreate__Group__1__Impl
	rule__RelationInstanceCreate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstanceCreate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceCreateAccess().getNameAssignment_1()); }
(rule__RelationInstanceCreate__NameAssignment_1)
{ after(grammarAccess.getRelationInstanceCreateAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationInstanceCreate__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationInstanceCreate__Group__2__Impl
	rule__RelationInstanceCreate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstanceCreate__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceCreateAccess().getNameofrelationAssignment_2()); }
(rule__RelationInstanceCreate__NameofrelationAssignment_2)
{ after(grammarAccess.getRelationInstanceCreateAccess().getNameofrelationAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationInstanceCreate__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationInstanceCreate__Group__3__Impl
	rule__RelationInstanceCreate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstanceCreate__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceCreateAccess().getFromKeyword_3()); }

	'from' 

{ after(grammarAccess.getRelationInstanceCreateAccess().getFromKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationInstanceCreate__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationInstanceCreate__Group__4__Impl
	rule__RelationInstanceCreate__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstanceCreate__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceCreateAccess().getClassinstancefromAssignment_4()); }
(rule__RelationInstanceCreate__ClassinstancefromAssignment_4)
{ after(grammarAccess.getRelationInstanceCreateAccess().getClassinstancefromAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationInstanceCreate__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationInstanceCreate__Group__5__Impl
	rule__RelationInstanceCreate__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstanceCreate__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceCreateAccess().getToKeyword_5()); }

	'to' 

{ after(grammarAccess.getRelationInstanceCreateAccess().getToKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationInstanceCreate__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationInstanceCreate__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstanceCreate__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceCreateAccess().getClassinstancetoAssignment_6()); }
(rule__RelationInstanceCreate__ClassinstancetoAssignment_6)
{ after(grammarAccess.getRelationInstanceCreateAccess().getClassinstancetoAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__RelationInstanceDelete__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationInstanceDelete__Group__0__Impl
	rule__RelationInstanceDelete__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstanceDelete__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceDeleteAccess().getDeleteKeyword_0()); }

	'delete' 

{ after(grammarAccess.getRelationInstanceDeleteAccess().getDeleteKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationInstanceDelete__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationInstanceDelete__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstanceDelete__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceDeleteAccess().getNameofrelationinstanceAssignment_1()); }
(rule__RelationInstanceDelete__NameofrelationinstanceAssignment_1)
{ after(grammarAccess.getRelationInstanceDeleteAccess().getNameofrelationinstanceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationInstanceGet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationInstanceGet__Group__0__Impl
	rule__RelationInstanceGet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstanceGet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceGetAccess().getGetKeyword_0()); }

	'get' 

{ after(grammarAccess.getRelationInstanceGetAccess().getGetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationInstanceGet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationInstanceGet__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstanceGet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceGetAccess().getNameofrelationinstanceAssignment_1()); }
(rule__RelationInstanceGet__NameofrelationinstanceAssignment_1)
{ after(grammarAccess.getRelationInstanceGetAccess().getNameofrelationinstanceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationInstanceGetAll__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationInstanceGetAll__Group__0__Impl
	rule__RelationInstanceGetAll__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstanceGetAll__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceGetAllAccess().getGetallKeyword_0()); }

	'getall' 

{ after(grammarAccess.getRelationInstanceGetAllAccess().getGetallKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationInstanceGetAll__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationInstanceGetAll__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstanceGetAll__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceGetAllAccess().getNameofrelationAssignment_1()); }
(rule__RelationInstanceGetAll__NameofrelationAssignment_1)
{ after(grammarAccess.getRelationInstanceGetAllAccess().getNameofrelationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationInstanceSet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationInstanceSet__Group__0__Impl
	rule__RelationInstanceSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstanceSet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceSetAccess().getSetKeyword_0()); }

	'set' 

{ after(grammarAccess.getRelationInstanceSetAccess().getSetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationInstanceSet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationInstanceSet__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstanceSet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceSetAccess().getNameofrelationinstanceAssignment_1()); }
(rule__RelationInstanceSet__NameofrelationinstanceAssignment_1)
{ after(grammarAccess.getRelationInstanceSetAccess().getNameofrelationinstanceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeOperation__Group__0__Impl
	rule__AttributeOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeOperationAccess().getAttributenameAssignment_0()); }
(rule__AttributeOperation__AttributenameAssignment_0)
{ after(grammarAccess.getAttributeOperationAccess().getAttributenameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeOperation__Group__1__Impl
	rule__AttributeOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeOperationAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getAttributeOperationAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeOperation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeOperation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeOperation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeOperationAccess().getAlternatives_2()); }
(rule__AttributeOperation__Alternatives_2)
{ after(grammarAccess.getAttributeOperationAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AttributeGet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeGet__Group__0__Impl
	rule__AttributeGet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeGet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeGetAccess().getGetKeyword_0()); }

	'get' 

{ after(grammarAccess.getAttributeGetAccess().getGetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeGet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeGet__Group__1__Impl
	rule__AttributeGet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeGet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeGetAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getAttributeGetAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeGet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeGet__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeGet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeGetAccess().getAttrgetparamsAssignment_2()); }
(rule__AttributeGet__AttrgetparamsAssignment_2)
{ after(grammarAccess.getAttributeGetAccess().getAttrgetparamsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AttributeSet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeSet__Group__0__Impl
	rule__AttributeSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSetAccess().getSetKeyword_0()); }

	'set' 

{ after(grammarAccess.getAttributeSetAccess().getSetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeSet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeSet__Group__1__Impl
	rule__AttributeSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSetAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getAttributeSetAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeSet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeSet__Group__2__Impl
	rule__AttributeSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSetAccess().getAttrsetparamsAssignment_2()); }
(rule__AttributeSet__AttrsetparamsAssignment_2)
{ after(grammarAccess.getAttributeSetAccess().getAttrsetparamsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeSet__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeSet__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSet__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSetAccess().getAlternatives_3()); }
(rule__AttributeSet__Alternatives_3)
{ after(grammarAccess.getAttributeSetAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Event__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__0__Impl
	rule__Event__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getEventKeyword_0()); }

	'event' 

{ after(grammarAccess.getEventAccess().getEventKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__1__Impl
	rule__Event__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getEventAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__2__Impl
	rule__Event__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getNameAssignment_2()); }
(rule__Event__NameAssignment_2)
{ after(grammarAccess.getEventAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__3__Impl
	rule__Event__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getFullStopKeyword_3()); }

	'.' 

{ after(grammarAccess.getEventAccess().getFullStopKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__4__Impl
	rule__Event__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getExecuteKeyword_4()); }

	'execute' 

{ after(grammarAccess.getEventAccess().getExecuteKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__5__Impl
	rule__Event__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getFullStopKeyword_5()); }

	'.' 

{ after(grammarAccess.getEventAccess().getFullStopKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getAlgorithmnameAssignment_6()); }
(rule__Event__AlgorithmnameAssignment_6)
{ after(grammarAccess.getEventAccess().getAlgorithmnameAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__RealNumber__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealNumber__Group__0__Impl
	rule__RealNumber__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealNumber__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealNumberAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getRealNumberAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealNumber__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealNumber__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealNumber__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealNumberAccess().getNumberParserRuleCall_1()); }
	ruleNumber
{ after(grammarAccess.getRealNumberAccess().getNumberParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAssignment__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_0__0__Impl
	rule__XAssignment__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0()); }
(

)
{ after(grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAssignment__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_0__1__Impl
	rule__XAssignment__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getFeatureAssignment_0_1()); }
(rule__XAssignment__FeatureAssignment_0_1)
{ after(grammarAccess.getXAssignmentAccess().getFeatureAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAssignment__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_0__2__Impl
	rule__XAssignment__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2()); }
	ruleOpSingleAssign
{ after(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAssignment__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getValueAssignment_0_3()); }
(rule__XAssignment__ValueAssignment_0_3)
{ after(grammarAccess.getXAssignmentAccess().getValueAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XAssignment__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_1__0__Impl
	rule__XAssignment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0()); }
	ruleXOrExpression
{ after(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAssignment__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getGroup_1_1()); }
(rule__XAssignment__Group_1_1__0)?
{ after(grammarAccess.getXAssignmentAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAssignment__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_1_1__0__Impl
	rule__XAssignment__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getGroup_1_1_0()); }
(rule__XAssignment__Group_1_1_0__0)
{ after(grammarAccess.getXAssignmentAccess().getGroup_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAssignment__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getRightOperandAssignment_1_1_1()); }
(rule__XAssignment__RightOperandAssignment_1_1_1)
{ after(grammarAccess.getXAssignmentAccess().getRightOperandAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAssignment__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_1_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getGroup_1_1_0_0()); }
(rule__XAssignment__Group_1_1_0_0__0)
{ after(grammarAccess.getXAssignmentAccess().getGroup_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XAssignment__Group_1_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_1_1_0_0__0__Impl
	rule__XAssignment__Group_1_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_1_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0()); }
(

)
{ after(grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAssignment__Group_1_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_1_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_1_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getFeatureAssignment_1_1_0_0_1()); }
(rule__XAssignment__FeatureAssignment_1_1_0_0_1)
{ after(grammarAccess.getXAssignmentAccess().getFeatureAssignment_1_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group__0__Impl
	rule__XOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0()); }
	ruleXAndExpression
{ after(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getGroup_1()); }
(rule__XOrExpression__Group_1__0)*
{ after(grammarAccess.getXOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group_1__0__Impl
	rule__XOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getGroup_1_0()); }
(rule__XOrExpression__Group_1_0__0)
{ after(grammarAccess.getXOrExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XOrExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXOrExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOrExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getGroup_1_0_0()); }
(rule__XOrExpression__Group_1_0_0__0)
{ after(grammarAccess.getXOrExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XOrExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group_1_0_0__0__Impl
	rule__XOrExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XOrExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XOrExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXOrExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group__0__Impl
	rule__XAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0()); }
	ruleXEqualityExpression
{ after(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getGroup_1()); }
(rule__XAndExpression__Group_1__0)*
{ after(grammarAccess.getXAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group_1__0__Impl
	rule__XAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getGroup_1_0()); }
(rule__XAndExpression__Group_1_0__0)
{ after(grammarAccess.getXAndExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XAndExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXAndExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAndExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getGroup_1_0_0()); }
(rule__XAndExpression__Group_1_0_0__0)
{ after(grammarAccess.getXAndExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XAndExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group_1_0_0__0__Impl
	rule__XAndExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAndExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XAndExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXAndExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XEqualityExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group__0__Impl
	rule__XEqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0()); }
	ruleXRelationalExpression
{ after(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XEqualityExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getGroup_1()); }
(rule__XEqualityExpression__Group_1__0)*
{ after(grammarAccess.getXEqualityExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XEqualityExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group_1__0__Impl
	rule__XEqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getGroup_1_0()); }
(rule__XEqualityExpression__Group_1_0__0)
{ after(grammarAccess.getXEqualityExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XEqualityExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XEqualityExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXEqualityExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XEqualityExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getGroup_1_0_0()); }
(rule__XEqualityExpression__Group_1_0_0__0)
{ after(grammarAccess.getXEqualityExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XEqualityExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group_1_0_0__0__Impl
	rule__XEqualityExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XEqualityExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XEqualityExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXEqualityExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XRelationalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group__0__Impl
	rule__XRelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0()); }
	ruleXOtherOperatorExpression
{ after(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XRelationalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getAlternatives_1()); }
(rule__XRelationalExpression__Alternatives_1)*
{ after(grammarAccess.getXRelationalExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XRelationalExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_0__0__Impl
	rule__XRelationalExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0_0()); }
(rule__XRelationalExpression__Group_1_0_0__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XRelationalExpression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getTypeAssignment_1_0_1()); }
(rule__XRelationalExpression__TypeAssignment_1_0_1)
{ after(grammarAccess.getXRelationalExpressionAccess().getTypeAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XRelationalExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_0_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0_0_0()); }
(rule__XRelationalExpression__Group_1_0_0_0__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XRelationalExpression__Group_1_0_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_0_0_0__0__Impl
	rule__XRelationalExpression__Group_1_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_0_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0()); }
(

)
{ after(grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XRelationalExpression__Group_1_0_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_0_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1()); }

	'instanceof' 

{ after(grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XRelationalExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_1__0__Impl
	rule__XRelationalExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1_0()); }
(rule__XRelationalExpression__Group_1_1_0__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XRelationalExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getRightOperandAssignment_1_1_1()); }
(rule__XRelationalExpression__RightOperandAssignment_1_1_1)
{ after(grammarAccess.getXRelationalExpressionAccess().getRightOperandAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XRelationalExpression__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1_0_0()); }
(rule__XRelationalExpression__Group_1_1_0_0__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XRelationalExpression__Group_1_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_1_0_0__0__Impl
	rule__XRelationalExpression__Group_1_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0()); }
(

)
{ after(grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XRelationalExpression__Group_1_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getFeatureAssignment_1_1_0_0_1()); }
(rule__XRelationalExpression__FeatureAssignment_1_1_0_0_1)
{ after(grammarAccess.getXRelationalExpressionAccess().getFeatureAssignment_1_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOtherOperatorExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group__0__Impl
	rule__XOtherOperatorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0()); }
	ruleXAdditiveExpression
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XOtherOperatorExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1()); }
(rule__XOtherOperatorExpression__Group_1__0)*
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOtherOperatorExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group_1__0__Impl
	rule__XOtherOperatorExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1_0()); }
(rule__XOtherOperatorExpression__Group_1_0__0)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XOtherOperatorExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XOtherOperatorExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOtherOperatorExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1_0_0()); }
(rule__XOtherOperatorExpression__Group_1_0_0__0)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XOtherOperatorExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group_1_0_0__0__Impl
	rule__XOtherOperatorExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XOtherOperatorExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XOtherOperatorExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpOther__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_2__0__Impl
	rule__OpOther__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0()); }

	'>' 

{ after(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpOther__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1()); }

	'..' 

{ after(grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpOther__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_5__0__Impl
	rule__OpOther__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0()); }

	'>' 

{ after(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpOther__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getAlternatives_5_1()); }
(rule__OpOther__Alternatives_5_1)
{ after(grammarAccess.getOpOtherAccess().getAlternatives_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpOther__Group_5_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_5_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_5_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGroup_5_1_0_0()); }
(rule__OpOther__Group_5_1_0_0__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_5_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OpOther__Group_5_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_5_1_0_0__0__Impl
	rule__OpOther__Group_5_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_5_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0()); }

	'>' 

{ after(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpOther__Group_5_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_5_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_5_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1()); }

	'>' 

{ after(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpOther__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_6__0__Impl
	rule__OpOther__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0()); }

	'<' 

{ after(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpOther__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getAlternatives_6_1()); }
(rule__OpOther__Alternatives_6_1)
{ after(grammarAccess.getOpOtherAccess().getAlternatives_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpOther__Group_6_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_6_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_6_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGroup_6_1_0_0()); }
(rule__OpOther__Group_6_1_0_0__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_6_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OpOther__Group_6_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_6_1_0_0__0__Impl
	rule__OpOther__Group_6_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_6_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0()); }

	'<' 

{ after(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpOther__Group_6_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_6_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_6_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1()); }

	'<' 

{ after(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAdditiveExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group__0__Impl
	rule__XAdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0()); }
	ruleXMultiplicativeExpression
{ after(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAdditiveExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getGroup_1()); }
(rule__XAdditiveExpression__Group_1__0)*
{ after(grammarAccess.getXAdditiveExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAdditiveExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group_1__0__Impl
	rule__XAdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getGroup_1_0()); }
(rule__XAdditiveExpression__Group_1_0__0)
{ after(grammarAccess.getXAdditiveExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAdditiveExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XAdditiveExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXAdditiveExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAdditiveExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getGroup_1_0_0()); }
(rule__XAdditiveExpression__Group_1_0_0__0)
{ after(grammarAccess.getXAdditiveExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XAdditiveExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group_1_0_0__0__Impl
	rule__XAdditiveExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAdditiveExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XAdditiveExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXAdditiveExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMultiplicativeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group__0__Impl
	rule__XMultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0()); }
	ruleXUnaryOperation
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMultiplicativeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1()); }
(rule__XMultiplicativeExpression__Group_1__0)*
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMultiplicativeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group_1__0__Impl
	rule__XMultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1_0()); }
(rule__XMultiplicativeExpression__Group_1_0__0)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMultiplicativeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XMultiplicativeExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMultiplicativeExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1_0_0()); }
(rule__XMultiplicativeExpression__Group_1_0_0__0)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XMultiplicativeExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group_1_0_0__0__Impl
	rule__XMultiplicativeExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMultiplicativeExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XMultiplicativeExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XUnaryOperation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XUnaryOperation__Group_0__0__Impl
	rule__XUnaryOperation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0()); }
(

)
{ after(grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XUnaryOperation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XUnaryOperation__Group_0__1__Impl
	rule__XUnaryOperation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getFeatureAssignment_0_1()); }
(rule__XUnaryOperation__FeatureAssignment_0_1)
{ after(grammarAccess.getXUnaryOperationAccess().getFeatureAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XUnaryOperation__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XUnaryOperation__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getOperandAssignment_0_2()); }
(rule__XUnaryOperation__OperandAssignment_0_2)
{ after(grammarAccess.getXUnaryOperationAccess().getOperandAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XCastedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCastedExpression__Group__0__Impl
	rule__XCastedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XCastedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCastedExpressionAccess().getXMemberFeatureCallParserRuleCall_0()); }
	ruleXMemberFeatureCall
{ after(grammarAccess.getXCastedExpressionAccess().getXMemberFeatureCallParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCastedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCastedExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XCastedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCastedExpressionAccess().getGroup_1()); }
(rule__XCastedExpression__Group_1__0)*
{ after(grammarAccess.getXCastedExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XCastedExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCastedExpression__Group_1__0__Impl
	rule__XCastedExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XCastedExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCastedExpressionAccess().getGroup_1_0()); }
(rule__XCastedExpression__Group_1_0__0)
{ after(grammarAccess.getXCastedExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCastedExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCastedExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XCastedExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCastedExpressionAccess().getTypeAssignment_1_1()); }
(rule__XCastedExpression__TypeAssignment_1_1)
{ after(grammarAccess.getXCastedExpressionAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XCastedExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCastedExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XCastedExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCastedExpressionAccess().getGroup_1_0_0()); }
(rule__XCastedExpression__Group_1_0_0__0)
{ after(grammarAccess.getXCastedExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XCastedExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCastedExpression__Group_1_0_0__0__Impl
	rule__XCastedExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XCastedExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCastedExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCastedExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XCastedExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1()); }

	'as' 

{ after(grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMemberFeatureCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group__0__Impl
	rule__XMemberFeatureCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0()); }
	ruleXPrimaryExpression
{ after(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1()); }
(rule__XMemberFeatureCall__Alternatives_1)*
{ after(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMemberFeatureCall__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_0__0__Impl
	rule__XMemberFeatureCall__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_0_0()); }
(rule__XMemberFeatureCall__Group_1_0_0__0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getValueAssignment_1_0_1()); }
(rule__XMemberFeatureCall__ValueAssignment_1_0_1)
{ after(grammarAccess.getXMemberFeatureCallAccess().getValueAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMemberFeatureCall__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_0_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_0_0_0()); }
(rule__XMemberFeatureCall__Group_1_0_0_0__0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XMemberFeatureCall__Group_1_0_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_0_0_0__0__Impl
	rule__XMemberFeatureCall__Group_1_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_0_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0()); }
(

)
{ after(grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_0_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_0_0_0__1__Impl
	rule__XMemberFeatureCall__Group_1_0_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_0_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1_0_0_0_1()); }
(rule__XMemberFeatureCall__Alternatives_1_0_0_0_1)
{ after(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_0_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_0_0_0__2__Impl
	rule__XMemberFeatureCall__Group_1_0_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_0_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getFeatureAssignment_1_0_0_0_2()); }
(rule__XMemberFeatureCall__FeatureAssignment_1_0_0_0_2)
{ after(grammarAccess.getXMemberFeatureCallAccess().getFeatureAssignment_1_0_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_0_0_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_0_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_0_0_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3()); }
	ruleOpSingleAssign
{ after(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XMemberFeatureCall__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1__0__Impl
	rule__XMemberFeatureCall__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_0()); }
(rule__XMemberFeatureCall__Group_1_1_0__0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1__1__Impl
	rule__XMemberFeatureCall__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_1()); }
(rule__XMemberFeatureCall__Group_1_1_1__0)?
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1__2__Impl
	rule__XMemberFeatureCall__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getFeatureAssignment_1_1_2()); }
(rule__XMemberFeatureCall__FeatureAssignment_1_1_2)
{ after(grammarAccess.getXMemberFeatureCallAccess().getFeatureAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1__3__Impl
	rule__XMemberFeatureCall__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_3()); }
(rule__XMemberFeatureCall__Group_1_1_3__0)?
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_4()); }
(rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_4)?
{ after(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__XMemberFeatureCall__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_0_0()); }
(rule__XMemberFeatureCall__Group_1_1_0_0__0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XMemberFeatureCall__Group_1_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_0_0__0__Impl
	rule__XMemberFeatureCall__Group_1_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0()); }
(

)
{ after(grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1_1_0_0_1()); }
(rule__XMemberFeatureCall__Alternatives_1_1_0_0_1)
{ after(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMemberFeatureCall__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_1__0__Impl
	rule__XMemberFeatureCall__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0()); }

	'<' 

{ after(grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_1__1__Impl
	rule__XMemberFeatureCall__Group_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsAssignment_1_1_1_1()); }
(rule__XMemberFeatureCall__TypeArgumentsAssignment_1_1_1_1)
{ after(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_1__2__Impl
	rule__XMemberFeatureCall__Group_1_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_1_2()); }
(rule__XMemberFeatureCall__Group_1_1_1_2__0)*
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3()); }

	'>' 

{ after(grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XMemberFeatureCall__Group_1_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_1_2__0__Impl
	rule__XMemberFeatureCall__Group_1_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0()); }

	',' 

{ after(grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsAssignment_1_1_1_2_1()); }
(rule__XMemberFeatureCall__TypeArgumentsAssignment_1_1_1_2_1)
{ after(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsAssignment_1_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMemberFeatureCall__Group_1_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_3__0__Impl
	rule__XMemberFeatureCall__Group_1_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallAssignment_1_1_3_0()); }
(rule__XMemberFeatureCall__ExplicitOperationCallAssignment_1_1_3_0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallAssignment_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_3__1__Impl
	rule__XMemberFeatureCall__Group_1_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1_1_3_1()); }
(rule__XMemberFeatureCall__Alternatives_1_1_3_1)?
{ after(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2()); }

	')' 

{ after(grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XMemberFeatureCall__Group_1_1_3_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_3_1_1__0__Impl
	rule__XMemberFeatureCall__Group_1_1_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_3_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_1_0()); }
(rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_1_0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_3_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_3_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_3_1_1_1()); }
(rule__XMemberFeatureCall__Group_1_1_3_1_1_1__0)*
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_3_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMemberFeatureCall__Group_1_1_3_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_3_1_1_1__0__Impl
	rule__XMemberFeatureCall__Group_1_1_3_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_3_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0()); }

	',' 

{ after(grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_3_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_3_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_3_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_1_1_1()); }
(rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_1_1_1)
{ after(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSetLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group__0__Impl
	rule__XSetLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0()); }
(

)
{ after(grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSetLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group__1__Impl
	rule__XSetLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1()); }

	'#' 

{ after(grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSetLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group__2__Impl
	rule__XSetLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSetLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group__3__Impl
	rule__XSetLiteral__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getGroup_3()); }
(rule__XSetLiteral__Group_3__0)?
{ after(grammarAccess.getXSetLiteralAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSetLiteral__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__XSetLiteral__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group_3__0__Impl
	rule__XSetLiteral__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getElementsAssignment_3_0()); }
(rule__XSetLiteral__ElementsAssignment_3_0)
{ after(grammarAccess.getXSetLiteralAccess().getElementsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSetLiteral__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getGroup_3_1()); }
(rule__XSetLiteral__Group_3_1__0)*
{ after(grammarAccess.getXSetLiteralAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSetLiteral__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group_3_1__0__Impl
	rule__XSetLiteral__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSetLiteral__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getElementsAssignment_3_1_1()); }
(rule__XSetLiteral__ElementsAssignment_3_1_1)
{ after(grammarAccess.getXSetLiteralAccess().getElementsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XListLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group__0__Impl
	rule__XListLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getXListLiteralAction_0()); }
(

)
{ after(grammarAccess.getXListLiteralAccess().getXListLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XListLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group__1__Impl
	rule__XListLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1()); }

	'#' 

{ after(grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XListLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group__2__Impl
	rule__XListLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XListLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group__3__Impl
	rule__XListLiteral__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getGroup_3()); }
(rule__XListLiteral__Group_3__0)?
{ after(grammarAccess.getXListLiteralAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XListLiteral__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__XListLiteral__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group_3__0__Impl
	rule__XListLiteral__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getElementsAssignment_3_0()); }
(rule__XListLiteral__ElementsAssignment_3_0)
{ after(grammarAccess.getXListLiteralAccess().getElementsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XListLiteral__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getGroup_3_1()); }
(rule__XListLiteral__Group_3_1__0)*
{ after(grammarAccess.getXListLiteralAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XListLiteral__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group_3_1__0__Impl
	rule__XListLiteral__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XListLiteral__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getElementsAssignment_3_1_1()); }
(rule__XListLiteral__ElementsAssignment_3_1_1)
{ after(grammarAccess.getXListLiteralAccess().getElementsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XClosure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group__0__Impl
	rule__XClosure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getGroup_0()); }
(rule__XClosure__Group_0__0)
{ after(grammarAccess.getXClosureAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group__1__Impl
	rule__XClosure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getGroup_1()); }
(rule__XClosure__Group_1__0)?
{ after(grammarAccess.getXClosureAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group__2__Impl
	rule__XClosure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getExpressionAssignment_2()); }
(rule__XClosure__ExpressionAssignment_2)
{ after(grammarAccess.getXClosureAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XClosure__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getGroup_0_0()); }
(rule__XClosure__Group_0_0__0)
{ after(grammarAccess.getXClosureAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XClosure__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_0_0__0__Impl
	rule__XClosure__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getXClosureAction_0_0_0()); }
(

)
{ after(grammarAccess.getXClosureAccess().getXClosureAction_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1()); }

	'[' 

{ after(grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XClosure__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getGroup_1_0()); }
(rule__XClosure__Group_1_0__0)
{ after(grammarAccess.getXClosureAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XClosure__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_1_0__0__Impl
	rule__XClosure__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getGroup_1_0_0()); }
(rule__XClosure__Group_1_0_0__0)?
{ after(grammarAccess.getXClosureAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getExplicitSyntaxAssignment_1_0_1()); }
(rule__XClosure__ExplicitSyntaxAssignment_1_0_1)
{ after(grammarAccess.getXClosureAccess().getExplicitSyntaxAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XClosure__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_1_0_0__0__Impl
	rule__XClosure__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_0()); }
(rule__XClosure__DeclaredFormalParametersAssignment_1_0_0_0)
{ after(grammarAccess.getXClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getGroup_1_0_0_1()); }
(rule__XClosure__Group_1_0_0_1__0)*
{ after(grammarAccess.getXClosureAccess().getGroup_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XClosure__Group_1_0_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_1_0_0_1__0__Impl
	rule__XClosure__Group_1_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_1_0_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0()); }

	',' 

{ after(grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group_1_0_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_1_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_1_0_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_1_1()); }
(rule__XClosure__DeclaredFormalParametersAssignment_1_0_0_1_1)
{ after(grammarAccess.getXClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpressionInClosure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionInClosure__Group__0__Impl
	rule__XExpressionInClosure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionInClosure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0()); }
(

)
{ after(grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpressionInClosure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionInClosure__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionInClosure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionInClosureAccess().getGroup_1()); }
(rule__XExpressionInClosure__Group_1__0)*
{ after(grammarAccess.getXExpressionInClosureAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpressionInClosure__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionInClosure__Group_1__0__Impl
	rule__XExpressionInClosure__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionInClosure__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionInClosureAccess().getExpressionsAssignment_1_0()); }
(rule__XExpressionInClosure__ExpressionsAssignment_1_0)
{ after(grammarAccess.getXExpressionInClosureAccess().getExpressionsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpressionInClosure__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionInClosure__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionInClosure__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1()); }
(
	';' 
)?
{ after(grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XShortClosure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group__0__Impl
	rule__XShortClosure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getGroup_0()); }
(rule__XShortClosure__Group_0__0)
{ after(grammarAccess.getXShortClosureAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XShortClosure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getExpressionAssignment_1()); }
(rule__XShortClosure__ExpressionAssignment_1)
{ after(grammarAccess.getXShortClosureAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XShortClosure__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getGroup_0_0()); }
(rule__XShortClosure__Group_0_0__0)
{ after(grammarAccess.getXShortClosureAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XShortClosure__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group_0_0__0__Impl
	rule__XShortClosure__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0()); }
(

)
{ after(grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XShortClosure__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group_0_0__1__Impl
	rule__XShortClosure__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getGroup_0_0_1()); }
(rule__XShortClosure__Group_0_0_1__0)?
{ after(grammarAccess.getXShortClosureAccess().getGroup_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XShortClosure__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getExplicitSyntaxAssignment_0_0_2()); }
(rule__XShortClosure__ExplicitSyntaxAssignment_0_0_2)
{ after(grammarAccess.getXShortClosureAccess().getExplicitSyntaxAssignment_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XShortClosure__Group_0_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group_0_0_1__0__Impl
	rule__XShortClosure__Group_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group_0_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersAssignment_0_0_1_0()); }
(rule__XShortClosure__DeclaredFormalParametersAssignment_0_0_1_0)
{ after(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersAssignment_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XShortClosure__Group_0_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group_0_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getGroup_0_0_1_1()); }
(rule__XShortClosure__Group_0_0_1_1__0)*
{ after(grammarAccess.getXShortClosureAccess().getGroup_0_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XShortClosure__Group_0_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group_0_0_1_1__0__Impl
	rule__XShortClosure__Group_0_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group_0_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0()); }

	',' 

{ after(grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XShortClosure__Group_0_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group_0_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group_0_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersAssignment_0_0_1_1_1()); }
(rule__XShortClosure__DeclaredFormalParametersAssignment_0_0_1_1_1)
{ after(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersAssignment_0_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XParenthesizedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XParenthesizedExpression__Group__0__Impl
	rule__XParenthesizedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XParenthesizedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XParenthesizedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XParenthesizedExpression__Group__1__Impl
	rule__XParenthesizedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XParenthesizedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1()); }
	ruleXExpression
{ after(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XParenthesizedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XParenthesizedExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XParenthesizedExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XIfExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__0__Impl
	rule__XIfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0()); }
(

)
{ after(grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__1__Impl
	rule__XIfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getIfKeyword_1()); }

	'if' 

{ after(grammarAccess.getXIfExpressionAccess().getIfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__2__Impl
	rule__XIfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__3__Impl
	rule__XIfExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getIfAssignment_3()); }
(rule__XIfExpression__IfAssignment_3)
{ after(grammarAccess.getXIfExpressionAccess().getIfAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__4__Impl
	rule__XIfExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__5__Impl
	rule__XIfExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getThenAssignment_5()); }
(rule__XIfExpression__ThenAssignment_5)
{ after(grammarAccess.getXIfExpressionAccess().getThenAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getGroup_6()); }
(rule__XIfExpression__Group_6__0)?
{ after(grammarAccess.getXIfExpressionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__XIfExpression__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group_6__0__Impl
	rule__XIfExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0()); }
(
	'else' 
)
{ after(grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getElseAssignment_6_1()); }
(rule__XIfExpression__ElseAssignment_6_1)
{ after(grammarAccess.getXIfExpressionAccess().getElseAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSwitchExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__0__Impl
	rule__XSwitchExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0()); }
(

)
{ after(grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__1__Impl
	rule__XSwitchExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1()); }

	'switch' 

{ after(grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__2__Impl
	rule__XSwitchExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getAlternatives_2()); }
(rule__XSwitchExpression__Alternatives_2)
{ after(grammarAccess.getXSwitchExpressionAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__3__Impl
	rule__XSwitchExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__4__Impl
	rule__XSwitchExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getXSwitchExpressionAccess().getCasesAssignment_4()); }
(rule__XSwitchExpression__CasesAssignment_4)
{ after(grammarAccess.getXSwitchExpressionAccess().getCasesAssignment_4()); }
)
(
{ before(grammarAccess.getXSwitchExpressionAccess().getCasesAssignment_4()); }
(rule__XSwitchExpression__CasesAssignment_4)*
{ after(grammarAccess.getXSwitchExpressionAccess().getCasesAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__5__Impl
	rule__XSwitchExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup_5()); }
(rule__XSwitchExpression__Group_5__0)?
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__XSwitchExpression__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_0__0__Impl
	rule__XSwitchExpression__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup_2_0_0()); }
(rule__XSwitchExpression__Group_2_0_0__0)?
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getSwitchAssignment_2_0_1()); }
(rule__XSwitchExpression__SwitchAssignment_2_0_1)
{ after(grammarAccess.getXSwitchExpressionAccess().getSwitchAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSwitchExpression__Group_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_0_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup_2_0_0_0()); }
(rule__XSwitchExpression__Group_2_0_0_0__0)
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XSwitchExpression__Group_2_0_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_0_0_0__0__Impl
	rule__XSwitchExpression__Group_2_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_0_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameAssignment_2_0_0_0_0()); }
(rule__XSwitchExpression__LocalVarNameAssignment_2_0_0_0_0)
{ after(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameAssignment_2_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_2_0_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_0_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_1()); }

	':' 

{ after(grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSwitchExpression__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_1__0__Impl
	rule__XSwitchExpression__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup_2_1_0()); }
(rule__XSwitchExpression__Group_2_1_0__0)
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_1__1__Impl
	rule__XSwitchExpression__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getSwitchAssignment_2_1_1()); }
(rule__XSwitchExpression__SwitchAssignment_2_1_1)
{ after(grammarAccess.getXSwitchExpressionAccess().getSwitchAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_1_2()); }

	')' 

{ after(grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XSwitchExpression__Group_2_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup_2_1_0_0()); }
(rule__XSwitchExpression__Group_2_1_0_0__0)
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XSwitchExpression__Group_2_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_1_0_0__0__Impl
	rule__XSwitchExpression__Group_2_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_1_0_0_0()); }

	'(' 

{ after(grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_2_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_1_0_0__1__Impl
	rule__XSwitchExpression__Group_2_1_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameAssignment_2_1_0_0_1()); }
(rule__XSwitchExpression__LocalVarNameAssignment_2_1_0_0_1)
{ after(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameAssignment_2_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_2_1_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_1_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_1_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_2()); }

	':' 

{ after(grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XSwitchExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_5__0__Impl
	rule__XSwitchExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0()); }

	'default' 

{ after(grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_5__1__Impl
	rule__XSwitchExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1()); }

	':' 

{ after(grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getDefaultAssignment_5_2()); }
(rule__XSwitchExpression__DefaultAssignment_5_2)
{ after(grammarAccess.getXSwitchExpressionAccess().getDefaultAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XCasePart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCasePart__Group__0__Impl
	rule__XCasePart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getTypeGuardAssignment_0()); }
(rule__XCasePart__TypeGuardAssignment_0)?
{ after(grammarAccess.getXCasePartAccess().getTypeGuardAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCasePart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCasePart__Group__1__Impl
	rule__XCasePart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getGroup_1()); }
(rule__XCasePart__Group_1__0)?
{ after(grammarAccess.getXCasePartAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCasePart__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCasePart__Group__2__Impl
	rule__XCasePart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getXCasePartAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCasePart__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCasePart__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getThenAssignment_3()); }
(rule__XCasePart__ThenAssignment_3)
{ after(grammarAccess.getXCasePartAccess().getThenAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XCasePart__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCasePart__Group_1__0__Impl
	rule__XCasePart__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getCaseKeyword_1_0()); }

	'case' 

{ after(grammarAccess.getXCasePartAccess().getCaseKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCasePart__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCasePart__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getCaseAssignment_1_1()); }
(rule__XCasePart__CaseAssignment_1_1)
{ after(grammarAccess.getXCasePartAccess().getCaseAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XForLoopExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group__0__Impl
	rule__XForLoopExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0()); }
(

)
{ after(grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForLoopExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group__1__Impl
	rule__XForLoopExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getForKeyword_1()); }

	'for' 

{ after(grammarAccess.getXForLoopExpressionAccess().getForKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForLoopExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group__2__Impl
	rule__XForLoopExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForLoopExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group__3__Impl
	rule__XForLoopExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamAssignment_3()); }
(rule__XForLoopExpression__DeclaredParamAssignment_3)
{ after(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForLoopExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group__4__Impl
	rule__XForLoopExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getXForLoopExpressionAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForLoopExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group__5__Impl
	rule__XForLoopExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getForExpressionAssignment_5()); }
(rule__XForLoopExpression__ForExpressionAssignment_5)
{ after(grammarAccess.getXForLoopExpressionAccess().getForExpressionAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForLoopExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group__6__Impl
	rule__XForLoopExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForLoopExpression__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getEachExpressionAssignment_7()); }
(rule__XForLoopExpression__EachExpressionAssignment_7)
{ after(grammarAccess.getXForLoopExpressionAccess().getEachExpressionAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__XWhileExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__0__Impl
	rule__XWhileExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0()); }
(

)
{ after(grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XWhileExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__1__Impl
	rule__XWhileExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1()); }

	'while' 

{ after(grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XWhileExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__2__Impl
	rule__XWhileExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XWhileExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__3__Impl
	rule__XWhileExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getPredicateAssignment_3()); }
(rule__XWhileExpression__PredicateAssignment_3)
{ after(grammarAccess.getXWhileExpressionAccess().getPredicateAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XWhileExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__4__Impl
	rule__XWhileExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XWhileExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getBodyAssignment_5()); }
(rule__XWhileExpression__BodyAssignment_5)
{ after(grammarAccess.getXWhileExpressionAccess().getBodyAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__XDoWhileExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XDoWhileExpression__Group__0__Impl
	rule__XDoWhileExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0()); }
(

)
{ after(grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XDoWhileExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XDoWhileExpression__Group__1__Impl
	rule__XDoWhileExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1()); }

	'do' 

{ after(grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XDoWhileExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XDoWhileExpression__Group__2__Impl
	rule__XDoWhileExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getBodyAssignment_2()); }
(rule__XDoWhileExpression__BodyAssignment_2)
{ after(grammarAccess.getXDoWhileExpressionAccess().getBodyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XDoWhileExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XDoWhileExpression__Group__3__Impl
	rule__XDoWhileExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3()); }

	'while' 

{ after(grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XDoWhileExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XDoWhileExpression__Group__4__Impl
	rule__XDoWhileExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XDoWhileExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XDoWhileExpression__Group__5__Impl
	rule__XDoWhileExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getPredicateAssignment_5()); }
(rule__XDoWhileExpression__PredicateAssignment_5)
{ after(grammarAccess.getXDoWhileExpressionAccess().getPredicateAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XDoWhileExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XDoWhileExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__XBlockExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBlockExpression__Group__0__Impl
	rule__XBlockExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XBlockExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0()); }
(

)
{ after(grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBlockExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBlockExpression__Group__1__Impl
	rule__XBlockExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XBlockExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBlockExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBlockExpression__Group__2__Impl
	rule__XBlockExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XBlockExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getGroup_2()); }
(rule__XBlockExpression__Group_2__0)*
{ after(grammarAccess.getXBlockExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBlockExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBlockExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XBlockExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XBlockExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBlockExpression__Group_2__0__Impl
	rule__XBlockExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XBlockExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getExpressionsAssignment_2_0()); }
(rule__XBlockExpression__ExpressionsAssignment_2_0)
{ after(grammarAccess.getXBlockExpressionAccess().getExpressionsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBlockExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBlockExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XBlockExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1()); }
(
	';' 
)?
{ after(grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XVariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group__0__Impl
	rule__XVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0()); }
(

)
{ after(grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XVariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group__1__Impl
	rule__XVariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getAlternatives_1()); }
(rule__XVariableDeclaration__Alternatives_1)
{ after(grammarAccess.getXVariableDeclarationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XVariableDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group__2__Impl
	rule__XVariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getAlternatives_2()); }
(rule__XVariableDeclaration__Alternatives_2)
{ after(grammarAccess.getXVariableDeclarationAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XVariableDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getGroup_3()); }
(rule__XVariableDeclaration__Group_3__0)?
{ after(grammarAccess.getXVariableDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XVariableDeclaration__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group_2_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getGroup_2_0_0()); }
(rule__XVariableDeclaration__Group_2_0_0__0)
{ after(grammarAccess.getXVariableDeclarationAccess().getGroup_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XVariableDeclaration__Group_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group_2_0_0__0__Impl
	rule__XVariableDeclaration__Group_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getTypeAssignment_2_0_0_0()); }
(rule__XVariableDeclaration__TypeAssignment_2_0_0_0)
{ after(grammarAccess.getXVariableDeclarationAccess().getTypeAssignment_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XVariableDeclaration__Group_2_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group_2_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group_2_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getNameAssignment_2_0_0_1()); }
(rule__XVariableDeclaration__NameAssignment_2_0_0_1)
{ after(grammarAccess.getXVariableDeclarationAccess().getNameAssignment_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XVariableDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group_3__0__Impl
	rule__XVariableDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0()); }

	'=' 

{ after(grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XVariableDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getRightAssignment_3_1()); }
(rule__XVariableDeclaration__RightAssignment_3_1)
{ after(grammarAccess.getXVariableDeclarationAccess().getRightAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmFormalParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmFormalParameter__Group__0__Impl
	rule__JvmFormalParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmFormalParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmFormalParameterAccess().getParameterTypeAssignment_0()); }
(rule__JvmFormalParameter__ParameterTypeAssignment_0)?
{ after(grammarAccess.getJvmFormalParameterAccess().getParameterTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmFormalParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmFormalParameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmFormalParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmFormalParameterAccess().getNameAssignment_1()); }
(rule__JvmFormalParameter__NameAssignment_1)
{ after(grammarAccess.getJvmFormalParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FullJvmFormalParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FullJvmFormalParameter__Group__0__Impl
	rule__FullJvmFormalParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FullJvmFormalParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeAssignment_0()); }
(rule__FullJvmFormalParameter__ParameterTypeAssignment_0)
{ after(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FullJvmFormalParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FullJvmFormalParameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FullJvmFormalParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullJvmFormalParameterAccess().getNameAssignment_1()); }
(rule__FullJvmFormalParameter__NameAssignment_1)
{ after(grammarAccess.getFullJvmFormalParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XFeatureCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group__0__Impl
	rule__XFeatureCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0()); }
(

)
{ after(grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group__1__Impl
	rule__XFeatureCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getGroup_1()); }
(rule__XFeatureCall__Group_1__0)?
{ after(grammarAccess.getXFeatureCallAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group__2__Impl
	rule__XFeatureCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureAssignment_2()); }
(rule__XFeatureCall__FeatureAssignment_2)
{ after(grammarAccess.getXFeatureCallAccess().getFeatureAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group__3__Impl
	rule__XFeatureCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getGroup_3()); }
(rule__XFeatureCall__Group_3__0)?
{ after(grammarAccess.getXFeatureCallAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_4()); }
(rule__XFeatureCall__FeatureCallArgumentsAssignment_4)?
{ after(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__XFeatureCall__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_1__0__Impl
	rule__XFeatureCall__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_1_0()); }

	'<' 

{ after(grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_1__1__Impl
	rule__XFeatureCall__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getTypeArgumentsAssignment_1_1()); }
(rule__XFeatureCall__TypeArgumentsAssignment_1_1)
{ after(grammarAccess.getXFeatureCallAccess().getTypeArgumentsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_1__2__Impl
	rule__XFeatureCall__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getGroup_1_2()); }
(rule__XFeatureCall__Group_1_2__0)*
{ after(grammarAccess.getXFeatureCallAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_1_3()); }

	'>' 

{ after(grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XFeatureCall__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_1_2__0__Impl
	rule__XFeatureCall__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getTypeArgumentsAssignment_1_2_1()); }
(rule__XFeatureCall__TypeArgumentsAssignment_1_2_1)
{ after(grammarAccess.getXFeatureCallAccess().getTypeArgumentsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XFeatureCall__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_3__0__Impl
	rule__XFeatureCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getExplicitOperationCallAssignment_3_0()); }
(rule__XFeatureCall__ExplicitOperationCallAssignment_3_0)
{ after(grammarAccess.getXFeatureCallAccess().getExplicitOperationCallAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_3__1__Impl
	rule__XFeatureCall__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getAlternatives_3_1()); }
(rule__XFeatureCall__Alternatives_3_1)?
{ after(grammarAccess.getXFeatureCallAccess().getAlternatives_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XFeatureCall__Group_3_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_3_1_1__0__Impl
	rule__XFeatureCall__Group_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_3_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_3_1_1_0()); }
(rule__XFeatureCall__FeatureCallArgumentsAssignment_3_1_1_0)
{ after(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_3_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_3_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getGroup_3_1_1_1()); }
(rule__XFeatureCall__Group_3_1_1_1__0)*
{ after(grammarAccess.getXFeatureCallAccess().getGroup_3_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XFeatureCall__Group_3_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_3_1_1_1__0__Impl
	rule__XFeatureCall__Group_3_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_3_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getCommaKeyword_3_1_1_1_0()); }

	',' 

{ after(grammarAccess.getXFeatureCallAccess().getCommaKeyword_3_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_3_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_3_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_3_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_3_1_1_1_1()); }
(rule__XFeatureCall__FeatureCallArgumentsAssignment_3_1_1_1_1)
{ after(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_3_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XConstructorCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group__0__Impl
	rule__XConstructorCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0()); }
(

)
{ after(grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group__1__Impl
	rule__XConstructorCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getNewKeyword_1()); }

	'new' 

{ after(grammarAccess.getXConstructorCallAccess().getNewKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group__2__Impl
	rule__XConstructorCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getConstructorAssignment_2()); }
(rule__XConstructorCall__ConstructorAssignment_2)
{ after(grammarAccess.getXConstructorCallAccess().getConstructorAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group__3__Impl
	rule__XConstructorCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getGroup_3()); }
(rule__XConstructorCall__Group_3__0)?
{ after(grammarAccess.getXConstructorCallAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group__4__Impl
	rule__XConstructorCall__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getGroup_4()); }
(rule__XConstructorCall__Group_4__0)?
{ after(grammarAccess.getXConstructorCallAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_5()); }
(rule__XConstructorCall__ArgumentsAssignment_5)?
{ after(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__XConstructorCall__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_3__0__Impl
	rule__XConstructorCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0()); }
(
	'<' 
)
{ after(grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_3__1__Impl
	rule__XConstructorCall__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getTypeArgumentsAssignment_3_1()); }
(rule__XConstructorCall__TypeArgumentsAssignment_3_1)
{ after(grammarAccess.getXConstructorCallAccess().getTypeArgumentsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_3__2__Impl
	rule__XConstructorCall__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getGroup_3_2()); }
(rule__XConstructorCall__Group_3_2__0)*
{ after(grammarAccess.getXConstructorCallAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3()); }

	'>' 

{ after(grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XConstructorCall__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_3_2__0__Impl
	rule__XConstructorCall__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getTypeArgumentsAssignment_3_2_1()); }
(rule__XConstructorCall__TypeArgumentsAssignment_3_2_1)
{ after(grammarAccess.getXConstructorCallAccess().getTypeArgumentsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XConstructorCall__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_4__0__Impl
	rule__XConstructorCall__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getLeftParenthesisKeyword_4_0()); }
(
	'(' 
)
{ after(grammarAccess.getXConstructorCallAccess().getLeftParenthesisKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_4__1__Impl
	rule__XConstructorCall__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getAlternatives_4_1()); }
(rule__XConstructorCall__Alternatives_4_1)?
{ after(grammarAccess.getXConstructorCallAccess().getAlternatives_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2()); }

	')' 

{ after(grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XConstructorCall__Group_4_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_4_1_1__0__Impl
	rule__XConstructorCall__Group_4_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_4_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_4_1_1_0()); }
(rule__XConstructorCall__ArgumentsAssignment_4_1_1_0)
{ after(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_4_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_4_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_4_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getGroup_4_1_1_1()); }
(rule__XConstructorCall__Group_4_1_1_1__0)*
{ after(grammarAccess.getXConstructorCallAccess().getGroup_4_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XConstructorCall__Group_4_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_4_1_1_1__0__Impl
	rule__XConstructorCall__Group_4_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_4_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0()); }

	',' 

{ after(grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_4_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_4_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_4_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_4_1_1_1_1()); }
(rule__XConstructorCall__ArgumentsAssignment_4_1_1_1_1)
{ after(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_4_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XBooleanLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBooleanLiteral__Group__0__Impl
	rule__XBooleanLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XBooleanLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0()); }
(

)
{ after(grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBooleanLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBooleanLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XBooleanLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBooleanLiteralAccess().getAlternatives_1()); }
(rule__XBooleanLiteral__Alternatives_1)
{ after(grammarAccess.getXBooleanLiteralAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XNullLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XNullLiteral__Group__0__Impl
	rule__XNullLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XNullLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0()); }
(

)
{ after(grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XNullLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XNullLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XNullLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXNullLiteralAccess().getNullKeyword_1()); }

	'null' 

{ after(grammarAccess.getXNullLiteralAccess().getNullKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XNumberLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XNumberLiteral__Group__0__Impl
	rule__XNumberLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XNumberLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0()); }
(

)
{ after(grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XNumberLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XNumberLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XNumberLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXNumberLiteralAccess().getValueAssignment_1()); }
(rule__XNumberLiteral__ValueAssignment_1)
{ after(grammarAccess.getXNumberLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XStringLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XStringLiteral__Group__0__Impl
	rule__XStringLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XStringLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0()); }
(

)
{ after(grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XStringLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XStringLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XStringLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStringLiteralAccess().getValueAssignment_1()); }
(rule__XStringLiteral__ValueAssignment_1)
{ after(grammarAccess.getXStringLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XTypeLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTypeLiteral__Group__0__Impl
	rule__XTypeLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0()); }
(

)
{ after(grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTypeLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTypeLiteral__Group__1__Impl
	rule__XTypeLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1()); }

	'typeof' 

{ after(grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTypeLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTypeLiteral__Group__2__Impl
	rule__XTypeLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTypeLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTypeLiteral__Group__3__Impl
	rule__XTypeLiteral__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getTypeAssignment_3()); }
(rule__XTypeLiteral__TypeAssignment_3)
{ after(grammarAccess.getXTypeLiteralAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTypeLiteral__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTypeLiteral__Group__4__Impl
	rule__XTypeLiteral__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsAssignment_4()); }
(rule__XTypeLiteral__ArrayDimensionsAssignment_4)*
{ after(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTypeLiteral__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTypeLiteral__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__XThrowExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XThrowExpression__Group__0__Impl
	rule__XThrowExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XThrowExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0()); }
(

)
{ after(grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XThrowExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XThrowExpression__Group__1__Impl
	rule__XThrowExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XThrowExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1()); }

	'throw' 

{ after(grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XThrowExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XThrowExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XThrowExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXThrowExpressionAccess().getExpressionAssignment_2()); }
(rule__XThrowExpression__ExpressionAssignment_2)
{ after(grammarAccess.getXThrowExpressionAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XReturnExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XReturnExpression__Group__0__Impl
	rule__XReturnExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XReturnExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0()); }
(

)
{ after(grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XReturnExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XReturnExpression__Group__1__Impl
	rule__XReturnExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XReturnExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1()); }

	'return' 

{ after(grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XReturnExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XReturnExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XReturnExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXReturnExpressionAccess().getExpressionAssignment_2()); }
(rule__XReturnExpression__ExpressionAssignment_2)?
{ after(grammarAccess.getXReturnExpressionAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XTryCatchFinallyExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group__0__Impl
	rule__XTryCatchFinallyExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0()); }
(

)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTryCatchFinallyExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group__1__Impl
	rule__XTryCatchFinallyExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1()); }

	'try' 

{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTryCatchFinallyExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group__2__Impl
	rule__XTryCatchFinallyExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionAssignment_2()); }
(rule__XTryCatchFinallyExpression__ExpressionAssignment_2)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTryCatchFinallyExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getAlternatives_3()); }
(rule__XTryCatchFinallyExpression__Alternatives_3)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XTryCatchFinallyExpression__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group_3_0__0__Impl
	rule__XTryCatchFinallyExpression__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesAssignment_3_0_0()); }
(rule__XTryCatchFinallyExpression__CatchClausesAssignment_3_0_0)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesAssignment_3_0_0()); }
)
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesAssignment_3_0_0()); }
(rule__XTryCatchFinallyExpression__CatchClausesAssignment_3_0_0)*
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesAssignment_3_0_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTryCatchFinallyExpression__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_3_0_1()); }
(rule__XTryCatchFinallyExpression__Group_3_0_1__0)?
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XTryCatchFinallyExpression__Group_3_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group_3_0_1__0__Impl
	rule__XTryCatchFinallyExpression__Group_3_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group_3_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0()); }
(
	'finally' 
)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTryCatchFinallyExpression__Group_3_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group_3_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group_3_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionAssignment_3_0_1_1()); }
(rule__XTryCatchFinallyExpression__FinallyExpressionAssignment_3_0_1_1)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionAssignment_3_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XTryCatchFinallyExpression__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group_3_1__0__Impl
	rule__XTryCatchFinallyExpression__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0()); }

	'finally' 

{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTryCatchFinallyExpression__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionAssignment_3_1_1()); }
(rule__XTryCatchFinallyExpression__FinallyExpressionAssignment_3_1_1)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XCatchClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCatchClause__Group__0__Impl
	rule__XCatchClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XCatchClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCatchClauseAccess().getCatchKeyword_0()); }
(
	'catch' 
)
{ after(grammarAccess.getXCatchClauseAccess().getCatchKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCatchClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCatchClause__Group__1__Impl
	rule__XCatchClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XCatchClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCatchClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCatchClause__Group__2__Impl
	rule__XCatchClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XCatchClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCatchClauseAccess().getDeclaredParamAssignment_2()); }
(rule__XCatchClause__DeclaredParamAssignment_2)
{ after(grammarAccess.getXCatchClauseAccess().getDeclaredParamAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCatchClause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCatchClause__Group__3__Impl
	rule__XCatchClause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XCatchClause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCatchClause__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCatchClause__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XCatchClause__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCatchClauseAccess().getExpressionAssignment_4()); }
(rule__XCatchClause__ExpressionAssignment_4)
{ after(grammarAccess.getXCatchClauseAccess().getExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); }
	ruleValidID
{ after(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
(
	'.' 
)
{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); }
	ruleValidID
{ after(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Number__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1__0__Impl
	rule__Number__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getAlternatives_1_0()); }
(rule__Number__Alternatives_1_0)
{ after(grammarAccess.getNumberAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getGroup_1_1()); }
(rule__Number__Group_1_1__0)?
{ after(grammarAccess.getNumberAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Number__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1_1__0__Impl
	rule__Number__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); }

	'.' 

{ after(grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getAlternatives_1_1_1()); }
(rule__Number__Alternatives_1_1_1)
{ after(grammarAccess.getNumberAccess().getAlternatives_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__JvmTypeReference__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmTypeReference__Group_0__0__Impl
	rule__JvmTypeReference__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0()); }
	ruleJvmParameterizedTypeReference
{ after(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmTypeReference__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmTypeReference__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getGroup_0_1()); }
(rule__JvmTypeReference__Group_0_1__0)*
{ after(grammarAccess.getJvmTypeReferenceAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmTypeReference__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmTypeReference__Group_0_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getGroup_0_1_0()); }
(rule__JvmTypeReference__Group_0_1_0__0)
{ after(grammarAccess.getJvmTypeReferenceAccess().getGroup_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__JvmTypeReference__Group_0_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmTypeReference__Group_0_1_0__0__Impl
	rule__JvmTypeReference__Group_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0()); }
(

)
{ after(grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmTypeReference__Group_0_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmTypeReference__Group_0_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1()); }
	ruleArrayBrackets
{ after(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArrayBrackets__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayBrackets__Group__0__Impl
	rule__ArrayBrackets__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayBrackets__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayBrackets__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayBrackets__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayBrackets__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1()); }

	']' 

{ after(grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XFunctionTypeRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group__0__Impl
	rule__XFunctionTypeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getGroup_0()); }
(rule__XFunctionTypeRef__Group_0__0)?
{ after(grammarAccess.getXFunctionTypeRefAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group__1__Impl
	rule__XFunctionTypeRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1()); }

	'=>' 

{ after(grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeAssignment_2()); }
(rule__XFunctionTypeRef__ReturnTypeAssignment_2)
{ after(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XFunctionTypeRef__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0__0__Impl
	rule__XFunctionTypeRef__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0__1__Impl
	rule__XFunctionTypeRef__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1()); }
(rule__XFunctionTypeRef__Group_0_1__0)?
{ after(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XFunctionTypeRef__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0_1__0__Impl
	rule__XFunctionTypeRef__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_0()); }
(rule__XFunctionTypeRef__ParamTypesAssignment_0_1_0)
{ after(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1_1()); }
(rule__XFunctionTypeRef__Group_0_1_1__0)*
{ after(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XFunctionTypeRef__Group_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0_1_1__0__Impl
	rule__XFunctionTypeRef__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0()); }

	',' 

{ after(grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_1_1()); }
(rule__XFunctionTypeRef__ParamTypesAssignment_0_1_1_1)
{ after(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmParameterizedTypeReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group__0__Impl
	rule__JvmParameterizedTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeAssignment_0()); }
(rule__JvmParameterizedTypeReference__TypeAssignment_0)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1()); }
(rule__JvmParameterizedTypeReference__Group_1__0)?
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmParameterizedTypeReference__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1__0__Impl
	rule__JvmParameterizedTypeReference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0()); }
(
	'<' 
)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1__1__Impl
	rule__JvmParameterizedTypeReference__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_1()); }
(rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_1)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1__2__Impl
	rule__JvmParameterizedTypeReference__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_2()); }
(rule__JvmParameterizedTypeReference__Group_1_2__0)*
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3()); }

	'>' 

{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__JvmParameterizedTypeReference__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_2__0__Impl
	rule__JvmParameterizedTypeReference__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_2_1()); }
(rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_2_1)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmWildcardTypeReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmWildcardTypeReference__Group__0__Impl
	rule__JvmWildcardTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0()); }
(

)
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmWildcardTypeReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmWildcardTypeReference__Group__1__Impl
	rule__JvmWildcardTypeReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1()); }

	'?' 

{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmWildcardTypeReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmWildcardTypeReference__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getAlternatives_2()); }
(rule__JvmWildcardTypeReference__Alternatives_2)?
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JvmUpperBound__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmUpperBound__Group__0__Impl
	rule__JvmUpperBound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBound__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0()); }

	'extends' 

{ after(grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmUpperBound__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmUpperBound__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBound__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceAssignment_1()); }
(rule__JvmUpperBound__TypeReferenceAssignment_1)
{ after(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmUpperBoundAnded__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmUpperBoundAnded__Group__0__Impl
	rule__JvmUpperBoundAnded__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBoundAnded__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0()); }

	'&' 

{ after(grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmUpperBoundAnded__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmUpperBoundAnded__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBoundAnded__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceAssignment_1()); }
(rule__JvmUpperBoundAnded__TypeReferenceAssignment_1)
{ after(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmLowerBound__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmLowerBound__Group__0__Impl
	rule__JvmLowerBound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBound__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0()); }

	'super' 

{ after(grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmLowerBound__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmLowerBound__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBound__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceAssignment_1()); }
(rule__JvmLowerBound__TypeReferenceAssignment_1)
{ after(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedNameWithWildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
	rule__QualifiedNameWithWildcard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2()); }

	'*' 

{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XImportDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group__0__Impl
	rule__XImportDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getXImportDeclarationAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group__1__Impl
	rule__XImportDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getAlternatives_1()); }
(rule__XImportDeclaration__Alternatives_1)
{ after(grammarAccess.getXImportDeclarationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2()); }
(
	';' 
)?
{ after(grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XImportDeclaration__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group_1_0__0__Impl
	rule__XImportDeclaration__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getStaticAssignment_1_0_0()); }
(rule__XImportDeclaration__StaticAssignment_1_0_0)
{ after(grammarAccess.getXImportDeclarationAccess().getStaticAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group_1_0__1__Impl
	rule__XImportDeclaration__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getExtensionAssignment_1_0_1()); }
(rule__XImportDeclaration__ExtensionAssignment_1_0_1)?
{ after(grammarAccess.getXImportDeclarationAccess().getExtensionAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group_1_0__2__Impl
	rule__XImportDeclaration__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_0_2()); }
(rule__XImportDeclaration__ImportedTypeAssignment_1_0_2)
{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group_1_0__3__Impl
	rule__XImportDeclaration__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getFullStopKeyword_1_0_3()); }

	'.' 

{ after(grammarAccess.getXImportDeclarationAccess().getFullStopKeyword_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Group_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group_1_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getAsteriskKeyword_1_0_4()); }

	'*' 

{ after(grammarAccess.getXImportDeclarationAccess().getAsteriskKeyword_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__Root__MethodnameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootAccess().getMethodnameMethodNameParserRuleCall_0_0()); }
	ruleMethodName{ after(grammarAccess.getRootAccess().getMethodnameMethodNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Root__IncludelibrarytypeAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootAccess().getIncludelibrarytypeIncludeLibraryTypeParserRuleCall_1_0_0()); }
	ruleIncludeLibraryType{ after(grammarAccess.getRootAccess().getIncludelibrarytypeIncludeLibraryTypeParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Root__EmbedplatformtypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootAccess().getEmbedplatformtypeEmbedPlatformTypeParserRuleCall_1_1_0()); }
	ruleEmbedPlatformType{ after(grammarAccess.getRootAccess().getEmbedplatformtypeEmbedPlatformTypeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Root__EmbedcodetypeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootAccess().getEmbedcodetypeEmbedCodeTypeParserRuleCall_1_2_0()); }
	ruleEmbedCodeType{ after(grammarAccess.getRootAccess().getEmbedcodetypeEmbedCodeTypeParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Root__IncludelibraryAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootAccess().getIncludelibraryIncludeLibraryParserRuleCall_2_0()); }
	ruleIncludeLibrary{ after(grammarAccess.getRootAccess().getIncludelibraryIncludeLibraryParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Root__EmbedcodeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootAccess().getEmbedcodeEmbedCodeParserRuleCall_3_0()); }
	ruleEmbedCode{ after(grammarAccess.getRootAccess().getEmbedcodeEmbedCodeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Root__MethodAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootAccess().getMethodMethodParserRuleCall_4_0()); }
	ruleMethod{ after(grammarAccess.getRootAccess().getMethodMethodParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodName__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodNameAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getMethodNameAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeLibrary__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeLibraryAccess().getNameValidIDParserRuleCall_2_0()); }
	ruleValidID{ after(grammarAccess.getIncludeLibraryAccess().getNameValidIDParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeLibrary__IncludelibrarytypeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeLibraryAccess().getIncludelibrarytypeIncludeLibraryTypeCrossReference_3_1_0()); }
(
{ before(grammarAccess.getIncludeLibraryAccess().getIncludelibrarytypeIncludeLibraryTypeQualifiedNameParserRuleCall_3_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getIncludeLibraryAccess().getIncludelibrarytypeIncludeLibraryTypeQualifiedNameParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getIncludeLibraryAccess().getIncludelibrarytypeIncludeLibraryTypeCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeLibraryType__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeLibraryTypeAccess().getNameValidIDParserRuleCall_2_0()); }
	ruleValidID{ after(grammarAccess.getIncludeLibraryTypeAccess().getNameValidIDParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EmbedCode__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbedCodeAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getEmbedCodeAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EmbedCode__EmbedplatformtypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbedCodeAccess().getEmbedplatformtypeEmbedPlatformTypeCrossReference_3_0()); }
(
{ before(grammarAccess.getEmbedCodeAccess().getEmbedplatformtypeEmbedPlatformTypeQualifiedNameParserRuleCall_3_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getEmbedCodeAccess().getEmbedplatformtypeEmbedPlatformTypeQualifiedNameParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getEmbedCodeAccess().getEmbedplatformtypeEmbedPlatformTypeCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EmbedCode__EmbedcodetypeAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbedCodeAccess().getEmbedcodetypeEmbedCodeTypeCrossReference_4_1_0()); }
(
{ before(grammarAccess.getEmbedCodeAccess().getEmbedcodetypeEmbedCodeTypeQualifiedNameParserRuleCall_4_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getEmbedCodeAccess().getEmbedcodetypeEmbedCodeTypeQualifiedNameParserRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getEmbedCodeAccess().getEmbedcodetypeEmbedCodeTypeCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EmbedCode__EmbeddedcodeAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbedCodeAccess().getEmbeddedcodeSTRINGTerminalRuleCall_7_0()); }
	RULE_STRING{ after(grammarAccess.getEmbedCodeAccess().getEmbeddedcodeSTRINGTerminalRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EmbedPlatformType__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbedPlatformTypeAccess().getNameValidIDParserRuleCall_2_0()); }
	ruleValidID{ after(grammarAccess.getEmbedPlatformTypeAccess().getNameValidIDParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EmbedCodeType__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmbedCodeTypeAccess().getNameValidIDParserRuleCall_2_0()); }
	ruleValidID{ after(grammarAccess.getEmbedCodeTypeAccess().getNameValidIDParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InsertEmbedCode__CodesnippetnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertEmbedCodeAccess().getCodesnippetnameEmbedCodeCrossReference_1_0()); }
(
{ before(grammarAccess.getInsertEmbedCodeAccess().getCodesnippetnameEmbedCodeQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getInsertEmbedCodeAccess().getCodesnippetnameEmbedCodeQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getInsertEmbedCodeAccess().getCodesnippetnameEmbedCodeCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__EnumerationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getEnumerationEnumerationParserRuleCall_0_0()); }
	ruleEnumeration{ after(grammarAccess.getMethodAccess().getEnumerationEnumerationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__SymbolstyleAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getSymbolstyleSymbolStyleParserRuleCall_1_0()); }
	ruleSymbolStyle{ after(grammarAccess.getMethodAccess().getSymbolstyleSymbolStyleParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__SymbolclassAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getSymbolclassSymbolClassParserRuleCall_2_0()); }
	ruleSymbolClass{ after(grammarAccess.getMethodAccess().getSymbolclassSymbolClassParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__SymbolrelationAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getSymbolrelationSymbolRelationParserRuleCall_3_0()); }
	ruleSymbolRelation{ after(grammarAccess.getMethodAccess().getSymbolrelationSymbolRelationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__MetamodelAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getMetamodelMetamodelParserRuleCall_4_0()); }
	ruleMetamodel{ after(grammarAccess.getMethodAccess().getMetamodelMetamodelParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__AlgorithmAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getAlgorithmAlgorithmParserRuleCall_5_0()); }
	ruleAlgorithm{ after(grammarAccess.getMethodAccess().getAlgorithmAlgorithmParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__EventAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getEventEventParserRuleCall_6_0()); }
	ruleEvent{ after(grammarAccess.getMethodAccess().getEventEventParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getEnumerationAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__EnumvaluesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationAccess().getEnumvaluesSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getEnumerationAccess().getEnumvaluesSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Metamodel__ClassAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelAccess().getClassClassParserRuleCall_0_0()); }
	ruleClass{ after(grammarAccess.getMetamodelAccess().getClassClassParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Metamodel__RelationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelAccess().getRelationRelationParserRuleCall_1_0()); }
	ruleRelation{ after(grammarAccess.getMetamodelAccess().getRelationRelationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Metamodel__AttributeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelAccess().getAttributeAttributeParserRuleCall_2_0()); }
	ruleAttribute{ after(grammarAccess.getMetamodelAccess().getAttributeAttributeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Metamodel__ModeltypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelAccess().getModeltypeModelTypeParserRuleCall_3_0()); }
	ruleModelType{ after(grammarAccess.getMetamodelAccess().getModeltypeModelTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getClassAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__ParentclassnameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getParentclassnameClassCrossReference_2_1_0()); }
(
{ before(grammarAccess.getClassAccess().getParentclassnameClassQualifiedNameParserRuleCall_2_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getClassAccess().getParentclassnameClassQualifiedNameParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getClassAccess().getParentclassnameClassCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__SymbolclassAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getSymbolclassSymbolClassCrossReference_3_1_0()); }
(
{ before(grammarAccess.getClassAccess().getSymbolclassSymbolClassQualifiedNameParserRuleCall_3_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getClassAccess().getSymbolclassSymbolClassQualifiedNameParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getClassAccess().getSymbolclassSymbolClassCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__ClassattributeAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getClassattributeClassAttributeParserRuleCall_5_0_0()); }
	ruleClassAttribute{ after(grammarAccess.getClassAccess().getClassattributeClassAttributeParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__AttributeAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getAttributeAttributeParserRuleCall_5_1_0()); }
	ruleAttribute{ after(grammarAccess.getClassAccess().getAttributeAttributeParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__InsertembedcodeAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getInsertembedcodeInsertEmbedCodeParserRuleCall_5_2_0()); }
	ruleInsertEmbedCode{ after(grammarAccess.getClassAccess().getInsertembedcodeInsertEmbedCodeParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__ReferenceAssignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getReferenceReferenceParserRuleCall_5_3_0()); }
	ruleReference{ after(grammarAccess.getClassAccess().getReferenceReferenceParserRuleCall_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getRelationAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__ParentrelationnameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getParentrelationnameRelationCrossReference_2_1_0()); }
(
{ before(grammarAccess.getRelationAccess().getParentrelationnameRelationQualifiedNameParserRuleCall_2_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRelationAccess().getParentrelationnameRelationQualifiedNameParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getRelationAccess().getParentrelationnameRelationCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__SymbolrelationAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getSymbolrelationSymbolRelationCrossReference_3_1_0()); }
(
{ before(grammarAccess.getRelationAccess().getSymbolrelationSymbolRelationQualifiedNameParserRuleCall_3_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRelationAccess().getSymbolrelationSymbolRelationQualifiedNameParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getRelationAccess().getSymbolrelationSymbolRelationCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__FromclassnameAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getFromclassnameClassCrossReference_5_0()); }
(
{ before(grammarAccess.getRelationAccess().getFromclassnameClassQualifiedNameParserRuleCall_5_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRelationAccess().getFromclassnameClassQualifiedNameParserRuleCall_5_0_1()); }
)
{ after(grammarAccess.getRelationAccess().getFromclassnameClassCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__ToclassnameAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getToclassnameClassCrossReference_7_0()); }
(
{ before(grammarAccess.getRelationAccess().getToclassnameClassQualifiedNameParserRuleCall_7_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRelationAccess().getToclassnameClassQualifiedNameParserRuleCall_7_0_1()); }
)
{ after(grammarAccess.getRelationAccess().getToclassnameClassCrossReference_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__AttributeAssignment_9_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getAttributeAttributeParserRuleCall_9_0_0()); }
	ruleAttribute{ after(grammarAccess.getRelationAccess().getAttributeAttributeParserRuleCall_9_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__InsertembedcodeAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getInsertembedcodeInsertEmbedCodeParserRuleCall_9_1_0()); }
	ruleInsertEmbedCode{ after(grammarAccess.getRelationAccess().getInsertembedcodeInsertEmbedCodeParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getAttributeAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeTypeParserRuleCall_3_0()); }
	ruleType{ after(grammarAccess.getAttributeAccess().getTypeTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__AccessAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getAccessAccessTypeEnumRuleCall_4_2_0()); }
	ruleAccessType{ after(grammarAccess.getAttributeAccess().getAccessAccessTypeEnumRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAttributeAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getClassAttributeAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassAttribute__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAttributeAccess().getTypeTypeParserRuleCall_3_0()); }
	ruleType{ after(grammarAccess.getClassAttributeAccess().getTypeTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getReferenceAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__RefnameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getRefnameRefNameParserRuleCall_3_0()); }
	ruleRefName{ after(grammarAccess.getReferenceAccess().getRefnameRefNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RefName__ModeltypenameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefNameAccess().getModeltypenameModelTypeCrossReference_0_1_0()); }
(
{ before(grammarAccess.getRefNameAccess().getModeltypenameModelTypeQualifiedNameParserRuleCall_0_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRefNameAccess().getModeltypenameModelTypeQualifiedNameParserRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getRefNameAccess().getModeltypenameModelTypeCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RefName__ClassnameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefNameAccess().getClassnameClassCrossReference_1_1_0()); }
(
{ before(grammarAccess.getRefNameAccess().getClassnameClassQualifiedNameParserRuleCall_1_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRefNameAccess().getClassnameClassQualifiedNameParserRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getRefNameAccess().getClassnameClassCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__SimpletypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSimpletypeSimpleTypeEnumRuleCall_0_0()); }
	ruleSimpleType{ after(grammarAccess.getTypeAccess().getSimpletypeSimpleTypeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__EnumtypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEnumtypeEnumTypeParserRuleCall_1_0()); }
	ruleEnumType{ after(grammarAccess.getTypeAccess().getEnumtypeEnumTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumTypeAccess().getNameEnumerationCrossReference_1_0()); }
(
{ before(grammarAccess.getEnumTypeAccess().getNameEnumerationQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getEnumTypeAccess().getNameEnumerationQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getEnumTypeAccess().getNameEnumerationCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelTypeAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getModelTypeAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__ClassnameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelTypeAccess().getClassnameClassCrossReference_4_0()); }
(
{ before(grammarAccess.getModelTypeAccess().getClassnameClassQualifiedNameParserRuleCall_4_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getModelTypeAccess().getClassnameClassQualifiedNameParserRuleCall_4_0_1()); }
)
{ after(grammarAccess.getModelTypeAccess().getClassnameClassCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__RelationnameAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelTypeAccess().getRelationnameRelationCrossReference_6_1_0()); }
(
{ before(grammarAccess.getModelTypeAccess().getRelationnameRelationQualifiedNameParserRuleCall_6_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getModelTypeAccess().getRelationnameRelationQualifiedNameParserRuleCall_6_1_0_1()); }
)
{ after(grammarAccess.getModelTypeAccess().getRelationnameRelationCrossReference_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__ModenameAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelTypeAccess().getModenameModeParserRuleCall_8_1_0()); }
	ruleMode{ after(grammarAccess.getModelTypeAccess().getModenameModeParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mode__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModeAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getModeAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mode__ClassnameAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModeAccess().getClassnameClassCrossReference_3_1_0()); }
(
{ before(grammarAccess.getModeAccess().getClassnameClassQualifiedNameParserRuleCall_3_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getModeAccess().getClassnameClassQualifiedNameParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getModeAccess().getClassnameClassCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mode__RelationnameAssignment_3_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModeAccess().getRelationnameRelationCrossReference_3_3_1_0()); }
(
{ before(grammarAccess.getModeAccess().getRelationnameRelationQualifiedNameParserRuleCall_3_3_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getModeAccess().getRelationnameRelationQualifiedNameParserRuleCall_3_3_1_0_1()); }
)
{ after(grammarAccess.getModeAccess().getRelationnameRelationCrossReference_3_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolClass__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolClassAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getSymbolClassAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolClass__GlobalstyleAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolClassAccess().getGlobalstyleSymbolStyleCrossReference_2_1_0()); }
(
{ before(grammarAccess.getSymbolClassAccess().getGlobalstyleSymbolStyleQualifiedNameParserRuleCall_2_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getSymbolClassAccess().getGlobalstyleSymbolStyleQualifiedNameParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getSymbolClassAccess().getGlobalstyleSymbolStyleCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolClass__SvgcommandAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolClassAccess().getSvgcommandSVGCommandParserRuleCall_4_0()); }
	ruleSVGCommand{ after(grammarAccess.getSymbolClassAccess().getSvgcommandSVGCommandParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRelation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolRelationAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getSymbolRelationAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRelation__GlobalstyleAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolRelationAccess().getGlobalstyleSymbolStyleCrossReference_2_1_0()); }
(
{ before(grammarAccess.getSymbolRelationAccess().getGlobalstyleSymbolStyleQualifiedNameParserRuleCall_2_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getSymbolRelationAccess().getGlobalstyleSymbolStyleQualifiedNameParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getSymbolRelationAccess().getGlobalstyleSymbolStyleCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRelation__SvgcommandsfromAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolRelationAccess().getSvgcommandsfromSVGCommandParserRuleCall_5_0()); }
	ruleSVGCommand{ after(grammarAccess.getSymbolRelationAccess().getSvgcommandsfromSVGCommandParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRelation__SvgcommandsmiddleAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolRelationAccess().getSvgcommandsmiddleSVGCommandParserRuleCall_7_0()); }
	ruleSVGCommand{ after(grammarAccess.getSymbolRelationAccess().getSvgcommandsmiddleSVGCommandParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRelation__SvgcommandstoAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolRelationAccess().getSvgcommandstoSVGCommandParserRuleCall_9_0()); }
	ruleSVGCommand{ after(grammarAccess.getSymbolRelationAccess().getSvgcommandstoSVGCommandParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SVGCommand__InsertembedcodeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSVGCommandAccess().getInsertembedcodeInsertEmbedCodeParserRuleCall_0_0()); }
	ruleInsertEmbedCode{ after(grammarAccess.getSVGCommandAccess().getInsertembedcodeInsertEmbedCodeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SVGCommand__RectangleAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSVGCommandAccess().getRectangleRectangleParserRuleCall_1_0_0_0()); }
	ruleRectangle{ after(grammarAccess.getSVGCommandAccess().getRectangleRectangleParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SVGCommand__CircleAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSVGCommandAccess().getCircleCircleParserRuleCall_1_0_1_0()); }
	ruleCircle{ after(grammarAccess.getSVGCommandAccess().getCircleCircleParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SVGCommand__EllipseAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSVGCommandAccess().getEllipseEllipseParserRuleCall_1_0_2_0()); }
	ruleEllipse{ after(grammarAccess.getSVGCommandAccess().getEllipseEllipseParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SVGCommand__LineAssignment_1_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSVGCommandAccess().getLineLineParserRuleCall_1_0_3_0()); }
	ruleLine{ after(grammarAccess.getSVGCommandAccess().getLineLineParserRuleCall_1_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SVGCommand__PolylineAssignment_1_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSVGCommandAccess().getPolylinePolylineParserRuleCall_1_0_4_0()); }
	rulePolyline{ after(grammarAccess.getSVGCommandAccess().getPolylinePolylineParserRuleCall_1_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SVGCommand__PolygonAssignment_1_0_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSVGCommandAccess().getPolygonPolygonParserRuleCall_1_0_5_0()); }
	rulePolygon{ after(grammarAccess.getSVGCommandAccess().getPolygonPolygonParserRuleCall_1_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SVGCommand__PathAssignment_1_0_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSVGCommandAccess().getPathPathParserRuleCall_1_0_6_0()); }
	rulePath{ after(grammarAccess.getSVGCommandAccess().getPathPathParserRuleCall_1_0_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SVGCommand__TextAssignment_1_0_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSVGCommandAccess().getTextTextParserRuleCall_1_0_7_0()); }
	ruleText{ after(grammarAccess.getSVGCommandAccess().getTextTextParserRuleCall_1_0_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SVGCommand__SymbolstyleAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSVGCommandAccess().getSymbolstyleSymbolStyleParserRuleCall_1_1_0_0()); }
	ruleSymbolStyle{ after(grammarAccess.getSVGCommandAccess().getSymbolstyleSymbolStyleParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SVGCommand__SymbolstylerefAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSVGCommandAccess().getSymbolstylerefSymbolStyleCrossReference_1_1_1_1_0()); }
(
{ before(grammarAccess.getSVGCommandAccess().getSymbolstylerefSymbolStyleQualifiedNameParserRuleCall_1_1_1_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getSVGCommandAccess().getSymbolstylerefSymbolStyleQualifiedNameParserRuleCall_1_1_1_1_0_1()); }
)
{ after(grammarAccess.getSVGCommandAccess().getSymbolstylerefSymbolStyleCrossReference_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__XAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRectangleAccess().getXRealNumberParserRuleCall_3_0()); }
	ruleRealNumber{ after(grammarAccess.getRectangleAccess().getXRealNumberParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__YAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRectangleAccess().getYRealNumberParserRuleCall_6_0()); }
	ruleRealNumber{ after(grammarAccess.getRectangleAccess().getYRealNumberParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__WidthAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRectangleAccess().getWidthNumberParserRuleCall_9_0()); }
	ruleNumber{ after(grammarAccess.getRectangleAccess().getWidthNumberParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rectangle__HeightAssignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRectangleAccess().getHeightNumberParserRuleCall_12_0()); }
	ruleNumber{ after(grammarAccess.getRectangleAccess().getHeightNumberParserRuleCall_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__CxAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getCxRealNumberParserRuleCall_3_0()); }
	ruleRealNumber{ after(grammarAccess.getCircleAccess().getCxRealNumberParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__CyAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getCyRealNumberParserRuleCall_6_0()); }
	ruleRealNumber{ after(grammarAccess.getCircleAccess().getCyRealNumberParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Circle__RAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCircleAccess().getRNumberParserRuleCall_9_0()); }
	ruleNumber{ after(grammarAccess.getCircleAccess().getRNumberParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__CxAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEllipseAccess().getCxRealNumberParserRuleCall_3_0()); }
	ruleRealNumber{ after(grammarAccess.getEllipseAccess().getCxRealNumberParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__CyAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEllipseAccess().getCyRealNumberParserRuleCall_6_0()); }
	ruleRealNumber{ after(grammarAccess.getEllipseAccess().getCyRealNumberParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__RxAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEllipseAccess().getRxRealNumberParserRuleCall_9_0()); }
	ruleRealNumber{ after(grammarAccess.getEllipseAccess().getRxRealNumberParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ellipse__RyAssignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEllipseAccess().getRyRealNumberParserRuleCall_12_0()); }
	ruleRealNumber{ after(grammarAccess.getEllipseAccess().getRyRealNumberParserRuleCall_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Line__X1Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineAccess().getX1RealNumberParserRuleCall_3_0()); }
	ruleRealNumber{ after(grammarAccess.getLineAccess().getX1RealNumberParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Y1Assignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineAccess().getY1RealNumberParserRuleCall_6_0()); }
	ruleRealNumber{ after(grammarAccess.getLineAccess().getY1RealNumberParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Line__X2Assignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineAccess().getX2RealNumberParserRuleCall_9_0()); }
	ruleRealNumber{ after(grammarAccess.getLineAccess().getX2RealNumberParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Line__Y2Assignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineAccess().getY2RealNumberParserRuleCall_12_0()); }
	ruleRealNumber{ after(grammarAccess.getLineAccess().getY2RealNumberParserRuleCall_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Polyline__PointsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolylineAccess().getPointsPointsParserRuleCall_3_0()); }
	rulePoints{ after(grammarAccess.getPolylineAccess().getPointsPointsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Polygon__PointsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolygonAccess().getPointsPointsParserRuleCall_3_0()); }
	rulePoints{ after(grammarAccess.getPolygonAccess().getPointsPointsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Path__PathdataAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathAccess().getPathdataPathDataParserRuleCall_3_0()); }
	rulePathData{ after(grammarAccess.getPathAccess().getPathdataPathDataParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Text__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getTextAccess().getValueSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Text__XAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getXRealNumberParserRuleCall_4_0()); }
	ruleRealNumber{ after(grammarAccess.getTextAccess().getXRealNumberParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Text__YAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getYRealNumberParserRuleCall_7_0()); }
	ruleRealNumber{ after(grammarAccess.getTextAccess().getYRealNumberParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Text__FontfamilyAssignment_8_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getFontfamilyFontFamilyParserRuleCall_8_2_0()); }
	ruleFontFamily{ after(grammarAccess.getTextAccess().getFontfamilyFontFamilyParserRuleCall_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Text__FontsizeAssignment_9_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getFontsizeFontSizeParserRuleCall_9_2_0()); }
	ruleFontSize{ after(grammarAccess.getTextAccess().getFontsizeFontSizeParserRuleCall_9_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Text__FillcolorAssignment_10_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextAccess().getFillcolorFillColorParserRuleCall_10_2_0()); }
	ruleFillColor{ after(grammarAccess.getTextAccess().getFillcolorFillColorParserRuleCall_10_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathData__MovetoAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathDataAccess().getMovetoMoveToParserRuleCall_0_0()); }
	ruleMoveTo{ after(grammarAccess.getPathDataAccess().getMovetoMoveToParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathData__LinetoAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathDataAccess().getLinetoLineToParserRuleCall_1_0()); }
	ruleLineTo{ after(grammarAccess.getPathDataAccess().getLinetoLineToParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathData__HorizontallinetoAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathDataAccess().getHorizontallinetoHorizontalLineToParserRuleCall_2_0()); }
	ruleHorizontalLineTo{ after(grammarAccess.getPathDataAccess().getHorizontallinetoHorizontalLineToParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathData__VerticallinetoAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathDataAccess().getVerticallinetoVerticalLineToParserRuleCall_3_0()); }
	ruleVerticalLineTo{ after(grammarAccess.getPathDataAccess().getVerticallinetoVerticalLineToParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathData__CurvetoAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathDataAccess().getCurvetoCurveToParserRuleCall_4_0()); }
	ruleCurveTo{ after(grammarAccess.getPathDataAccess().getCurvetoCurveToParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathData__SmoothcurvetoAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathDataAccess().getSmoothcurvetoSmoothCurveToParserRuleCall_5_0()); }
	ruleSmoothCurveTo{ after(grammarAccess.getPathDataAccess().getSmoothcurvetoSmoothCurveToParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathData__QuadraticbeziercurveAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathDataAccess().getQuadraticbeziercurveQuadraticBezierCurveParserRuleCall_6_0()); }
	ruleQuadraticBezierCurve{ after(grammarAccess.getPathDataAccess().getQuadraticbeziercurveQuadraticBezierCurveParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathData__SmoothquadraticbeziercurvetoAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathDataAccess().getSmoothquadraticbeziercurvetoSmoothQuadraticBezierCurveToParserRuleCall_7_0()); }
	ruleSmoothQuadraticBezierCurveTo{ after(grammarAccess.getPathDataAccess().getSmoothquadraticbeziercurvetoSmoothQuadraticBezierCurveToParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathData__EllipticalarcAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathDataAccess().getEllipticalarcEllipticalArcParserRuleCall_8_0()); }
	ruleEllipticalArc{ after(grammarAccess.getPathDataAccess().getEllipticalarcEllipticalArcParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathData__ClosepathAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathDataAccess().getClosepathClosePathParserRuleCall_9_0()); }
	ruleClosePath{ after(grammarAccess.getPathDataAccess().getClosepathClosePathParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MoveTo__ParametersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMoveToAccess().getParametersPathParametersMLTParserRuleCall_1_0()); }
	rulePathParametersMLT{ after(grammarAccess.getMoveToAccess().getParametersPathParametersMLTParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LineTo__ParametersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLineToAccess().getParametersPathParametersMLTParserRuleCall_1_0()); }
	rulePathParametersMLT{ after(grammarAccess.getLineToAccess().getParametersPathParametersMLTParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HorizontalLineTo__ParametersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHorizontalLineToAccess().getParametersPathParametersHVParserRuleCall_1_0()); }
	rulePathParametersHV{ after(grammarAccess.getHorizontalLineToAccess().getParametersPathParametersHVParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerticalLineTo__ParametersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerticalLineToAccess().getParametersPathParametersHVParserRuleCall_1_0()); }
	rulePathParametersHV{ after(grammarAccess.getVerticalLineToAccess().getParametersPathParametersHVParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CurveTo__ParametersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCurveToAccess().getParametersPathParametersCParserRuleCall_1_0()); }
	rulePathParametersC{ after(grammarAccess.getCurveToAccess().getParametersPathParametersCParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SmoothCurveTo__ParametersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSmoothCurveToAccess().getParametersPathParametersSParserRuleCall_1_0()); }
	rulePathParametersS{ after(grammarAccess.getSmoothCurveToAccess().getParametersPathParametersSParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuadraticBezierCurve__ParametersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuadraticBezierCurveAccess().getParametersPathParametersQParserRuleCall_1_0()); }
	rulePathParametersQ{ after(grammarAccess.getQuadraticBezierCurveAccess().getParametersPathParametersQParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SmoothQuadraticBezierCurveTo__ParametersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSmoothQuadraticBezierCurveToAccess().getParametersPathParametersMLTParserRuleCall_1_0()); }
	rulePathParametersMLT{ after(grammarAccess.getSmoothQuadraticBezierCurveToAccess().getParametersPathParametersMLTParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EllipticalArc__ParametersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEllipticalArcAccess().getParametersPathParametersAParserRuleCall_1_0()); }
	rulePathParametersA{ after(grammarAccess.getEllipticalArcAccess().getParametersPathParametersAParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Points__XAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsAccess().getXRealNumberParserRuleCall_0_0()); }
	ruleRealNumber{ after(grammarAccess.getPointsAccess().getXRealNumberParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Points__YAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsAccess().getYRealNumberParserRuleCall_2_0()); }
	ruleRealNumber{ after(grammarAccess.getPointsAccess().getYRealNumberParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersHV__XAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersHVAccess().getXRealNumberParserRuleCall_0()); }
	ruleRealNumber{ after(grammarAccess.getPathParametersHVAccess().getXRealNumberParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersMLT__XAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersMLTAccess().getXRealNumberParserRuleCall_0_0()); }
	ruleRealNumber{ after(grammarAccess.getPathParametersMLTAccess().getXRealNumberParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersMLT__YAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersMLTAccess().getYRealNumberParserRuleCall_2_0()); }
	ruleRealNumber{ after(grammarAccess.getPathParametersMLTAccess().getYRealNumberParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersS__X2Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersSAccess().getX2RealNumberParserRuleCall_0_0()); }
	ruleRealNumber{ after(grammarAccess.getPathParametersSAccess().getX2RealNumberParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersS__Y2Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersSAccess().getY2RealNumberParserRuleCall_1_0()); }
	ruleRealNumber{ after(grammarAccess.getPathParametersSAccess().getY2RealNumberParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersS__XAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersSAccess().getXRealNumberParserRuleCall_2_0()); }
	ruleRealNumber{ after(grammarAccess.getPathParametersSAccess().getXRealNumberParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersS__YAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersSAccess().getYRealNumberParserRuleCall_3_0()); }
	ruleRealNumber{ after(grammarAccess.getPathParametersSAccess().getYRealNumberParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersQ__X1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersQAccess().getX1RealNumberParserRuleCall_0_0()); }
	ruleRealNumber{ after(grammarAccess.getPathParametersQAccess().getX1RealNumberParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersQ__Y1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersQAccess().getY1RealNumberParserRuleCall_1_0()); }
	ruleRealNumber{ after(grammarAccess.getPathParametersQAccess().getY1RealNumberParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersQ__XAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersQAccess().getXRealNumberParserRuleCall_2_0()); }
	ruleRealNumber{ after(grammarAccess.getPathParametersQAccess().getXRealNumberParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersQ__YAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersQAccess().getYRealNumberParserRuleCall_3_0()); }
	ruleRealNumber{ after(grammarAccess.getPathParametersQAccess().getYRealNumberParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersC__X1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersCAccess().getX1RealNumberParserRuleCall_0_0()); }
	ruleRealNumber{ after(grammarAccess.getPathParametersCAccess().getX1RealNumberParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersC__Y1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersCAccess().getY1RealNumberParserRuleCall_1_0()); }
	ruleRealNumber{ after(grammarAccess.getPathParametersCAccess().getY1RealNumberParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersC__X2Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersCAccess().getX2RealNumberParserRuleCall_2_0()); }
	ruleRealNumber{ after(grammarAccess.getPathParametersCAccess().getX2RealNumberParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersC__Y2Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersCAccess().getY2RealNumberParserRuleCall_3_0()); }
	ruleRealNumber{ after(grammarAccess.getPathParametersCAccess().getY2RealNumberParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersC__XAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersCAccess().getXRealNumberParserRuleCall_4_0()); }
	ruleRealNumber{ after(grammarAccess.getPathParametersCAccess().getXRealNumberParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersC__YAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersCAccess().getYRealNumberParserRuleCall_5_0()); }
	ruleRealNumber{ after(grammarAccess.getPathParametersCAccess().getYRealNumberParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersA__RxAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersAAccess().getRxRealNumberParserRuleCall_0_0()); }
	ruleRealNumber{ after(grammarAccess.getPathParametersAAccess().getRxRealNumberParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersA__RyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersAAccess().getRyRealNumberParserRuleCall_2_0()); }
	ruleRealNumber{ after(grammarAccess.getPathParametersAAccess().getRyRealNumberParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersA__XaxisrotAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersAAccess().getXaxisrotRealNumberParserRuleCall_3_0()); }
	ruleRealNumber{ after(grammarAccess.getPathParametersAAccess().getXaxisrotRealNumberParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersA__LargearcflagAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersAAccess().getLargearcflagNumberParserRuleCall_4_0()); }
	ruleNumber{ after(grammarAccess.getPathParametersAAccess().getLargearcflagNumberParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersA__SweepflagAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersAAccess().getSweepflagNumberParserRuleCall_5_0()); }
	ruleNumber{ after(grammarAccess.getPathParametersAAccess().getSweepflagNumberParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersA__XAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersAAccess().getXRealNumberParserRuleCall_6_0()); }
	ruleRealNumber{ after(grammarAccess.getPathParametersAAccess().getXRealNumberParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PathParametersA__YAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPathParametersAAccess().getYRealNumberParserRuleCall_7_0()); }
	ruleRealNumber{ after(grammarAccess.getPathParametersAAccess().getYRealNumberParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getSymbolStyleAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__FillcolorAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getFillcolorFillColorParserRuleCall_5_1_0()); }
	ruleFillColor{ after(grammarAccess.getSymbolStyleAccess().getFillcolorFillColorParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__StrokecolorAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getStrokecolorStrokeColorParserRuleCall_8_0()); }
	ruleStrokeColor{ after(grammarAccess.getSymbolStyleAccess().getStrokecolorStrokeColorParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__StrokewidthAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getStrokewidthStrokeWidthParserRuleCall_11_0()); }
	ruleStrokeWidth{ after(grammarAccess.getSymbolStyleAccess().getStrokewidthStrokeWidthParserRuleCall_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__FontfamilyAssignment_12_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getFontfamilyFontFamilyParserRuleCall_12_2_0()); }
	ruleFontFamily{ after(grammarAccess.getSymbolStyleAccess().getFontfamilyFontFamilyParserRuleCall_12_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__FontsizeAssignment_13_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getFontsizeFontSizeParserRuleCall_13_2_0()); }
	ruleFontSize{ after(grammarAccess.getSymbolStyleAccess().getFontsizeFontSizeParserRuleCall_13_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolStyle__InsertembedcodeAssignment_14
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolStyleAccess().getInsertembedcodeInsertEmbedCodeParserRuleCall_14_0()); }
	ruleInsertEmbedCode{ after(grammarAccess.getSymbolStyleAccess().getInsertembedcodeInsertEmbedCodeParserRuleCall_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FillColor__ColorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFillColorAccess().getColorColorEnumRuleCall_0_1_0()); }
	ruleColor{ after(grammarAccess.getFillColorAccess().getColorColorEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FillColor__HexcolorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFillColorAccess().getHexcolorHEXCOLORTerminalRuleCall_1_0()); }
	RULE_HEXCOLOR{ after(grammarAccess.getFillColorAccess().getHexcolorHEXCOLORTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StrokeColor__ColorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStrokeColorAccess().getColorColorEnumRuleCall_0_1_0()); }
	ruleColor{ after(grammarAccess.getStrokeColorAccess().getColorColorEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StrokeColor__HexcolorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStrokeColorAccess().getHexcolorHEXCOLORTerminalRuleCall_1_0()); }
	RULE_HEXCOLOR{ after(grammarAccess.getStrokeColorAccess().getHexcolorHEXCOLORTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FontFamily__FontstrAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFontFamilyAccess().getFontstrSTRINGTerminalRuleCall_0_1_0()); }
	RULE_STRING{ after(grammarAccess.getFontFamilyAccess().getFontstrSTRINGTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FontFamily__FontAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFontFamilyAccess().getFontFontEnumRuleCall_1_0()); }
	ruleFont{ after(grammarAccess.getFontFamilyAccess().getFontFontEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgorithmAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getAlgorithmAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__StmntAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgorithmAccess().getStmntStatementParserRuleCall_3_0()); }
	ruleStatement{ after(grammarAccess.getAlgorithmAccess().getStmntStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__SelectionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSelectionSelectionStatementParserRuleCall_0_0()); }
	ruleSelectionStatement{ after(grammarAccess.getStatementAccess().getSelectionSelectionStatementParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__LoopAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getLoopLoopStatementParserRuleCall_1_0()); }
	ruleLoopStatement{ after(grammarAccess.getStatementAccess().getLoopLoopStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__VariableAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getVariableVariableParserRuleCall_2_0()); }
	ruleVariable{ after(grammarAccess.getStatementAccess().getVariableVariableParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__AlgorithmoperationAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getAlgorithmoperationAlgorithmOperationParserRuleCall_3_0()); }
	ruleAlgorithmOperation{ after(grammarAccess.getStatementAccess().getAlgorithmoperationAlgorithmOperationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__InsertembedcodeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getInsertembedcodeInsertEmbedCodeParserRuleCall_4_0()); }
	ruleInsertEmbedCode{ after(grammarAccess.getStatementAccess().getInsertembedcodeInsertEmbedCodeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__IfconditionAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getIfconditionExprParserRuleCall_0_2_0()); }
	ruleExpr{ after(grammarAccess.getSelectionStatementAccess().getIfconditionExprParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__IfblockAssignment_0_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getIfblockStatementParserRuleCall_0_5_0()); }
	ruleStatement{ after(grammarAccess.getSelectionStatementAccess().getIfblockStatementParserRuleCall_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__ElseifconditionAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getElseifconditionExprParserRuleCall_1_0_2_0()); }
	ruleExpr{ after(grammarAccess.getSelectionStatementAccess().getElseifconditionExprParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__ElseifblockAssignment_1_0_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getElseifblockStatementParserRuleCall_1_0_5_0()); }
	ruleStatement{ after(grammarAccess.getSelectionStatementAccess().getElseifblockStatementParserRuleCall_1_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__ElseblockAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionStatementAccess().getElseblockStatementParserRuleCall_1_3_0()); }
	ruleStatement{ after(grammarAccess.getSelectionStatementAccess().getElseblockStatementParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__WhiletloopAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopStatementAccess().getWhiletloopWhileLoopParserRuleCall_0_0()); }
	ruleWhileLoop{ after(grammarAccess.getLoopStatementAccess().getWhiletloopWhileLoopParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopStatement__ForloopAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopStatementAccess().getForloopForLoopParserRuleCall_1_0()); }
	ruleForLoop{ after(grammarAccess.getLoopStatementAccess().getForloopForLoopParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__ConditionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getConditionExprParserRuleCall_2_0()); }
	ruleExpr{ after(grammarAccess.getWhileLoopAccess().getConditionExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__WhileblockAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getWhileblockStatementParserRuleCall_5_0_0()); }
	ruleStatement{ after(grammarAccess.getWhileLoopAccess().getWhileblockStatementParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__BreakcontinueAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getBreakcontinueBreakContinueParserRuleCall_5_1_0()); }
	ruleBreakContinue{ after(grammarAccess.getWhileLoopAccess().getBreakcontinueBreakContinueParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__StartAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getStartINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getForLoopAccess().getStartINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__StopAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getStopINTTerminalRuleCall_4_0()); }
	RULE_INT{ after(grammarAccess.getForLoopAccess().getStopINTTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__IntervalAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getIntervalINTTerminalRuleCall_6_0()); }
	RULE_INT{ after(grammarAccess.getForLoopAccess().getIntervalINTTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__ForblockAssignment_9_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getForblockStatementParserRuleCall_9_0_0()); }
	ruleStatement{ after(grammarAccess.getForLoopAccess().getForblockStatementParserRuleCall_9_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__BreakcontinueAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForLoopAccess().getBreakcontinueBreakContinueParserRuleCall_9_1_0()); }
	ruleBreakContinue{ after(grammarAccess.getForLoopAccess().getBreakcontinueBreakContinueParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BreakContinue__BreakAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakContinueAccess().getBreakBreakKeyword_0_0()); }
(
{ before(grammarAccess.getBreakContinueAccess().getBreakBreakKeyword_0_0()); }

	'break' 

{ after(grammarAccess.getBreakContinueAccess().getBreakBreakKeyword_0_0()); }
)

{ after(grammarAccess.getBreakContinueAccess().getBreakBreakKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BreakContinue__ContinueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakContinueAccess().getContinueContinueKeyword_1_0()); }
(
{ before(grammarAccess.getBreakContinueAccess().getContinueContinueKeyword_1_0()); }

	'continue' 

{ after(grammarAccess.getBreakContinueAccess().getContinueContinueKeyword_1_0()); }
)

{ after(grammarAccess.getBreakContinueAccess().getContinueContinueKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameValidIDParserRuleCall_0_1_0()); }
	ruleValidID{ after(grammarAccess.getVariableAccess().getNameValidIDParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__OpassingAssignment_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getOpassingOperatorAssignParserRuleCall_0_2_0_0()); }
	ruleOperatorAssign{ after(grammarAccess.getVariableAccess().getOpassingOperatorAssignParserRuleCall_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__VarstatementAssignment_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getVarstatementVarStatementParserRuleCall_0_2_1_0()); }
	ruleVarStatement{ after(grammarAccess.getVariableAccess().getVarstatementVarStatementParserRuleCall_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__VariableAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getVariableVariableCrossReference_1_0_0()); }
(
{ before(grammarAccess.getVariableAccess().getVariableVariableQualifiedNameParserRuleCall_1_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getVariableAccess().getVariableVariableQualifiedNameParserRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getVariableAccess().getVariableVariableCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__OpassingAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getOpassingOperatorAssignParserRuleCall_1_1_0()); }
	ruleOperatorAssign{ after(grammarAccess.getVariableAccess().getOpassingOperatorAssignParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__VarstatementAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getVarstatementVarStatementParserRuleCall_1_2_0()); }
	ruleVarStatement{ after(grammarAccess.getVariableAccess().getVarstatementVarStatementParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__ExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getExpressionExprParserRuleCall_0_0()); }
	ruleExpr{ after(grammarAccess.getVarStatementAccess().getExpressionExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__AlgorithmoperationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getAlgorithmoperationAlgorithmOperationParserRuleCall_1_0()); }
	ruleAlgorithmOperation{ after(grammarAccess.getVarStatementAccess().getAlgorithmoperationAlgorithmOperationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__ClassAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getClassClassCrossReference_2_1_0()); }
(
{ before(grammarAccess.getVarStatementAccess().getClassClassQualifiedNameParserRuleCall_2_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getVarStatementAccess().getClassClassQualifiedNameParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getVarStatementAccess().getClassClassCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__AttributeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getAttributeAttributeCrossReference_3_1_0()); }
(
{ before(grammarAccess.getVarStatementAccess().getAttributeAttributeQualifiedNameParserRuleCall_3_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getVarStatementAccess().getAttributeAttributeQualifiedNameParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getVarStatementAccess().getAttributeAttributeCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__ReferenceAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getReferenceReferenceCrossReference_4_1_0()); }
(
{ before(grammarAccess.getVarStatementAccess().getReferenceReferenceQualifiedNameParserRuleCall_4_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getVarStatementAccess().getReferenceReferenceQualifiedNameParserRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getVarStatementAccess().getReferenceReferenceCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__SymbolclassAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getSymbolclassSymbolClassCrossReference_5_1_0()); }
(
{ before(grammarAccess.getVarStatementAccess().getSymbolclassSymbolClassQualifiedNameParserRuleCall_5_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getVarStatementAccess().getSymbolclassSymbolClassQualifiedNameParserRuleCall_5_1_0_1()); }
)
{ after(grammarAccess.getVarStatementAccess().getSymbolclassSymbolClassCrossReference_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__SymbolrelationAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getSymbolrelationSymbolRelationCrossReference_6_1_0()); }
(
{ before(grammarAccess.getVarStatementAccess().getSymbolrelationSymbolRelationQualifiedNameParserRuleCall_6_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getVarStatementAccess().getSymbolrelationSymbolRelationQualifiedNameParserRuleCall_6_1_0_1()); }
)
{ after(grammarAccess.getVarStatementAccess().getSymbolrelationSymbolRelationCrossReference_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__SymbolstyleAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getSymbolstyleSymbolStyleCrossReference_7_1_0()); }
(
{ before(grammarAccess.getVarStatementAccess().getSymbolstyleSymbolStyleQualifiedNameParserRuleCall_7_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getVarStatementAccess().getSymbolstyleSymbolStyleQualifiedNameParserRuleCall_7_1_0_1()); }
)
{ after(grammarAccess.getVarStatementAccess().getSymbolstyleSymbolStyleCrossReference_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__EmbeddedcodeAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getEmbeddedcodeEmbedCodeCrossReference_8_1_0()); }
(
{ before(grammarAccess.getVarStatementAccess().getEmbeddedcodeEmbedCodeQualifiedNameParserRuleCall_8_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getVarStatementAccess().getEmbeddedcodeEmbedCodeQualifiedNameParserRuleCall_8_1_0_1()); }
)
{ after(grammarAccess.getVarStatementAccess().getEmbeddedcodeEmbedCodeCrossReference_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarStatement__ModeltypeAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarStatementAccess().getModeltypeModelTypeCrossReference_9_1_0()); }
(
{ before(grammarAccess.getVarStatementAccess().getModeltypeModelTypeQualifiedNameParserRuleCall_9_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getVarStatementAccess().getModeltypeModelTypeQualifiedNameParserRuleCall_9_1_0_1()); }
)
{ after(grammarAccess.getVarStatementAccess().getModeltypeModelTypeCrossReference_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorAssign__AssignAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAssignAccess().getAssignEqualsSignKeyword_0_0()); }
(
{ before(grammarAccess.getOperatorAssignAccess().getAssignEqualsSignKeyword_0_0()); }

	'=' 

{ after(grammarAccess.getOperatorAssignAccess().getAssignEqualsSignKeyword_0_0()); }
)

{ after(grammarAccess.getOperatorAssignAccess().getAssignEqualsSignKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorAssign__MultyassignAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAssignAccess().getMultyassignOperatorMultyAssignParserRuleCall_1_0()); }
	ruleOperatorMultyAssign{ after(grammarAccess.getOperatorAssignAccess().getMultyassignOperatorMultyAssignParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorMultyAssign__AddassignAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorMultyAssignAccess().getAddassignPlusSignEqualsSignKeyword_0_0()); }
(
{ before(grammarAccess.getOperatorMultyAssignAccess().getAddassignPlusSignEqualsSignKeyword_0_0()); }

	'+=' 

{ after(grammarAccess.getOperatorMultyAssignAccess().getAddassignPlusSignEqualsSignKeyword_0_0()); }
)

{ after(grammarAccess.getOperatorMultyAssignAccess().getAddassignPlusSignEqualsSignKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorMultyAssign__SubassignAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorMultyAssignAccess().getSubassignHyphenMinusEqualsSignKeyword_1_0()); }
(
{ before(grammarAccess.getOperatorMultyAssignAccess().getSubassignHyphenMinusEqualsSignKeyword_1_0()); }

	'-=' 

{ after(grammarAccess.getOperatorMultyAssignAccess().getSubassignHyphenMinusEqualsSignKeyword_1_0()); }
)

{ after(grammarAccess.getOperatorMultyAssignAccess().getSubassignHyphenMinusEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorMultyAssign__MultiassignAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorMultyAssignAccess().getMultiassignAsteriskEqualsSignKeyword_2_0()); }
(
{ before(grammarAccess.getOperatorMultyAssignAccess().getMultiassignAsteriskEqualsSignKeyword_2_0()); }

	'*=' 

{ after(grammarAccess.getOperatorMultyAssignAccess().getMultiassignAsteriskEqualsSignKeyword_2_0()); }
)

{ after(grammarAccess.getOperatorMultyAssignAccess().getMultiassignAsteriskEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorMultyAssign__DivassignAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorMultyAssignAccess().getDivassignSolidusEqualsSignKeyword_3_0()); }
(
{ before(grammarAccess.getOperatorMultyAssignAccess().getDivassignSolidusEqualsSignKeyword_3_0()); }

	'/=' 

{ after(grammarAccess.getOperatorMultyAssignAccess().getDivassignSolidusEqualsSignKeyword_3_0()); }
)

{ after(grammarAccess.getOperatorMultyAssignAccess().getDivassignSolidusEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorUnary__NotAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorUnaryAccess().getNotExclamationMarkKeyword_0()); }
(
{ before(grammarAccess.getOperatorUnaryAccess().getNotExclamationMarkKeyword_0()); }

	'!' 

{ after(grammarAccess.getOperatorUnaryAccess().getNotExclamationMarkKeyword_0()); }
)

{ after(grammarAccess.getOperatorUnaryAccess().getNotExclamationMarkKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorMultiply__MultiplyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorMultiplyAccess().getMultiplyAsteriskKeyword_0_0()); }
(
{ before(grammarAccess.getOperatorMultiplyAccess().getMultiplyAsteriskKeyword_0_0()); }

	'*' 

{ after(grammarAccess.getOperatorMultiplyAccess().getMultiplyAsteriskKeyword_0_0()); }
)

{ after(grammarAccess.getOperatorMultiplyAccess().getMultiplyAsteriskKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorMultiply__DivideAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorMultiplyAccess().getDivideSolidusKeyword_1_0()); }
(
{ before(grammarAccess.getOperatorMultiplyAccess().getDivideSolidusKeyword_1_0()); }

	'/' 

{ after(grammarAccess.getOperatorMultiplyAccess().getDivideSolidusKeyword_1_0()); }
)

{ after(grammarAccess.getOperatorMultiplyAccess().getDivideSolidusKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorMultiply__ModuloAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorMultiplyAccess().getModuloPercentSignKeyword_2_0()); }
(
{ before(grammarAccess.getOperatorMultiplyAccess().getModuloPercentSignKeyword_2_0()); }

	'%' 

{ after(grammarAccess.getOperatorMultiplyAccess().getModuloPercentSignKeyword_2_0()); }
)

{ after(grammarAccess.getOperatorMultiplyAccess().getModuloPercentSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorAdd__AddAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAddAccess().getAddPlusSignKeyword_0_0()); }
(
{ before(grammarAccess.getOperatorAddAccess().getAddPlusSignKeyword_0_0()); }

	'+' 

{ after(grammarAccess.getOperatorAddAccess().getAddPlusSignKeyword_0_0()); }
)

{ after(grammarAccess.getOperatorAddAccess().getAddPlusSignKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorAdd__SubtractAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAddAccess().getSubtractHyphenMinusKeyword_1_0()); }
(
{ before(grammarAccess.getOperatorAddAccess().getSubtractHyphenMinusKeyword_1_0()); }

	'-' 

{ after(grammarAccess.getOperatorAddAccess().getSubtractHyphenMinusKeyword_1_0()); }
)

{ after(grammarAccess.getOperatorAddAccess().getSubtractHyphenMinusKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorCompare__GreaterequalAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorCompareAccess().getGreaterequalGreaterThanSignEqualsSignKeyword_0_0()); }
(
{ before(grammarAccess.getOperatorCompareAccess().getGreaterequalGreaterThanSignEqualsSignKeyword_0_0()); }

	'>=' 

{ after(grammarAccess.getOperatorCompareAccess().getGreaterequalGreaterThanSignEqualsSignKeyword_0_0()); }
)

{ after(grammarAccess.getOperatorCompareAccess().getGreaterequalGreaterThanSignEqualsSignKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorCompare__LesserequalAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorCompareAccess().getLesserequalLessThanSignEqualsSignKeyword_1_0()); }
(
{ before(grammarAccess.getOperatorCompareAccess().getLesserequalLessThanSignEqualsSignKeyword_1_0()); }

	'<=' 

{ after(grammarAccess.getOperatorCompareAccess().getLesserequalLessThanSignEqualsSignKeyword_1_0()); }
)

{ after(grammarAccess.getOperatorCompareAccess().getLesserequalLessThanSignEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorCompare__GreaterAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorCompareAccess().getGreaterGreaterThanSignKeyword_2_0()); }
(
{ before(grammarAccess.getOperatorCompareAccess().getGreaterGreaterThanSignKeyword_2_0()); }

	'>' 

{ after(grammarAccess.getOperatorCompareAccess().getGreaterGreaterThanSignKeyword_2_0()); }
)

{ after(grammarAccess.getOperatorCompareAccess().getGreaterGreaterThanSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorCompare__LesserAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorCompareAccess().getLesserLessThanSignKeyword_3_0()); }
(
{ before(grammarAccess.getOperatorCompareAccess().getLesserLessThanSignKeyword_3_0()); }

	'<' 

{ after(grammarAccess.getOperatorCompareAccess().getLesserLessThanSignKeyword_3_0()); }
)

{ after(grammarAccess.getOperatorCompareAccess().getLesserLessThanSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorEqual__EqualAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorEqualAccess().getEqualEqualsSignEqualsSignKeyword_0_0()); }
(
{ before(grammarAccess.getOperatorEqualAccess().getEqualEqualsSignEqualsSignKeyword_0_0()); }

	'==' 

{ after(grammarAccess.getOperatorEqualAccess().getEqualEqualsSignEqualsSignKeyword_0_0()); }
)

{ after(grammarAccess.getOperatorEqualAccess().getEqualEqualsSignEqualsSignKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorEqual__NotequalAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorEqualAccess().getNotequalExclamationMarkEqualsSignKeyword_1_0()); }
(
{ before(grammarAccess.getOperatorEqualAccess().getNotequalExclamationMarkEqualsSignKeyword_1_0()); }

	'!=' 

{ after(grammarAccess.getOperatorEqualAccess().getNotequalExclamationMarkEqualsSignKeyword_1_0()); }
)

{ after(grammarAccess.getOperatorEqualAccess().getNotequalExclamationMarkEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorAnd__AndAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAndAccess().getAndAmpersandAmpersandKeyword_0()); }
(
{ before(grammarAccess.getOperatorAndAccess().getAndAmpersandAmpersandKeyword_0()); }

	'&&' 

{ after(grammarAccess.getOperatorAndAccess().getAndAmpersandAmpersandKeyword_0()); }
)

{ after(grammarAccess.getOperatorAndAccess().getAndAmpersandAmpersandKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorOr__OrAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorOrAccess().getOrVerticalLineVerticalLineKeyword_0()); }
(
{ before(grammarAccess.getOperatorOrAccess().getOrVerticalLineVerticalLineKeyword_0()); }

	'||' 

{ after(grammarAccess.getOperatorOrAccess().getOrVerticalLineVerticalLineKeyword_0()); }
)

{ after(grammarAccess.getOperatorOrAccess().getOrVerticalLineVerticalLineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExprAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getExprOrExpressionParserRuleCall_0()); }
	ruleOrExpression{ after(grammarAccess.getExprAccess().getExprOrExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOpOperatorOrParserRuleCall_1_0_0_1_0()); }
	ruleOperatorOr{ after(grammarAccess.getOrExpressionAccess().getOpOperatorOrParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_1_0()); }
	ruleAndExpression{ after(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOpOperatorAndParserRuleCall_1_0_0_1_0()); }
	ruleOperatorAnd{ after(grammarAccess.getAndExpressionAccess().getOpOperatorAndParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRightEqualExpressionParserRuleCall_1_1_0()); }
	ruleEqualExpression{ after(grammarAccess.getAndExpressionAccess().getRightEqualExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualExpression__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualExpressionAccess().getOpOperatorEqualParserRuleCall_1_0_0_1_0()); }
	ruleOperatorEqual{ after(grammarAccess.getEqualExpressionAccess().getOpOperatorEqualParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualExpression__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualExpressionAccess().getRightCompareExpressionParserRuleCall_1_1_0()); }
	ruleCompareExpression{ after(grammarAccess.getEqualExpressionAccess().getRightCompareExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getOpOperatorCompareParserRuleCall_1_0_0_1_0()); }
	ruleOperatorCompare{ after(grammarAccess.getCompareExpressionAccess().getOpOperatorCompareParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getRightAdditionExpressionParserRuleCall_1_1_0()); }
	ruleAdditionExpression{ after(grammarAccess.getCompareExpressionAccess().getRightAdditionExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionExpressionAccess().getOpOperatorAddParserRuleCall_1_0_0_1_0()); }
	ruleOperatorAdd{ after(grammarAccess.getAdditionExpressionAccess().getOpOperatorAddParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExpression__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionExpressionAccess().getRightMultiplicationExpressionParserRuleCall_1_1_0()); }
	ruleMultiplicationExpression{ after(grammarAccess.getAdditionExpressionAccess().getRightMultiplicationExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpressionAccess().getOpOperatorMultiplyParserRuleCall_1_0_0_1_0()); }
	ruleOperatorMultiply{ after(grammarAccess.getMultiplicationExpressionAccess().getOpOperatorMultiplyParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExpression__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpressionAccess().getRightUnaryExpressionParserRuleCall_1_1_0()); }
	ruleUnaryExpression{ after(grammarAccess.getMultiplicationExpressionAccess().getRightUnaryExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getOpOperatorUnaryParserRuleCall_0_0()); }
	ruleOperatorUnary{ after(grammarAccess.getUnaryExpressionAccess().getOpOperatorUnaryParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OperandAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getOperandPrimaryExpressionParserRuleCall_1_0()); }
	rulePrimaryExpression{ after(grammarAccess.getUnaryExpressionAccess().getOperandPrimaryExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__AtomicAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAtomicAtomicExpressionParserRuleCall_0_0()); }
	ruleAtomicExpression{ after(grammarAccess.getPrimaryExpressionAccess().getAtomicAtomicExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionOrExpressionParserRuleCall_1_1_0()); }
	ruleOrExpression{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionOrExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__TrueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getTrueTrueKeyword_0_0()); }
(
{ before(grammarAccess.getAtomicExpressionAccess().getTrueTrueKeyword_0_0()); }

	'true' 

{ after(grammarAccess.getAtomicExpressionAccess().getTrueTrueKeyword_0_0()); }
)

{ after(grammarAccess.getAtomicExpressionAccess().getTrueTrueKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__FalseAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getFalseFalseKeyword_1_0()); }
(
{ before(grammarAccess.getAtomicExpressionAccess().getFalseFalseKeyword_1_0()); }

	'false' 

{ after(grammarAccess.getAtomicExpressionAccess().getFalseFalseKeyword_1_0()); }
)

{ after(grammarAccess.getAtomicExpressionAccess().getFalseFalseKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__VariableAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getVariableVariableCrossReference_2_0()); }
(
{ before(grammarAccess.getAtomicExpressionAccess().getVariableVariableQualifiedNameParserRuleCall_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getAtomicExpressionAccess().getVariableVariableQualifiedNameParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getAtomicExpressionAccess().getVariableVariableCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__ValueStringAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getValueStringSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getAtomicExpressionAccess().getValueStringSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__ValueRealNumberAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getValueRealNumberRealNumberParserRuleCall_4_0()); }
	ruleRealNumber{ after(grammarAccess.getAtomicExpressionAccess().getValueRealNumberRealNumberParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmOperation__FileoperationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgorithmOperationAccess().getFileoperationFileOperationParserRuleCall_0_0()); }
	ruleFileOperation{ after(grammarAccess.getAlgorithmOperationAccess().getFileoperationFileOperationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmOperation__DiroperationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgorithmOperationAccess().getDiroperationDirOperationParserRuleCall_1_0()); }
	ruleDirOperation{ after(grammarAccess.getAlgorithmOperationAccess().getDiroperationDirOperationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmOperation__SimpleuiAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgorithmOperationAccess().getSimpleuiSimpleUIParserRuleCall_2_0()); }
	ruleSimpleUI{ after(grammarAccess.getAlgorithmOperationAccess().getSimpleuiSimpleUIParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmOperation__ModeloperationAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgorithmOperationAccess().getModeloperationModelOperationParserRuleCall_3_0()); }
	ruleModelOperation{ after(grammarAccess.getAlgorithmOperationAccess().getModeloperationModelOperationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmOperation__InstanceoperationAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgorithmOperationAccess().getInstanceoperationInstanceOperationParserRuleCall_4_0()); }
	ruleInstanceOperation{ after(grammarAccess.getAlgorithmOperationAccess().getInstanceoperationInstanceOperationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlgorithmOperation__AttributeoperationAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlgorithmOperationAccess().getAttributeoperationAttributeOperationParserRuleCall_5_0()); }
	ruleAttributeOperation{ after(grammarAccess.getAlgorithmOperationAccess().getAttributeoperationAttributeOperationParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FileOperation__FilecopyAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileOperationAccess().getFilecopyFileCopyParserRuleCall_2_0_0()); }
	ruleFileCopy{ after(grammarAccess.getFileOperationAccess().getFilecopyFileCopyParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FileOperation__FiledeleteAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileOperationAccess().getFiledeleteFileDeleteParserRuleCall_2_1_0()); }
	ruleFileDelete{ after(grammarAccess.getFileOperationAccess().getFiledeleteFileDeleteParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FileOperation__FilecreateAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileOperationAccess().getFilecreateFileCreateParserRuleCall_2_2_0()); }
	ruleFileCreate{ after(grammarAccess.getFileOperationAccess().getFilecreateFileCreateParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FileOperation__FilereadAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileOperationAccess().getFilereadFileReadParserRuleCall_2_3_0()); }
	ruleFileRead{ after(grammarAccess.getFileOperationAccess().getFilereadFileReadParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FileOperation__FilewriteAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileOperationAccess().getFilewriteFileWriteParserRuleCall_2_4_0()); }
	ruleFileWrite{ after(grammarAccess.getFileOperationAccess().getFilewriteFileWriteParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FileCopy__SrcAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileCopyAccess().getSrcSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getFileCopyAccess().getSrcSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FileCopy__DestAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileCopyAccess().getDestSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getFileCopyAccess().getDestSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FileDelete__FilenameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileDeleteAccess().getFilenameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getFileDeleteAccess().getFilenameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FileCreate__FilenameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileCreateAccess().getFilenameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getFileCreateAccess().getFilenameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FileRead__FilenameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileReadAccess().getFilenameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getFileReadAccess().getFilenameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FileWrite__FilenameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileWriteAccess().getFilenameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getFileWriteAccess().getFilenameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FileWrite__TextAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileWriteAccess().getTextSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getFileWriteAccess().getTextSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FileWrite__AppendAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileWriteAccess().getAppendAppendKeyword_4_0()); }
(
{ before(grammarAccess.getFileWriteAccess().getAppendAppendKeyword_4_0()); }

	'append' 

{ after(grammarAccess.getFileWriteAccess().getAppendAppendKeyword_4_0()); }
)

{ after(grammarAccess.getFileWriteAccess().getAppendAppendKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirOperation__DirsetworkingAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirOperationAccess().getDirsetworkingDirSetWorkingParserRuleCall_2_0_0()); }
	ruleDirSetWorking{ after(grammarAccess.getDirOperationAccess().getDirsetworkingDirSetWorkingParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirOperation__DirgetworkingAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirOperationAccess().getDirgetworkingDirGetWorkingParserRuleCall_2_1_0()); }
	ruleDirGetWorking{ after(grammarAccess.getDirOperationAccess().getDirgetworkingDirGetWorkingParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirOperation__DircreateAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirOperationAccess().getDircreateDirCreateParserRuleCall_2_2_0()); }
	ruleDirCreate{ after(grammarAccess.getDirOperationAccess().getDircreateDirCreateParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirOperation__DirdeleteAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirOperationAccess().getDirdeleteDirDeleteParserRuleCall_2_3_0()); }
	ruleDirDelete{ after(grammarAccess.getDirOperationAccess().getDirdeleteDirDeleteParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirOperation__DirlistAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirOperationAccess().getDirlistDirListParserRuleCall_2_4_0()); }
	ruleDirList{ after(grammarAccess.getDirOperationAccess().getDirlistDirListParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirSetWorking__DirnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirSetWorkingAccess().getDirnameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getDirSetWorkingAccess().getDirnameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirCreate__DirnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirCreateAccess().getDirnameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getDirCreateAccess().getDirnameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirDelete__DirnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirDeleteAccess().getDirnameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getDirDeleteAccess().getDirnameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DirList__DirnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirListAccess().getDirnameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getDirListAccess().getDirnameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleUI__EditboxAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleUIAccess().getEditboxEditBoxParserRuleCall_2_0_0()); }
	ruleEditBox{ after(grammarAccess.getSimpleUIAccess().getEditboxEditBoxParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleUI__InfoboxAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleUIAccess().getInfoboxInfoBoxParserRuleCall_2_1_0()); }
	ruleInfoBox{ after(grammarAccess.getSimpleUIAccess().getInfoboxInfoBoxParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleUI__ErrorboxAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleUIAccess().getErrorboxErrorBoxParserRuleCall_2_2_0()); }
	ruleErrorBox{ after(grammarAccess.getSimpleUIAccess().getErrorboxErrorBoxParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleUI__WarningboxAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleUIAccess().getWarningboxWarningBoxParserRuleCall_2_3_0()); }
	ruleWarningBox{ after(grammarAccess.getSimpleUIAccess().getWarningboxWarningBoxParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleUI__ViewboxAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleUIAccess().getViewboxViewBoxParserRuleCall_2_4_0()); }
	ruleViewBox{ after(grammarAccess.getSimpleUIAccess().getViewboxViewBoxParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleUI__ItemoperationAssignment_2_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleUIAccess().getItemoperationItemOperationParserRuleCall_2_5_0()); }
	ruleItemOperation{ after(grammarAccess.getSimpleUIAccess().getItemoperationItemOperationParserRuleCall_2_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EditBox__TitleAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEditBoxAccess().getTitleSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getEditBoxAccess().getTitleSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EditBox__TextAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEditBoxAccess().getTextSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getEditBoxAccess().getTextSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EditBox__OkbuttontextAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEditBoxAccess().getOkbuttontextSTRINGTerminalRuleCall_5_1_0()); }
	RULE_STRING{ after(grammarAccess.getEditBoxAccess().getOkbuttontextSTRINGTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InfoBox__TitleAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfoBoxAccess().getTitleSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getInfoBoxAccess().getTitleSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InfoBox__TextAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInfoBoxAccess().getTextSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getInfoBoxAccess().getTextSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorBox__TitleAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorBoxAccess().getTitleSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getErrorBoxAccess().getTitleSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorBox__TextAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorBoxAccess().getTextSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getErrorBoxAccess().getTextSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorBox__ButtontypeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getErrorBoxAccess().getButtontypeButtonTypeEnumRuleCall_6_0()); }
	ruleButtonType{ after(grammarAccess.getErrorBoxAccess().getButtontypeButtonTypeEnumRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WarningBox__TitleAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWarningBoxAccess().getTitleSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getWarningBoxAccess().getTitleSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WarningBox__TextAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWarningBoxAccess().getTextSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getWarningBoxAccess().getTextSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WarningBox__ButtontypeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWarningBoxAccess().getButtontypeButtonTypeEnumRuleCall_6_0()); }
	ruleButtonType{ after(grammarAccess.getWarningBoxAccess().getButtontypeButtonTypeEnumRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ViewBox__TitleAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewBoxAccess().getTitleSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getViewBoxAccess().getTitleSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ViewBox__TextAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewBoxAccess().getTextSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getViewBoxAccess().getTextSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ItemOperation__MenuitemAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemOperationAccess().getMenuitemMenuItemParserRuleCall_2_0_0()); }
	ruleMenuItem{ after(grammarAccess.getItemOperationAccess().getMenuitemMenuItemParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ItemOperation__ContextitemAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItemOperationAccess().getContextitemContextItemParserRuleCall_2_1_0()); }
	ruleContextItem{ after(grammarAccess.getItemOperationAccess().getContextitemContextItemParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MenuItem__InsertmenuitemAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMenuItemAccess().getInsertmenuitemInsertMenuItemParserRuleCall_2_0_0()); }
	ruleInsertMenuItem{ after(grammarAccess.getMenuItemAccess().getInsertmenuitemInsertMenuItemParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MenuItem__RemovemenuitemAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMenuItemAccess().getRemovemenuitemRemoveMenuItemParserRuleCall_2_1_0()); }
	ruleRemoveMenuItem{ after(grammarAccess.getMenuItemAccess().getRemovemenuitemRemoveMenuItemParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InsertMenuItem__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertMenuItemAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getInsertMenuItemAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InsertMenuItem__MenuAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertMenuItemAccess().getMenuValidIDParserRuleCall_3_0()); }
	ruleValidID{ after(grammarAccess.getInsertMenuItemAccess().getMenuValidIDParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveMenuItem__MenuitemnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoveMenuItemAccess().getMenuitemnameInsertMenuItemCrossReference_1_0()); }
(
{ before(grammarAccess.getRemoveMenuItemAccess().getMenuitemnameInsertMenuItemQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRemoveMenuItemAccess().getMenuitemnameInsertMenuItemQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRemoveMenuItemAccess().getMenuitemnameInsertMenuItemCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContextItem__InsertcontextitemAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextItemAccess().getInsertcontextitemInsertContextItemParserRuleCall_2_0_0()); }
	ruleInsertContextItem{ after(grammarAccess.getContextItemAccess().getInsertcontextitemInsertContextItemParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContextItem__RemovecontextitemAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextItemAccess().getRemovecontextitemRemoveContextItemParserRuleCall_2_1_0()); }
	ruleRemoveContextItem{ after(grammarAccess.getContextItemAccess().getRemovecontextitemRemoveContextItemParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InsertContextItem__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertContextItemAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getInsertContextItemAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InsertContextItem__ContextAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertContextItemAccess().getContextValidIDParserRuleCall_3_0()); }
	ruleValidID{ after(grammarAccess.getInsertContextItemAccess().getContextValidIDParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveContextItem__ContextitemAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRemoveContextItemAccess().getContextitemInsertContextItemCrossReference_1_0()); }
(
{ before(grammarAccess.getRemoveContextItemAccess().getContextitemInsertContextItemQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRemoveContextItemAccess().getContextitemInsertContextItemQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRemoveContextItemAccess().getContextitemInsertContextItemCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelOperation__ModelcreateAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelOperationAccess().getModelcreateModelCreateParserRuleCall_2_0_0()); }
	ruleModelCreate{ after(grammarAccess.getModelOperationAccess().getModelcreateModelCreateParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelOperation__ModeldeleteAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelOperationAccess().getModeldeleteModelDeleteParserRuleCall_2_1_0()); }
	ruleModelDelete{ after(grammarAccess.getModelOperationAccess().getModeldeleteModelDeleteParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelOperation__ModeldiscardAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelOperationAccess().getModeldiscardModelDiscardParserRuleCall_2_2_0()); }
	ruleModelDiscard{ after(grammarAccess.getModelOperationAccess().getModeldiscardModelDiscardParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelOperation__ModelsaveAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelOperationAccess().getModelsaveModelSaveParserRuleCall_2_3_0()); }
	ruleModelSave{ after(grammarAccess.getModelOperationAccess().getModelsaveModelSaveParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelOperation__ModelloadAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelOperationAccess().getModelloadModelLoadParserRuleCall_2_4_0()); }
	ruleModelLoad{ after(grammarAccess.getModelOperationAccess().getModelloadModelLoadParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelOperation__ModelisloadedAssignment_2_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelOperationAccess().getModelisloadedModelIsLoadedParserRuleCall_2_5_0()); }
	ruleModelIsLoaded{ after(grammarAccess.getModelOperationAccess().getModelisloadedModelIsLoadedParserRuleCall_2_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelCreate__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelCreateAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getModelCreateAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelCreate__ModeltypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelCreateAccess().getModeltypeModelTypeCrossReference_2_0()); }
(
{ before(grammarAccess.getModelCreateAccess().getModeltypeModelTypeIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getModelCreateAccess().getModeltypeModelTypeIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getModelCreateAccess().getModeltypeModelTypeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDelete__ModelnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelDeleteAccess().getModelnameModelCreateCrossReference_1_0()); }
(
{ before(grammarAccess.getModelDeleteAccess().getModelnameModelCreateQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getModelDeleteAccess().getModelnameModelCreateQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getModelDeleteAccess().getModelnameModelCreateCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelDiscard__ModelnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelDiscardAccess().getModelnameModelCreateCrossReference_1_0()); }
(
{ before(grammarAccess.getModelDiscardAccess().getModelnameModelCreateQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getModelDiscardAccess().getModelnameModelCreateQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getModelDiscardAccess().getModelnameModelCreateCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelSave__ModelnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelSaveAccess().getModelnameModelCreateCrossReference_1_0()); }
(
{ before(grammarAccess.getModelSaveAccess().getModelnameModelCreateQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getModelSaveAccess().getModelnameModelCreateQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getModelSaveAccess().getModelnameModelCreateCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelLoad__ModelnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelLoadAccess().getModelnameModelCreateCrossReference_1_0()); }
(
{ before(grammarAccess.getModelLoadAccess().getModelnameModelCreateQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getModelLoadAccess().getModelnameModelCreateQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getModelLoadAccess().getModelnameModelCreateCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelIsLoaded__ModelnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelIsLoadedAccess().getModelnameModelCreateCrossReference_1_0()); }
(
{ before(grammarAccess.getModelIsLoadedAccess().getModelnameModelCreateQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getModelIsLoadedAccess().getModelnameModelCreateQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getModelIsLoadedAccess().getModelnameModelCreateCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOperation__ClassinstanceAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOperationAccess().getClassinstanceClassInstanceParserRuleCall_2_0_0()); }
	ruleClassInstance{ after(grammarAccess.getInstanceOperationAccess().getClassinstanceClassInstanceParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOperation__RelationinstanceAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOperationAccess().getRelationinstanceRelationInstanceParserRuleCall_2_1_0()); }
	ruleRelationInstance{ after(grammarAccess.getInstanceOperationAccess().getRelationinstanceRelationInstanceParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstance__ClassinstancecreateAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceAccess().getClassinstancecreateClassInstanceCreateParserRuleCall_2_0_0()); }
	ruleClassInstanceCreate{ after(grammarAccess.getClassInstanceAccess().getClassinstancecreateClassInstanceCreateParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstance__ClassinstancedeleteAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceAccess().getClassinstancedeleteClassInstanceDeleteParserRuleCall_2_1_0()); }
	ruleClassInstanceDelete{ after(grammarAccess.getClassInstanceAccess().getClassinstancedeleteClassInstanceDeleteParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstance__ClassinstancegetAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceAccess().getClassinstancegetClassInstanceGetParserRuleCall_2_2_0()); }
	ruleClassInstanceGet{ after(grammarAccess.getClassInstanceAccess().getClassinstancegetClassInstanceGetParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstance__ClassinstancesetAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceAccess().getClassinstancesetClassInstanceSetParserRuleCall_2_3_0()); }
	ruleClassInstanceSet{ after(grammarAccess.getClassInstanceAccess().getClassinstancesetClassInstanceSetParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstance__ClassinstancegetallAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceAccess().getClassinstancegetallClassInstanceGetAllParserRuleCall_2_4_0()); }
	ruleClassInstanceGetAll{ after(grammarAccess.getClassInstanceAccess().getClassinstancegetallClassInstanceGetAllParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreate__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceCreateAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getClassInstanceCreateAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreate__NameofclassAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceCreateAccess().getNameofclassClassCrossReference_2_0()); }
(
{ before(grammarAccess.getClassInstanceCreateAccess().getNameofclassClassQualifiedNameParserRuleCall_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getClassInstanceCreateAccess().getNameofclassClassQualifiedNameParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getClassInstanceCreateAccess().getNameofclassClassCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceDelete__NameofclassinstanceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceDeleteAccess().getNameofclassinstanceClassInstanceCreateCrossReference_1_0()); }
(
{ before(grammarAccess.getClassInstanceDeleteAccess().getNameofclassinstanceClassInstanceCreateQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getClassInstanceDeleteAccess().getNameofclassinstanceClassInstanceCreateQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getClassInstanceDeleteAccess().getNameofclassinstanceClassInstanceCreateCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceGet__NameofclassinstanceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceGetAccess().getNameofclassinstanceClassInstanceCreateCrossReference_1_0()); }
(
{ before(grammarAccess.getClassInstanceGetAccess().getNameofclassinstanceClassInstanceCreateQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getClassInstanceGetAccess().getNameofclassinstanceClassInstanceCreateQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getClassInstanceGetAccess().getNameofclassinstanceClassInstanceCreateCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceGetAll__NameofclassAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceGetAllAccess().getNameofclassClassCrossReference_1_0()); }
(
{ before(grammarAccess.getClassInstanceGetAllAccess().getNameofclassClassQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getClassInstanceGetAllAccess().getNameofclassClassQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getClassInstanceGetAllAccess().getNameofclassClassCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceSet__NameofclassinstanceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassInstanceSetAccess().getNameofclassinstanceClassInstanceCreateCrossReference_1_0()); }
(
{ before(grammarAccess.getClassInstanceSetAccess().getNameofclassinstanceClassInstanceCreateQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getClassInstanceSetAccess().getNameofclassinstanceClassInstanceCreateQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getClassInstanceSetAccess().getNameofclassinstanceClassInstanceCreateCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstance__RelationinstancecreateAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceAccess().getRelationinstancecreateRelationInstanceCreateParserRuleCall_2_0_0()); }
	ruleRelationInstanceCreate{ after(grammarAccess.getRelationInstanceAccess().getRelationinstancecreateRelationInstanceCreateParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstance__RelationinstancedeleteAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceAccess().getRelationinstancedeleteRelationInstanceDeleteParserRuleCall_2_1_0()); }
	ruleRelationInstanceDelete{ after(grammarAccess.getRelationInstanceAccess().getRelationinstancedeleteRelationInstanceDeleteParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstance__RelationinstancegetAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceAccess().getRelationinstancegetRelationInstanceGetParserRuleCall_2_2_0()); }
	ruleRelationInstanceGet{ after(grammarAccess.getRelationInstanceAccess().getRelationinstancegetRelationInstanceGetParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstance__RelationinstancesetAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceAccess().getRelationinstancesetRelationInstanceSetParserRuleCall_2_3_0()); }
	ruleRelationInstanceSet{ after(grammarAccess.getRelationInstanceAccess().getRelationinstancesetRelationInstanceSetParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstance__RelationinstancegetallAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceAccess().getRelationinstancegetallRelationInstanceGetAllParserRuleCall_2_4_0()); }
	ruleRelationInstanceGetAll{ after(grammarAccess.getRelationInstanceAccess().getRelationinstancegetallRelationInstanceGetAllParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstanceCreate__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceCreateAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getRelationInstanceCreateAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstanceCreate__NameofrelationAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceCreateAccess().getNameofrelationRelationCrossReference_2_0()); }
(
{ before(grammarAccess.getRelationInstanceCreateAccess().getNameofrelationRelationQualifiedNameParserRuleCall_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRelationInstanceCreateAccess().getNameofrelationRelationQualifiedNameParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getRelationInstanceCreateAccess().getNameofrelationRelationCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstanceCreate__ClassinstancefromAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceCreateAccess().getClassinstancefromClassInstanceCreateCrossReference_4_0()); }
(
{ before(grammarAccess.getRelationInstanceCreateAccess().getClassinstancefromClassInstanceCreateQualifiedNameParserRuleCall_4_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRelationInstanceCreateAccess().getClassinstancefromClassInstanceCreateQualifiedNameParserRuleCall_4_0_1()); }
)
{ after(grammarAccess.getRelationInstanceCreateAccess().getClassinstancefromClassInstanceCreateCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstanceCreate__ClassinstancetoAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceCreateAccess().getClassinstancetoClassInstanceCreateCrossReference_6_0()); }
(
{ before(grammarAccess.getRelationInstanceCreateAccess().getClassinstancetoClassInstanceCreateQualifiedNameParserRuleCall_6_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRelationInstanceCreateAccess().getClassinstancetoClassInstanceCreateQualifiedNameParserRuleCall_6_0_1()); }
)
{ after(grammarAccess.getRelationInstanceCreateAccess().getClassinstancetoClassInstanceCreateCrossReference_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstanceDelete__NameofrelationinstanceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceDeleteAccess().getNameofrelationinstanceRelationInstanceCreateCrossReference_1_0()); }
(
{ before(grammarAccess.getRelationInstanceDeleteAccess().getNameofrelationinstanceRelationInstanceCreateQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRelationInstanceDeleteAccess().getNameofrelationinstanceRelationInstanceCreateQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRelationInstanceDeleteAccess().getNameofrelationinstanceRelationInstanceCreateCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstanceGet__NameofrelationinstanceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceGetAccess().getNameofrelationinstanceRelationInstanceCreateCrossReference_1_0()); }
(
{ before(grammarAccess.getRelationInstanceGetAccess().getNameofrelationinstanceRelationInstanceCreateQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRelationInstanceGetAccess().getNameofrelationinstanceRelationInstanceCreateQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRelationInstanceGetAccess().getNameofrelationinstanceRelationInstanceCreateCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstanceGetAll__NameofrelationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceGetAllAccess().getNameofrelationRelationCrossReference_1_0()); }
(
{ before(grammarAccess.getRelationInstanceGetAllAccess().getNameofrelationRelationQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRelationInstanceGetAllAccess().getNameofrelationRelationQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRelationInstanceGetAllAccess().getNameofrelationRelationCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationInstanceSet__NameofrelationinstanceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationInstanceSetAccess().getNameofrelationinstanceRelationInstanceCreateCrossReference_1_0()); }
(
{ before(grammarAccess.getRelationInstanceSetAccess().getNameofrelationinstanceRelationInstanceCreateQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRelationInstanceSetAccess().getNameofrelationinstanceRelationInstanceCreateQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRelationInstanceSetAccess().getNameofrelationinstanceRelationInstanceCreateCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeOperation__AttributenameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeOperationAccess().getAttributenameAttributeCrossReference_0_0()); }
(
{ before(grammarAccess.getAttributeOperationAccess().getAttributenameAttributeQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getAttributeOperationAccess().getAttributenameAttributeQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAttributeOperationAccess().getAttributenameAttributeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeOperation__AttributegetAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeOperationAccess().getAttributegetAttributeGetParserRuleCall_2_0_0()); }
	ruleAttributeGet{ after(grammarAccess.getAttributeOperationAccess().getAttributegetAttributeGetParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeOperation__AttributesetAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeOperationAccess().getAttributesetAttributeSetParserRuleCall_2_1_0()); }
	ruleAttributeSet{ after(grammarAccess.getAttributeOperationAccess().getAttributesetAttributeSetParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeGet__AttrgetparamsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeGetAccess().getAttrgetparamsAttrGetParamsEnumRuleCall_2_0()); }
	ruleAttrGetParams{ after(grammarAccess.getAttributeGetAccess().getAttrgetparamsAttrGetParamsEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSet__AttrsetparamsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSetAccess().getAttrsetparamsAttrSetParamsEnumRuleCall_2_0()); }
	ruleAttrSetParams{ after(grammarAccess.getAttributeSetAccess().getAttrsetparamsAttrSetParamsEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSet__ValueStringAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSetAccess().getValueStringSTRINGTerminalRuleCall_3_0_0()); }
	RULE_STRING{ after(grammarAccess.getAttributeSetAccess().getValueStringSTRINGTerminalRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSet__ValueRealNumberAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSetAccess().getValueRealNumberRealNumberParserRuleCall_3_1_0()); }
	ruleRealNumber{ after(grammarAccess.getAttributeSetAccess().getValueRealNumberRealNumberParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSet__ValueVariableAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSetAccess().getValueVariableVariableCrossReference_3_2_0()); }
(
{ before(grammarAccess.getAttributeSetAccess().getValueVariableVariableQualifiedNameParserRuleCall_3_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getAttributeSetAccess().getValueVariableVariableQualifiedNameParserRuleCall_3_2_0_1()); }
)
{ after(grammarAccess.getAttributeSetAccess().getValueVariableVariableCrossReference_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getNameEventNameEnumRuleCall_2_0()); }
	ruleEventName{ after(grammarAccess.getEventAccess().getNameEventNameEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__AlgorithmnameAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getAlgorithmnameAlgorithmCrossReference_6_0()); }
(
{ before(grammarAccess.getEventAccess().getAlgorithmnameAlgorithmQualifiedNameParserRuleCall_6_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getEventAccess().getAlgorithmnameAlgorithmQualifiedNameParserRuleCall_6_0_1()); }
)
{ after(grammarAccess.getEventAccess().getAlgorithmnameAlgorithmCrossReference_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__FeatureAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); }
(
{ before(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementFeatureCallIDParserRuleCall_0_1_0_1()); }
	ruleFeatureCallID{ after(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementFeatureCallIDParserRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__ValueAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0()); }
	ruleXAssignment{ after(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__FeatureAssignment_1_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); }
(
{ before(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementOpMultiAssignParserRuleCall_1_1_0_0_1_0_1()); }
	ruleOpMultiAssign{ after(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementOpMultiAssignParserRuleCall_1_1_0_0_1_0_1()); }
)
{ after(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__RightOperandAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0()); }
	ruleXAssignment{ after(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
(
{ before(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementOpOrParserRuleCall_1_0_0_1_0_1()); }
	ruleOpOr{ after(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementOpOrParserRuleCall_1_0_0_1_0_1()); }
)
{ after(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0()); }
	ruleXAndExpression{ after(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
(
{ before(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementOpAndParserRuleCall_1_0_0_1_0_1()); }
	ruleOpAnd{ after(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementOpAndParserRuleCall_1_0_0_1_0_1()); }
)
{ after(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0()); }
	ruleXEqualityExpression{ after(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
(
{ before(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementOpEqualityParserRuleCall_1_0_0_1_0_1()); }
	ruleOpEquality{ after(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementOpEqualityParserRuleCall_1_0_0_1_0_1()); }
)
{ after(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0()); }
	ruleXRelationalExpression{ after(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__TypeAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__FeatureAssignment_1_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); }
(
{ before(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementOpCompareParserRuleCall_1_1_0_0_1_0_1()); }
	ruleOpCompare{ after(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementOpCompareParserRuleCall_1_1_0_0_1_0_1()); }
)
{ after(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__RightOperandAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0()); }
	ruleXOtherOperatorExpression{ after(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementOpOtherParserRuleCall_1_0_0_1_0_1()); }
	ruleOpOther{ after(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementOpOtherParserRuleCall_1_0_0_1_0_1()); }
)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0()); }
	ruleXAdditiveExpression{ after(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementOpAddParserRuleCall_1_0_0_1_0_1()); }
	ruleOpAdd{ after(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementOpAddParserRuleCall_1_0_0_1_0_1()); }
)
{ after(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0()); }
	ruleXMultiplicativeExpression{ after(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementOpMultiParserRuleCall_1_0_0_1_0_1()); }
	ruleOpMulti{ after(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementOpMultiParserRuleCall_1_0_0_1_0_1()); }
)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0()); }
	ruleXUnaryOperation{ after(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__FeatureAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); }
(
{ before(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementOpUnaryParserRuleCall_0_1_0_1()); }
	ruleOpUnary{ after(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementOpUnaryParserRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__OperandAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0()); }
	ruleXUnaryOperation{ after(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCastedExpression__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__ExplicitStaticAssignment_1_0_0_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0()); }
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0()); }

	'::' 

{ after(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0()); }
)

{ after(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__FeatureAssignment_1_0_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0()); }
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementFeatureCallIDParserRuleCall_1_0_0_0_2_0_1()); }
	ruleFeatureCallID{ after(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementFeatureCallIDParserRuleCall_1_0_0_0_2_0_1()); }
)
{ after(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__ValueAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0()); }
	ruleXAssignment{ after(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__NullSafeAssignment_1_1_0_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0()); }
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0()); }

	'?.' 

{ after(grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0()); }
)

{ after(grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__ExplicitStaticAssignment_1_1_0_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0()); }
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0()); }

	'::' 

{ after(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0()); }
)

{ after(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__TypeArgumentsAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__TypeArgumentsAssignment_1_1_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__FeatureAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0()); }
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementFeatureCallIDParserRuleCall_1_1_2_0_1()); }
	ruleFeatureCallID{ after(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementFeatureCallIDParserRuleCall_1_1_2_0_1()); }
)
{ after(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__ExplicitOperationCallAssignment_1_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0()); }
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0()); }

	'(' 

{ after(grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0()); }
)

{ after(grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0()); }
	ruleXShortClosure{ after(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0()); }
	ruleXExpression{ after(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0()); }
	ruleXClosure{ after(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__ElementsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); }
	ruleXExpression{ after(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__ElementsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__ElementsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); }
	ruleXExpression{ after(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__ElementsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__DeclaredFormalParametersAssignment_1_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0()); }
	ruleJvmFormalParameter{ after(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__DeclaredFormalParametersAssignment_1_0_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0()); }
	ruleJvmFormalParameter{ after(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__ExplicitSyntaxAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0()); }
(
{ before(grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0()); }

	'|' 

{ after(grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0()); }
)

{ after(grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0()); }
	ruleXExpressionInClosure{ after(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionInClosure__ExpressionsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionInsideBlockParserRuleCall_1_0_0()); }
	ruleXExpressionInsideBlock{ after(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionInsideBlockParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__DeclaredFormalParametersAssignment_0_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0()); }
	ruleJvmFormalParameter{ after(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__DeclaredFormalParametersAssignment_0_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0()); }
	ruleJvmFormalParameter{ after(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__ExplicitSyntaxAssignment_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0()); }
(
{ before(grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0()); }

	'|' 

{ after(grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0()); }
)

{ after(grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0()); }
	ruleXExpression{ after(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__IfAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0()); }
	ruleXExpression{ after(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__ThenAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0()); }
	ruleXExpression{ after(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__ElseAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0()); }
	ruleXExpression{ after(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__LocalVarNameAssignment_2_0_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameValidIDParserRuleCall_2_0_0_0_0_0()); }
	ruleValidID{ after(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameValidIDParserRuleCall_2_0_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__SwitchAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0()); }
	ruleXExpression{ after(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__LocalVarNameAssignment_2_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameValidIDParserRuleCall_2_1_0_0_1_0()); }
	ruleValidID{ after(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameValidIDParserRuleCall_2_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__SwitchAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__CasesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0()); }
	ruleXCasePart{ after(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__DefaultAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0()); }
	ruleXExpression{ after(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__TypeGuardAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_0_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__CaseAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__ThenAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0()); }
	ruleXExpression{ after(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__DeclaredParamAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_3_0()); }
	ruleJvmFormalParameter{ after(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__ForExpressionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_5_0()); }
	ruleXExpression{ after(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__EachExpressionAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_7_0()); }
	ruleXExpression{ after(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__PredicateAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0()); }
	ruleXExpression{ after(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__BodyAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0()); }
	ruleXExpression{ after(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__BodyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0()); }
	ruleXExpression{ after(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__PredicateAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0()); }
	ruleXExpression{ after(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XBlockExpression__ExpressionsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionInsideBlockParserRuleCall_2_0_0()); }
	ruleXExpressionInsideBlock{ after(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionInsideBlockParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__WriteableAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0()); }
(
{ before(grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0()); }

	'var' 

{ after(grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0()); }
)

{ after(grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__TypeAssignment_2_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__NameAssignment_2_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0()); }
	ruleValidID{ after(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__NameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0()); }
	ruleValidID{ after(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__RightAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0()); }
	ruleXExpression{ after(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmFormalParameter__ParameterTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmFormalParameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FullJvmFormalParameter__ParameterTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FullJvmFormalParameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__TypeArgumentsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__TypeArgumentsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__FeatureAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_2_0()); }
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementIdOrSuperParserRuleCall_2_0_1()); }
	ruleIdOrSuper{ after(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementIdOrSuperParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__ExplicitOperationCallAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0()); }
(
{ before(grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0()); }

	'(' 

{ after(grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0()); }
)

{ after(grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__FeatureCallArgumentsAssignment_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0()); }
	ruleXShortClosure{ after(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__FeatureCallArgumentsAssignment_3_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0()); }
	ruleXExpression{ after(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__FeatureCallArgumentsAssignment_3_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__FeatureCallArgumentsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_4_0()); }
	ruleXClosure{ after(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__ConstructorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0()); }
(
{ before(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorQualifiedNameParserRuleCall_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorQualifiedNameParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__TypeArgumentsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__TypeArgumentsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__ArgumentsAssignment_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0()); }
	ruleXShortClosure{ after(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__ArgumentsAssignment_4_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0()); }
	ruleXExpression{ after(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__ArgumentsAssignment_4_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__ArgumentsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0()); }
	ruleXClosure{ after(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XBooleanLiteral__IsTrueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
(
{ before(grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }

	'true' 

{ after(grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
)

{ after(grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XNumberLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); }
	ruleNumber{ after(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XStringLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0()); }
(
{ before(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeQualifiedNameParserRuleCall_3_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeQualifiedNameParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__ArrayDimensionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0()); }
	ruleArrayBrackets{ after(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XThrowExpression__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); }
	ruleXExpression{ after(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XReturnExpression__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); }
	ruleXExpression{ after(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); }
	ruleXExpression{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__CatchClausesAssignment_3_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0()); }
	ruleXCatchClause{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__FinallyExpressionAssignment_3_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__FinallyExpressionAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCatchClause__DeclaredParamAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0()); }
	ruleFullJvmFormalParameter{ after(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCatchClause__ExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0()); }
	ruleXExpression{ after(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__ParamTypesAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__ParamTypesAssignment_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__ReturnTypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0()); }
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__ConstraintsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0()); }
	ruleJvmUpperBound{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__ConstraintsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0()); }
	ruleJvmLowerBound{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBound__TypeReferenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBoundAnded__TypeReferenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBound__TypeReferenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XImportDeclaration__StaticAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0()); }
(
{ before(grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0()); }

	'static' 

{ after(grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0()); }
)

{ after(grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__ExtensionAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0()); }
(
{ before(grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0()); }

	'extension' 

{ after(grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0()); }
)

{ after(grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__ImportedTypeAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0()); }
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeQualifiedNameParserRuleCall_1_0_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeQualifiedNameParserRuleCall_1_0_2_0_1()); }
)
{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__ImportedTypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0()); }
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeQualifiedNameParserRuleCall_1_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeQualifiedNameParserRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__ImportedNamespaceAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0()); }
	ruleQualifiedNameWithWildcard{ after(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_HEXCOLOR : '#' ('a'..'f'|'A'..'F'|'0'..'9') ('a'..'f'|'A'..'F'|'0'..'9') ('a'..'f'|'A'..'F'|'0'..'9') ('a'..'f'|'A'..'F'|'0'..'9') ('a'..'f'|'A'..'F'|'0'..'9') ('a'..'f'|'A'..'F'|'0'..'9');

RULE_HEX : ('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F'|'_')+ ('#' (('b'|'B') ('i'|'I')|('l'|'L')))?;

RULE_INT : '0'..'9' ('0'..'9'|'_')*;

RULE_DECIMAL : RULE_INT (('e'|'E') ('+'|'-')? RULE_INT)? (('b'|'B') ('i'|'I'|'d'|'D')|('l'|'L'|'d'|'D'|'f'|'F'))?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'$'|'_') ('a'..'z'|'A'..'Z'|'$'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


