/*
* generated by Xtext
*/
grammar InternalMMDSL;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.nv.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.nv.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.nv.dsl.services.MMDSLGrammarAccess;

}

@parser::members {

 	private MMDSLGrammarAccess grammarAccess;
 	
    public InternalMMDSLParser(TokenStream input, MMDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Root";	
   	}
   	
   	@Override
   	protected MMDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleRoot
entryRuleRoot returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRootRule()); }
	 iv_ruleRoot=ruleRoot 
	 { $current=$iv_ruleRoot.current; } 
	 EOF 
;

// Rule Root
ruleRoot returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getRootAccess().getMethodnameMethodNameParserRuleCall_0_0()); 
	    }
		lv_methodname_0_0=ruleMethodName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRootRule());
	        }
       		set(
       			$current, 
       			"methodname",
        		lv_methodname_0_0, 
        		"MethodName");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getRootAccess().getIncludelibrarytypeIncludeLibraryTypeParserRuleCall_1_0_0()); 
	    }
		lv_includelibrarytype_1_0=ruleIncludeLibraryType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRootRule());
	        }
       		add(
       			$current, 
       			"includelibrarytype",
        		lv_includelibrarytype_1_0, 
        		"IncludeLibraryType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getRootAccess().getEmbedplatformtypeEmbedPlatformTypeParserRuleCall_1_1_0()); 
	    }
		lv_embedplatformtype_2_0=ruleEmbedPlatformType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRootRule());
	        }
       		add(
       			$current, 
       			"embedplatformtype",
        		lv_embedplatformtype_2_0, 
        		"EmbedPlatformType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getRootAccess().getEmbedcodetypeEmbedCodeTypeParserRuleCall_1_2_0()); 
	    }
		lv_embedcodetype_3_0=ruleEmbedCodeType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRootRule());
	        }
       		add(
       			$current, 
       			"embedcodetype",
        		lv_embedcodetype_3_0, 
        		"EmbedCodeType");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
(
		{ 
	        newCompositeNode(grammarAccess.getRootAccess().getIncludelibraryIncludeLibraryParserRuleCall_2_0()); 
	    }
		lv_includelibrary_4_0=ruleIncludeLibrary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRootRule());
	        }
       		add(
       			$current, 
       			"includelibrary",
        		lv_includelibrary_4_0, 
        		"IncludeLibrary");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRootAccess().getEmbedcodeEmbedCodeParserRuleCall_3_0()); 
	    }
		lv_embedcode_5_0=ruleEmbedCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRootRule());
	        }
       		add(
       			$current, 
       			"embedcode",
        		lv_embedcode_5_0, 
        		"EmbedCode");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRootAccess().getMethodMethodParserRuleCall_4_0()); 
	    }
		lv_method_6_0=ruleMethod		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRootRule());
	        }
       		set(
       			$current, 
       			"method",
        		lv_method_6_0, 
        		"Method");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMethodName
entryRuleMethodName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodNameRule()); }
	 iv_ruleMethodName=ruleMethodName 
	 { $current=$iv_ruleMethodName.current; } 
	 EOF 
;

// Rule MethodName
ruleMethodName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='method' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMethodNameAccess().getMethodKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodNameAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodNameRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIncludeLibrary
entryRuleIncludeLibrary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIncludeLibraryRule()); }
	 iv_ruleIncludeLibrary=ruleIncludeLibrary 
	 { $current=$iv_ruleIncludeLibrary.current; } 
	 EOF 
;

// Rule IncludeLibrary
ruleIncludeLibrary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='include' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIncludeLibraryAccess().getIncludeKeyword_0());
    }
	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIncludeLibraryAccess().getLessThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIncludeLibraryAccess().getNameValidIDParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIncludeLibraryRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIncludeLibraryAccess().getColonKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIncludeLibraryRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIncludeLibraryAccess().getIncludelibrarytypeIncludeLibraryTypeCrossReference_3_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIncludeLibraryAccess().getGreaterThanSignKeyword_4());
    }
)
;





// Entry rule entryRuleIncludeLibraryType
entryRuleIncludeLibraryType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIncludeLibraryTypeRule()); }
	 iv_ruleIncludeLibraryType=ruleIncludeLibraryType 
	 { $current=$iv_ruleIncludeLibraryType.current; } 
	 EOF 
;

// Rule IncludeLibraryType
ruleIncludeLibraryType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='def' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIncludeLibraryTypeAccess().getDefKeyword_0());
    }
	otherlv_1='IncludeLibraryType' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIncludeLibraryTypeAccess().getIncludeLibraryTypeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIncludeLibraryTypeAccess().getNameValidIDParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIncludeLibraryTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEmbedCode
entryRuleEmbedCode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEmbedCodeRule()); }
	 iv_ruleEmbedCode=ruleEmbedCode 
	 { $current=$iv_ruleEmbedCode.current; } 
	 EOF 
;

// Rule EmbedCode
ruleEmbedCode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='embed' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEmbedCodeAccess().getEmbedKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEmbedCodeAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmbedCodeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEmbedCodeAccess().getLessThanSignKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEmbedCodeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getEmbedCodeAccess().getEmbedplatformtypeEmbedPlatformTypeCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEmbedCodeAccess().getColonKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEmbedCodeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getEmbedCodeAccess().getEmbedcodetypeEmbedCodeTypeCrossReference_4_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEmbedCodeAccess().getGreaterThanSignKeyword_5());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEmbedCodeAccess().getLeftCurlyBracketKeyword_6());
    }
(
(
		lv_embeddedcode_8_0=RULE_STRING
		{
			newLeafNode(lv_embeddedcode_8_0, grammarAccess.getEmbedCodeAccess().getEmbeddedcodeSTRINGTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEmbedCodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"embeddedcode",
        		lv_embeddedcode_8_0, 
        		"STRING");
	    }

)
)	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getEmbedCodeAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleEmbedPlatformType
entryRuleEmbedPlatformType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEmbedPlatformTypeRule()); }
	 iv_ruleEmbedPlatformType=ruleEmbedPlatformType 
	 { $current=$iv_ruleEmbedPlatformType.current; } 
	 EOF 
;

// Rule EmbedPlatformType
ruleEmbedPlatformType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='def' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEmbedPlatformTypeAccess().getDefKeyword_0());
    }
	otherlv_1='EmbedPlatformType' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEmbedPlatformTypeAccess().getEmbedPlatformTypeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEmbedPlatformTypeAccess().getNameValidIDParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmbedPlatformTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEmbedCodeType
entryRuleEmbedCodeType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEmbedCodeTypeRule()); }
	 iv_ruleEmbedCodeType=ruleEmbedCodeType 
	 { $current=$iv_ruleEmbedCodeType.current; } 
	 EOF 
;

// Rule EmbedCodeType
ruleEmbedCodeType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='def' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEmbedCodeTypeAccess().getDefKeyword_0());
    }
	otherlv_1='EmbedCodeType' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEmbedCodeTypeAccess().getEmbedCodeTypeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEmbedCodeTypeAccess().getNameValidIDParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmbedCodeTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInsertEmbedCode
entryRuleInsertEmbedCode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInsertEmbedCodeRule()); }
	 iv_ruleInsertEmbedCode=ruleInsertEmbedCode 
	 { $current=$iv_ruleInsertEmbedCode.current; } 
	 EOF 
;

// Rule InsertEmbedCode
ruleInsertEmbedCode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='insert' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInsertEmbedCodeAccess().getInsertKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInsertEmbedCodeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getInsertEmbedCodeAccess().getCodesnippetnameEmbedCodeCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMethod
entryRuleMethod returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodRule()); }
	 iv_ruleMethod=ruleMethod 
	 { $current=$iv_ruleMethod.current; } 
	 EOF 
;

// Rule Method
ruleMethod returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMethodAccess().getEnumerationEnumerationParserRuleCall_0_0()); 
	    }
		lv_enumeration_0_0=ruleEnumeration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodRule());
	        }
       		add(
       			$current, 
       			"enumeration",
        		lv_enumeration_0_0, 
        		"Enumeration");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodAccess().getSymbolstyleSymbolStyleParserRuleCall_1_0()); 
	    }
		lv_symbolstyle_1_0=ruleSymbolStyle		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodRule());
	        }
       		add(
       			$current, 
       			"symbolstyle",
        		lv_symbolstyle_1_0, 
        		"SymbolStyle");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodAccess().getSymbolclassSymbolClassParserRuleCall_2_0()); 
	    }
		lv_symbolclass_2_0=ruleSymbolClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodRule());
	        }
       		add(
       			$current, 
       			"symbolclass",
        		lv_symbolclass_2_0, 
        		"SymbolClass");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodAccess().getSymbolrelationSymbolRelationParserRuleCall_3_0()); 
	    }
		lv_symbolrelation_3_0=ruleSymbolRelation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodRule());
	        }
       		add(
       			$current, 
       			"symbolrelation",
        		lv_symbolrelation_3_0, 
        		"SymbolRelation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodAccess().getMetamodelMetamodelParserRuleCall_4_0()); 
	    }
		lv_metamodel_4_0=ruleMetamodel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodRule());
	        }
       		set(
       			$current, 
       			"metamodel",
        		lv_metamodel_4_0, 
        		"Metamodel");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodAccess().getAlgorithmAlgorithmParserRuleCall_5_0()); 
	    }
		lv_algorithm_5_0=ruleAlgorithm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodRule());
	        }
       		add(
       			$current, 
       			"algorithm",
        		lv_algorithm_5_0, 
        		"Algorithm");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodAccess().getEventEventParserRuleCall_6_0()); 
	    }
		lv_event_6_0=ruleEvent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodRule());
	        }
       		add(
       			$current, 
       			"event",
        		lv_event_6_0, 
        		"Event");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleEnumeration
entryRuleEnumeration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumerationRule()); }
	 iv_ruleEnumeration=ruleEnumeration 
	 { $current=$iv_ruleEnumeration.current; } 
	 EOF 
;

// Rule Enumeration
ruleEnumeration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='enum' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnumerationAccess().getEnumKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumerationAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumerationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumerationAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		lv_enumvalues_3_0=RULE_STRING
		{
			newLeafNode(lv_enumvalues_3_0, grammarAccess.getEnumerationAccess().getEnumvaluesSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumerationRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"enumvalues",
        		lv_enumvalues_3_0, 
        		"STRING");
	    }

)
)+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEnumerationAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleMetamodel
entryRuleMetamodel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetamodelRule()); }
	 iv_ruleMetamodel=ruleMetamodel 
	 { $current=$iv_ruleMetamodel.current; } 
	 EOF 
;

// Rule Metamodel
ruleMetamodel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMetamodelAccess().getClassClassParserRuleCall_0_0()); 
	    }
		lv_class_0_0=ruleClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetamodelRule());
	        }
       		add(
       			$current, 
       			"class",
        		lv_class_0_0, 
        		"Class");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getMetamodelAccess().getRelationRelationParserRuleCall_1_0()); 
	    }
		lv_relation_1_0=ruleRelation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetamodelRule());
	        }
       		add(
       			$current, 
       			"relation",
        		lv_relation_1_0, 
        		"Relation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMetamodelAccess().getAttributeAttributeParserRuleCall_2_0()); 
	    }
		lv_attribute_2_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetamodelRule());
	        }
       		add(
       			$current, 
       			"attribute",
        		lv_attribute_2_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMetamodelAccess().getModeltypeModelTypeParserRuleCall_3_0()); 
	    }
		lv_modeltype_3_0=ruleModelType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetamodelRule());
	        }
       		add(
       			$current, 
       			"modeltype",
        		lv_modeltype_3_0, 
        		"ModelType");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleClass
entryRuleClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassRule()); }
	 iv_ruleClass=ruleClass 
	 { $current=$iv_ruleClass.current; } 
	 EOF 
;

// Rule Class
ruleClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='class' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClassAccess().getClassKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='extends' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getClassAccess().getExtendsKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getClassAccess().getParentclassnameClassCrossReference_2_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_4='symbol' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getClassAccess().getSymbolKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getClassAccess().getSymbolclassSymbolClassCrossReference_3_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getClassAccess().getClassattributeClassAttributeParserRuleCall_5_0_0()); 
	    }
		lv_classattribute_7_0=ruleClassAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassRule());
	        }
       		add(
       			$current, 
       			"classattribute",
        		lv_classattribute_7_0, 
        		"ClassAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getClassAccess().getAttributeAttributeParserRuleCall_5_1_0()); 
	    }
		lv_attribute_8_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassRule());
	        }
       		add(
       			$current, 
       			"attribute",
        		lv_attribute_8_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getClassAccess().getInsertembedcodeInsertEmbedCodeParserRuleCall_5_2_0()); 
	    }
		lv_insertembedcode_9_0=ruleInsertEmbedCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassRule());
	        }
       		add(
       			$current, 
       			"insertembedcode",
        		lv_insertembedcode_9_0, 
        		"InsertEmbedCode");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getClassAccess().getReferenceReferenceParserRuleCall_5_3_0()); 
	    }
		lv_reference_10_0=ruleReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassRule());
	        }
       		add(
       			$current, 
       			"reference",
        		lv_reference_10_0, 
        		"Reference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getClassAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleRelation
entryRuleRelation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationRule()); }
	 iv_ruleRelation=ruleRelation 
	 { $current=$iv_ruleRelation.current; } 
	 EOF 
;

// Rule Relation
ruleRelation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='relation' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRelationAccess().getRelationKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='extends' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRelationAccess().getExtendsKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRelationAccess().getParentrelationnameRelationCrossReference_2_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_4='symbol' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRelationAccess().getSymbolKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRelationAccess().getSymbolrelationSymbolRelationCrossReference_3_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='from' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRelationAccess().getFromKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRelationAccess().getFromclassnameClassCrossReference_5_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='to' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRelationAccess().getToKeyword_6());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRelationAccess().getToclassnameClassCrossReference_7_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRelationAccess().getLeftCurlyBracketKeyword_8());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRelationAccess().getAttributeAttributeParserRuleCall_9_0_0()); 
	    }
		lv_attribute_11_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationRule());
	        }
       		add(
       			$current, 
       			"attribute",
        		lv_attribute_11_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationAccess().getInsertembedcodeInsertEmbedCodeParserRuleCall_9_1_0()); 
	    }
		lv_insertembedcode_12_0=ruleInsertEmbedCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationRule());
	        }
       		add(
       			$current, 
       			"insertembedcode",
        		lv_insertembedcode_12_0, 
        		"InsertEmbedCode");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getRelationAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	 iv_ruleAttribute=ruleAttribute 
	 { $current=$iv_ruleAttribute.current; } 
	 EOF 
;

// Rule Attribute
ruleAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='attribute' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeAccess().getAttributeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAttributeAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getTypeTypeParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='access' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAttributeAccess().getAccessKeyword_4_0());
    }
	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAttributeAccess().getColonKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getAccessAccessTypeEnumRuleCall_4_2_0()); 
	    }
		lv_access_6_0=ruleAccessType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"access",
        		lv_access_6_0, 
        		"AccessType");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleClassAttribute
entryRuleClassAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassAttributeRule()); }
	 iv_ruleClassAttribute=ruleClassAttribute 
	 { $current=$iv_ruleClassAttribute.current; } 
	 EOF 
;

// Rule ClassAttribute
ruleClassAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='classattribute' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClassAttributeAccess().getClassattributeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassAttributeAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassAttributeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getClassAttributeAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassAttributeAccess().getTypeTypeParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassAttributeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleReference
entryRuleReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferenceRule()); }
	 iv_ruleReference=ruleReference 
	 { $current=$iv_ruleReference.current; } 
	 EOF 
;

// Rule Reference
ruleReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='reference' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getReferenceAccess().getReferenceKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReferenceAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReferenceRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='->' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getReferenceAccess().getHyphenMinusGreaterThanSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReferenceAccess().getRefnameRefNameParserRuleCall_3_0()); 
	    }
		lv_refname_3_0=ruleRefName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReferenceRule());
	        }
       		set(
       			$current, 
       			"refname",
        		lv_refname_3_0, 
        		"RefName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRefName
entryRuleRefName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRefNameRule()); }
	 iv_ruleRefName=ruleRefName 
	 { $current=$iv_ruleRefName.current; } 
	 EOF 
;

// Rule RefName
ruleRefName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='modeltype' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRefNameAccess().getModeltypeKeyword_0_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefNameRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRefNameAccess().getModeltypenameModelTypeCrossReference_0_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_2='class' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRefNameAccess().getClassKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefNameRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRefNameAccess().getClassnameClassCrossReference_1_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getSimpletypeSimpleTypeEnumRuleCall_0_0()); 
	    }
		lv_simpletype_0_0=ruleSimpleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		set(
       			$current, 
       			"simpletype",
        		lv_simpletype_0_0, 
        		"SimpleType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getEnumtypeEnumTypeParserRuleCall_1_0()); 
	    }
		lv_enumtype_1_0=ruleEnumType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		set(
       			$current, 
       			"enumtype",
        		lv_enumtype_1_0, 
        		"EnumType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEnumType
entryRuleEnumType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumTypeRule()); }
	 iv_ruleEnumType=ruleEnumType 
	 { $current=$iv_ruleEnumType.current; } 
	 EOF 
;

// Rule EnumType
ruleEnumType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='enum' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnumTypeAccess().getEnumKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumTypeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getEnumTypeAccess().getNameEnumerationCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleModelType
entryRuleModelType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelTypeRule()); }
	 iv_ruleModelType=ruleModelType 
	 { $current=$iv_ruleModelType.current; } 
	 EOF 
;

// Rule ModelType
ruleModelType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='modeltype' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModelTypeAccess().getModeltypeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelTypeAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getModelTypeAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='classes' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getModelTypeAccess().getClassesKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelTypeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getModelTypeAccess().getClassnameClassCrossReference_4_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_5='relations' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getModelTypeAccess().getRelationsKeyword_5());
    }
(	otherlv_6='none' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getModelTypeAccess().getNoneKeyword_6_0());
    }

    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelTypeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getModelTypeAccess().getRelationnameRelationCrossReference_6_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)+)	otherlv_8='modes' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getModelTypeAccess().getModesKeyword_7());
    }
(	otherlv_9='none' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getModelTypeAccess().getNoneKeyword_8_0());
    }

    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModelTypeAccess().getModenameModeParserRuleCall_8_1_0()); 
	    }
		lv_modename_10_0=ruleMode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelTypeRule());
	        }
       		add(
       			$current, 
       			"modename",
        		lv_modename_10_0, 
        		"Mode");
	        afterParserOrEnumRuleCall();
	    }

)
)+)	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getModelTypeAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleMode
entryRuleMode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModeRule()); }
	 iv_ruleMode=ruleMode 
	 { $current=$iv_ruleMode.current; } 
	 EOF 
;

// Rule Mode
ruleMode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='mode' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModeAccess().getModeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModeAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='include' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getModeAccess().getIncludeKeyword_2());
    }
(	otherlv_3='classes' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getModeAccess().getClassesKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getModeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getModeAccess().getClassnameClassCrossReference_3_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_5='relations' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getModeAccess().getRelationsKeyword_3_2());
    }
(	otherlv_6='none' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getModeAccess().getNoneKeyword_3_3_0());
    }

    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getModeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getModeAccess().getRelationnameRelationCrossReference_3_3_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))+))
;





// Entry rule entryRuleSymbolClass
entryRuleSymbolClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSymbolClassRule()); }
	 iv_ruleSymbolClass=ruleSymbolClass 
	 { $current=$iv_ruleSymbolClass.current; } 
	 EOF 
;

// Rule SymbolClass
ruleSymbolClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='classgraph' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSymbolClassAccess().getClassgraphKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSymbolClassAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSymbolClassRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='style' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSymbolClassAccess().getStyleKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSymbolClassRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSymbolClassAccess().getGlobalstyleSymbolStyleCrossReference_2_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSymbolClassAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSymbolClassAccess().getSvgcommandSVGCommandParserRuleCall_4_0()); 
	    }
		lv_svgcommand_5_0=ruleSVGCommand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSymbolClassRule());
	        }
       		add(
       			$current, 
       			"svgcommand",
        		lv_svgcommand_5_0, 
        		"SVGCommand");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSymbolClassAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleSymbolRelation
entryRuleSymbolRelation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSymbolRelationRule()); }
	 iv_ruleSymbolRelation=ruleSymbolRelation 
	 { $current=$iv_ruleSymbolRelation.current; } 
	 EOF 
;

// Rule SymbolRelation
ruleSymbolRelation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='relationgraph' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSymbolRelationAccess().getRelationgraphKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSymbolRelationAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSymbolRelationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='style' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSymbolRelationAccess().getStyleKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSymbolRelationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSymbolRelationAccess().getGlobalstyleSymbolStyleCrossReference_2_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSymbolRelationAccess().getLeftCurlyBracketKeyword_3());
    }
	otherlv_5='from' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSymbolRelationAccess().getFromKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSymbolRelationAccess().getSvgcommandsfromSVGCommandParserRuleCall_5_0()); 
	    }
		lv_svgcommandsfrom_6_0=ruleSVGCommand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSymbolRelationRule());
	        }
       		add(
       			$current, 
       			"svgcommandsfrom",
        		lv_svgcommandsfrom_6_0, 
        		"SVGCommand");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='middle' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSymbolRelationAccess().getMiddleKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSymbolRelationAccess().getSvgcommandsmiddleSVGCommandParserRuleCall_7_0()); 
	    }
		lv_svgcommandsmiddle_8_0=ruleSVGCommand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSymbolRelationRule());
	        }
       		add(
       			$current, 
       			"svgcommandsmiddle",
        		lv_svgcommandsmiddle_8_0, 
        		"SVGCommand");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='to' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSymbolRelationAccess().getToKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSymbolRelationAccess().getSvgcommandstoSVGCommandParserRuleCall_9_0()); 
	    }
		lv_svgcommandsto_10_0=ruleSVGCommand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSymbolRelationRule());
	        }
       		add(
       			$current, 
       			"svgcommandsto",
        		lv_svgcommandsto_10_0, 
        		"SVGCommand");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSymbolRelationAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleSVGCommand
entryRuleSVGCommand returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSVGCommandRule()); }
	 iv_ruleSVGCommand=ruleSVGCommand 
	 { $current=$iv_ruleSVGCommand.current; } 
	 EOF 
;

// Rule SVGCommand
ruleSVGCommand returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSVGCommandAccess().getInsertembedcodeInsertEmbedCodeParserRuleCall_0_0()); 
	    }
		lv_insertembedcode_0_0=ruleInsertEmbedCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSVGCommandRule());
	        }
       		set(
       			$current, 
       			"insertembedcode",
        		lv_insertembedcode_0_0, 
        		"InsertEmbedCode");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(((
(
		{ 
	        newCompositeNode(grammarAccess.getSVGCommandAccess().getRectangleRectangleParserRuleCall_1_0_0_0()); 
	    }
		lv_rectangle_1_0=ruleRectangle		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSVGCommandRule());
	        }
       		set(
       			$current, 
       			"rectangle",
        		lv_rectangle_1_0, 
        		"Rectangle");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSVGCommandAccess().getCircleCircleParserRuleCall_1_0_1_0()); 
	    }
		lv_circle_2_0=ruleCircle		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSVGCommandRule());
	        }
       		set(
       			$current, 
       			"circle",
        		lv_circle_2_0, 
        		"Circle");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSVGCommandAccess().getEllipseEllipseParserRuleCall_1_0_2_0()); 
	    }
		lv_ellipse_3_0=ruleEllipse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSVGCommandRule());
	        }
       		set(
       			$current, 
       			"ellipse",
        		lv_ellipse_3_0, 
        		"Ellipse");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSVGCommandAccess().getLineLineParserRuleCall_1_0_3_0()); 
	    }
		lv_line_4_0=ruleLine		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSVGCommandRule());
	        }
       		set(
       			$current, 
       			"line",
        		lv_line_4_0, 
        		"Line");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSVGCommandAccess().getPolylinePolylineParserRuleCall_1_0_4_0()); 
	    }
		lv_polyline_5_0=rulePolyline		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSVGCommandRule());
	        }
       		set(
       			$current, 
       			"polyline",
        		lv_polyline_5_0, 
        		"Polyline");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSVGCommandAccess().getPolygonPolygonParserRuleCall_1_0_5_0()); 
	    }
		lv_polygon_6_0=rulePolygon		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSVGCommandRule());
	        }
       		set(
       			$current, 
       			"polygon",
        		lv_polygon_6_0, 
        		"Polygon");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSVGCommandAccess().getPathPathParserRuleCall_1_0_6_0()); 
	    }
		lv_path_7_0=rulePath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSVGCommandRule());
	        }
       		set(
       			$current, 
       			"path",
        		lv_path_7_0, 
        		"Path");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSVGCommandAccess().getTextTextParserRuleCall_1_0_7_0()); 
	    }
		lv_text_8_0=ruleText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSVGCommandRule());
	        }
       		set(
       			$current, 
       			"text",
        		lv_text_8_0, 
        		"Text");
	        afterParserOrEnumRuleCall();
	    }

)
))((
(
		{ 
	        newCompositeNode(grammarAccess.getSVGCommandAccess().getSymbolstyleSymbolStyleParserRuleCall_1_1_0_0()); 
	    }
		lv_symbolstyle_9_0=ruleSymbolStyle		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSVGCommandRule());
	        }
       		set(
       			$current, 
       			"symbolstyle",
        		lv_symbolstyle_9_0, 
        		"SymbolStyle");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_10='style' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSVGCommandAccess().getStyleKeyword_1_1_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSVGCommandRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSVGCommandAccess().getSymbolstylerefSymbolStyleCrossReference_1_1_1_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))?))
;





// Entry rule entryRuleRectangle
entryRuleRectangle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRectangleRule()); }
	 iv_ruleRectangle=ruleRectangle 
	 { $current=$iv_ruleRectangle.current; } 
	 EOF 
;

// Rule Rectangle
ruleRectangle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='rectangle' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRectangleAccess().getRectangleKeyword_0());
    }
	otherlv_1='x' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRectangleAccess().getXKeyword_1());
    }
	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRectangleAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRectangleAccess().getXRealNumberParserRuleCall_3_0()); 
	    }
		lv_x_3_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRectangleRule());
	        }
       		set(
       			$current, 
       			"x",
        		lv_x_3_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='y' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRectangleAccess().getYKeyword_4());
    }
	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRectangleAccess().getEqualsSignKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRectangleAccess().getYRealNumberParserRuleCall_6_0()); 
	    }
		lv_y_6_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRectangleRule());
	        }
       		set(
       			$current, 
       			"y",
        		lv_y_6_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='w' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRectangleAccess().getWKeyword_7());
    }
	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRectangleAccess().getEqualsSignKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRectangleAccess().getWidthNumberParserRuleCall_9_0()); 
	    }
		lv_width_9_0=ruleNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRectangleRule());
	        }
       		set(
       			$current, 
       			"width",
        		lv_width_9_0, 
        		"Number");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='h' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRectangleAccess().getHKeyword_10());
    }
	otherlv_11='=' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getRectangleAccess().getEqualsSignKeyword_11());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRectangleAccess().getHeightNumberParserRuleCall_12_0()); 
	    }
		lv_height_12_0=ruleNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRectangleRule());
	        }
       		set(
       			$current, 
       			"height",
        		lv_height_12_0, 
        		"Number");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCircle
entryRuleCircle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCircleRule()); }
	 iv_ruleCircle=ruleCircle 
	 { $current=$iv_ruleCircle.current; } 
	 EOF 
;

// Rule Circle
ruleCircle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='circle' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCircleAccess().getCircleKeyword_0());
    }
	otherlv_1='cx' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCircleAccess().getCxKeyword_1());
    }
	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCircleAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCircleAccess().getCxRealNumberParserRuleCall_3_0()); 
	    }
		lv_cx_3_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCircleRule());
	        }
       		set(
       			$current, 
       			"cx",
        		lv_cx_3_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='cy' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCircleAccess().getCyKeyword_4());
    }
	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCircleAccess().getEqualsSignKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCircleAccess().getCyRealNumberParserRuleCall_6_0()); 
	    }
		lv_cy_6_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCircleRule());
	        }
       		set(
       			$current, 
       			"cy",
        		lv_cy_6_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='r' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCircleAccess().getRKeyword_7());
    }
	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCircleAccess().getEqualsSignKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCircleAccess().getRNumberParserRuleCall_9_0()); 
	    }
		lv_r_9_0=ruleNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCircleRule());
	        }
       		set(
       			$current, 
       			"r",
        		lv_r_9_0, 
        		"Number");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEllipse
entryRuleEllipse returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEllipseRule()); }
	 iv_ruleEllipse=ruleEllipse 
	 { $current=$iv_ruleEllipse.current; } 
	 EOF 
;

// Rule Ellipse
ruleEllipse returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ellipse' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEllipseAccess().getEllipseKeyword_0());
    }
	otherlv_1='cx' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEllipseAccess().getCxKeyword_1());
    }
	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEllipseAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEllipseAccess().getCxRealNumberParserRuleCall_3_0()); 
	    }
		lv_cx_3_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEllipseRule());
	        }
       		set(
       			$current, 
       			"cx",
        		lv_cx_3_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='cy' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEllipseAccess().getCyKeyword_4());
    }
	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEllipseAccess().getEqualsSignKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEllipseAccess().getCyRealNumberParserRuleCall_6_0()); 
	    }
		lv_cy_6_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEllipseRule());
	        }
       		set(
       			$current, 
       			"cy",
        		lv_cy_6_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='rx' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEllipseAccess().getRxKeyword_7());
    }
	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getEllipseAccess().getEqualsSignKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEllipseAccess().getRxRealNumberParserRuleCall_9_0()); 
	    }
		lv_rx_9_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEllipseRule());
	        }
       		set(
       			$current, 
       			"rx",
        		lv_rx_9_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='ry' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getEllipseAccess().getRyKeyword_10());
    }
	otherlv_11='=' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getEllipseAccess().getEqualsSignKeyword_11());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEllipseAccess().getRyRealNumberParserRuleCall_12_0()); 
	    }
		lv_ry_12_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEllipseRule());
	        }
       		set(
       			$current, 
       			"ry",
        		lv_ry_12_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLine
entryRuleLine returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLineRule()); }
	 iv_ruleLine=ruleLine 
	 { $current=$iv_ruleLine.current; } 
	 EOF 
;

// Rule Line
ruleLine returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='line' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLineAccess().getLineKeyword_0());
    }
	otherlv_1='x1' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLineAccess().getX1Keyword_1());
    }
	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLineAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLineAccess().getX1RealNumberParserRuleCall_3_0()); 
	    }
		lv_x1_3_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLineRule());
	        }
       		set(
       			$current, 
       			"x1",
        		lv_x1_3_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='y1' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLineAccess().getY1Keyword_4());
    }
	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLineAccess().getEqualsSignKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLineAccess().getY1RealNumberParserRuleCall_6_0()); 
	    }
		lv_y1_6_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLineRule());
	        }
       		set(
       			$current, 
       			"y1",
        		lv_y1_6_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='x2' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLineAccess().getX2Keyword_7());
    }
	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getLineAccess().getEqualsSignKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLineAccess().getX2RealNumberParserRuleCall_9_0()); 
	    }
		lv_x2_9_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLineRule());
	        }
       		set(
       			$current, 
       			"x2",
        		lv_x2_9_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='y2' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getLineAccess().getY2Keyword_10());
    }
	otherlv_11='=' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getLineAccess().getEqualsSignKeyword_11());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLineAccess().getY2RealNumberParserRuleCall_12_0()); 
	    }
		lv_y2_12_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLineRule());
	        }
       		set(
       			$current, 
       			"y2",
        		lv_y2_12_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePolyline
entryRulePolyline returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPolylineRule()); }
	 iv_rulePolyline=rulePolyline 
	 { $current=$iv_rulePolyline.current; } 
	 EOF 
;

// Rule Polyline
rulePolyline returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='polyline' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPolylineAccess().getPolylineKeyword_0());
    }
	otherlv_1='points' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPolylineAccess().getPointsKeyword_1());
    }
	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPolylineAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPolylineAccess().getPointsPointsParserRuleCall_3_0()); 
	    }
		lv_points_3_0=rulePoints		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPolylineRule());
	        }
       		add(
       			$current, 
       			"points",
        		lv_points_3_0, 
        		"Points");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRulePolygon
entryRulePolygon returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPolygonRule()); }
	 iv_rulePolygon=rulePolygon 
	 { $current=$iv_rulePolygon.current; } 
	 EOF 
;

// Rule Polygon
rulePolygon returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='polygon' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPolygonAccess().getPolygonKeyword_0());
    }
	otherlv_1='points' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPolygonAccess().getPointsKeyword_1());
    }
	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPolygonAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPolygonAccess().getPointsPointsParserRuleCall_3_0()); 
	    }
		lv_points_3_0=rulePoints		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPolygonRule());
	        }
       		add(
       			$current, 
       			"points",
        		lv_points_3_0, 
        		"Points");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRulePath
entryRulePath returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPathRule()); }
	 iv_rulePath=rulePath 
	 { $current=$iv_rulePath.current; } 
	 EOF 
;

// Rule Path
rulePath returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='path' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPathAccess().getPathKeyword_0());
    }
	otherlv_1='d' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPathAccess().getDKeyword_1());
    }
	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPathAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPathAccess().getPathdataPathDataParserRuleCall_3_0()); 
	    }
		lv_pathdata_3_0=rulePathData		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathRule());
	        }
       		add(
       			$current, 
       			"pathdata",
        		lv_pathdata_3_0, 
        		"PathData");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleText
entryRuleText returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTextRule()); }
	 iv_ruleText=ruleText 
	 { $current=$iv_ruleText.current; } 
	 EOF 
;

// Rule Text
ruleText returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='text' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTextAccess().getTextKeyword_0());
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getTextAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='x' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTextAccess().getXKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTextAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTextAccess().getXRealNumberParserRuleCall_4_0()); 
	    }
		lv_x_4_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextRule());
	        }
       		set(
       			$current, 
       			"x",
        		lv_x_4_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='y' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTextAccess().getYKeyword_5());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTextAccess().getEqualsSignKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTextAccess().getYRealNumberParserRuleCall_7_0()); 
	    }
		lv_y_7_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextRule());
	        }
       		set(
       			$current, 
       			"y",
        		lv_y_7_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8='font-family' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTextAccess().getFontFamilyKeyword_8_0());
    }
	otherlv_9='=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTextAccess().getEqualsSignKeyword_8_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTextAccess().getFontfamilyFontFamilyParserRuleCall_8_2_0()); 
	    }
		lv_fontfamily_10_0=ruleFontFamily		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextRule());
	        }
       		set(
       			$current, 
       			"fontfamily",
        		lv_fontfamily_10_0, 
        		"FontFamily");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_11='font-size' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getTextAccess().getFontSizeKeyword_9_0());
    }
	otherlv_12='=' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getTextAccess().getEqualsSignKeyword_9_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTextAccess().getFontsizeFontSizeParserRuleCall_9_2_0()); 
	    }
		lv_fontsize_13_0=ruleFontSize		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextRule());
	        }
       		set(
       			$current, 
       			"fontsize",
        		lv_fontsize_13_0, 
        		"FontSize");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_14='fill' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getTextAccess().getFillKeyword_10_0());
    }
	otherlv_15='=' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getTextAccess().getEqualsSignKeyword_10_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTextAccess().getFillcolorFillColorParserRuleCall_10_2_0()); 
	    }
		lv_fillcolor_16_0=ruleFillColor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextRule());
	        }
       		set(
       			$current, 
       			"fillcolor",
        		lv_fillcolor_16_0, 
        		"FillColor");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRulePathData
entryRulePathData returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPathDataRule()); }
	 iv_rulePathData=rulePathData 
	 { $current=$iv_rulePathData.current; } 
	 EOF 
;

// Rule PathData
rulePathData returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPathDataAccess().getMovetoMoveToParserRuleCall_0_0()); 
	    }
		lv_moveto_0_0=ruleMoveTo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathDataRule());
	        }
       		set(
       			$current, 
       			"moveto",
        		lv_moveto_0_0, 
        		"MoveTo");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPathDataAccess().getLinetoLineToParserRuleCall_1_0()); 
	    }
		lv_lineto_1_0=ruleLineTo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathDataRule());
	        }
       		set(
       			$current, 
       			"lineto",
        		lv_lineto_1_0, 
        		"LineTo");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPathDataAccess().getHorizontallinetoHorizontalLineToParserRuleCall_2_0()); 
	    }
		lv_horizontallineto_2_0=ruleHorizontalLineTo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathDataRule());
	        }
       		set(
       			$current, 
       			"horizontallineto",
        		lv_horizontallineto_2_0, 
        		"HorizontalLineTo");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPathDataAccess().getVerticallinetoVerticalLineToParserRuleCall_3_0()); 
	    }
		lv_verticallineto_3_0=ruleVerticalLineTo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathDataRule());
	        }
       		set(
       			$current, 
       			"verticallineto",
        		lv_verticallineto_3_0, 
        		"VerticalLineTo");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPathDataAccess().getCurvetoCurveToParserRuleCall_4_0()); 
	    }
		lv_curveto_4_0=ruleCurveTo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathDataRule());
	        }
       		set(
       			$current, 
       			"curveto",
        		lv_curveto_4_0, 
        		"CurveTo");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPathDataAccess().getSmoothcurvetoSmoothCurveToParserRuleCall_5_0()); 
	    }
		lv_smoothcurveto_5_0=ruleSmoothCurveTo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathDataRule());
	        }
       		set(
       			$current, 
       			"smoothcurveto",
        		lv_smoothcurveto_5_0, 
        		"SmoothCurveTo");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPathDataAccess().getQuadraticbeziercurveQuadraticBezierCurveParserRuleCall_6_0()); 
	    }
		lv_quadraticbeziercurve_6_0=ruleQuadraticBezierCurve		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathDataRule());
	        }
       		set(
       			$current, 
       			"quadraticbeziercurve",
        		lv_quadraticbeziercurve_6_0, 
        		"QuadraticBezierCurve");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPathDataAccess().getSmoothquadraticbeziercurvetoSmoothQuadraticBezierCurveToParserRuleCall_7_0()); 
	    }
		lv_smoothquadraticbeziercurveto_7_0=ruleSmoothQuadraticBezierCurveTo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathDataRule());
	        }
       		set(
       			$current, 
       			"smoothquadraticbeziercurveto",
        		lv_smoothquadraticbeziercurveto_7_0, 
        		"SmoothQuadraticBezierCurveTo");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPathDataAccess().getEllipticalarcEllipticalArcParserRuleCall_8_0()); 
	    }
		lv_ellipticalarc_8_0=ruleEllipticalArc		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathDataRule());
	        }
       		set(
       			$current, 
       			"ellipticalarc",
        		lv_ellipticalarc_8_0, 
        		"EllipticalArc");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPathDataAccess().getClosepathClosePathParserRuleCall_9_0()); 
	    }
		lv_closepath_9_0=ruleClosePath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathDataRule());
	        }
       		set(
       			$current, 
       			"closepath",
        		lv_closepath_9_0, 
        		"ClosePath");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMoveTo
entryRuleMoveTo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMoveToRule()); }
	 iv_ruleMoveTo=ruleMoveTo 
	 { $current=$iv_ruleMoveTo.current; } 
	 EOF 
;

// Rule MoveTo
ruleMoveTo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='M' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMoveToAccess().getMKeyword_0_0());
    }

    |	otherlv_1='m' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMoveToAccess().getMKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMoveToAccess().getParametersPathParametersMLTParserRuleCall_1_0()); 
	    }
		lv_parameters_2_0=rulePathParametersMLT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMoveToRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_2_0, 
        		"PathParametersMLT");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleLineTo
entryRuleLineTo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLineToRule()); }
	 iv_ruleLineTo=ruleLineTo 
	 { $current=$iv_ruleLineTo.current; } 
	 EOF 
;

// Rule LineTo
ruleLineTo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='L' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLineToAccess().getLKeyword_0_0());
    }

    |	otherlv_1='l' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLineToAccess().getLKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLineToAccess().getParametersPathParametersMLTParserRuleCall_1_0()); 
	    }
		lv_parameters_2_0=rulePathParametersMLT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLineToRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_2_0, 
        		"PathParametersMLT");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleHorizontalLineTo
entryRuleHorizontalLineTo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHorizontalLineToRule()); }
	 iv_ruleHorizontalLineTo=ruleHorizontalLineTo 
	 { $current=$iv_ruleHorizontalLineTo.current; } 
	 EOF 
;

// Rule HorizontalLineTo
ruleHorizontalLineTo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='H' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHorizontalLineToAccess().getHKeyword_0_0());
    }

    |	otherlv_1='h' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHorizontalLineToAccess().getHKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getHorizontalLineToAccess().getParametersPathParametersHVParserRuleCall_1_0()); 
	    }
		lv_parameters_2_0=rulePathParametersHV		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHorizontalLineToRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_2_0, 
        		"PathParametersHV");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleVerticalLineTo
entryRuleVerticalLineTo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVerticalLineToRule()); }
	 iv_ruleVerticalLineTo=ruleVerticalLineTo 
	 { $current=$iv_ruleVerticalLineTo.current; } 
	 EOF 
;

// Rule VerticalLineTo
ruleVerticalLineTo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='V' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVerticalLineToAccess().getVKeyword_0_0());
    }

    |	otherlv_1='v' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVerticalLineToAccess().getVKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVerticalLineToAccess().getParametersPathParametersHVParserRuleCall_1_0()); 
	    }
		lv_parameters_2_0=rulePathParametersHV		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerticalLineToRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_2_0, 
        		"PathParametersHV");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleCurveTo
entryRuleCurveTo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCurveToRule()); }
	 iv_ruleCurveTo=ruleCurveTo 
	 { $current=$iv_ruleCurveTo.current; } 
	 EOF 
;

// Rule CurveTo
ruleCurveTo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='C' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCurveToAccess().getCKeyword_0_0());
    }

    |	otherlv_1='c' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCurveToAccess().getCKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCurveToAccess().getParametersPathParametersCParserRuleCall_1_0()); 
	    }
		lv_parameters_2_0=rulePathParametersC		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCurveToRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_2_0, 
        		"PathParametersC");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleSmoothCurveTo
entryRuleSmoothCurveTo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSmoothCurveToRule()); }
	 iv_ruleSmoothCurveTo=ruleSmoothCurveTo 
	 { $current=$iv_ruleSmoothCurveTo.current; } 
	 EOF 
;

// Rule SmoothCurveTo
ruleSmoothCurveTo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='S' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSmoothCurveToAccess().getSKeyword_0_0());
    }

    |	otherlv_1='s' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSmoothCurveToAccess().getSKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSmoothCurveToAccess().getParametersPathParametersSParserRuleCall_1_0()); 
	    }
		lv_parameters_2_0=rulePathParametersS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSmoothCurveToRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_2_0, 
        		"PathParametersS");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleQuadraticBezierCurve
entryRuleQuadraticBezierCurve returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQuadraticBezierCurveRule()); }
	 iv_ruleQuadraticBezierCurve=ruleQuadraticBezierCurve 
	 { $current=$iv_ruleQuadraticBezierCurve.current; } 
	 EOF 
;

// Rule QuadraticBezierCurve
ruleQuadraticBezierCurve returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='Q' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQuadraticBezierCurveAccess().getQKeyword_0_0());
    }

    |	otherlv_1='q' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getQuadraticBezierCurveAccess().getQKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getQuadraticBezierCurveAccess().getParametersPathParametersQParserRuleCall_1_0()); 
	    }
		lv_parameters_2_0=rulePathParametersQ		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuadraticBezierCurveRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_2_0, 
        		"PathParametersQ");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleSmoothQuadraticBezierCurveTo
entryRuleSmoothQuadraticBezierCurveTo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSmoothQuadraticBezierCurveToRule()); }
	 iv_ruleSmoothQuadraticBezierCurveTo=ruleSmoothQuadraticBezierCurveTo 
	 { $current=$iv_ruleSmoothQuadraticBezierCurveTo.current; } 
	 EOF 
;

// Rule SmoothQuadraticBezierCurveTo
ruleSmoothQuadraticBezierCurveTo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='T' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSmoothQuadraticBezierCurveToAccess().getTKeyword_0_0());
    }

    |	otherlv_1='t' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSmoothQuadraticBezierCurveToAccess().getTKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSmoothQuadraticBezierCurveToAccess().getParametersPathParametersMLTParserRuleCall_1_0()); 
	    }
		lv_parameters_2_0=rulePathParametersMLT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSmoothQuadraticBezierCurveToRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_2_0, 
        		"PathParametersMLT");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleEllipticalArc
entryRuleEllipticalArc returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEllipticalArcRule()); }
	 iv_ruleEllipticalArc=ruleEllipticalArc 
	 { $current=$iv_ruleEllipticalArc.current; } 
	 EOF 
;

// Rule EllipticalArc
ruleEllipticalArc returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='A' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEllipticalArcAccess().getAKeyword_0_0());
    }

    |	otherlv_1='a' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEllipticalArcAccess().getAKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEllipticalArcAccess().getParametersPathParametersAParserRuleCall_1_0()); 
	    }
		lv_parameters_2_0=rulePathParametersA		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEllipticalArcRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_2_0, 
        		"PathParametersA");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleClosePath
entryRuleClosePath returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getClosePathRule()); } 
	 iv_ruleClosePath=ruleClosePath 
	 { $current=$iv_ruleClosePath.current.getText(); }  
	 EOF 
;

// Rule ClosePath
ruleClosePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='Z' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getClosePathAccess().getZKeyword_0()); 
    }

    |
	kw='z' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getClosePathAccess().getZKeyword_1()); 
    }
)
    ;





// Entry rule entryRulePoints
entryRulePoints returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPointsRule()); }
	 iv_rulePoints=rulePoints 
	 { $current=$iv_rulePoints.current; } 
	 EOF 
;

// Rule Points
rulePoints returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPointsAccess().getXRealNumberParserRuleCall_0_0()); 
	    }
		lv_x_0_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPointsRule());
	        }
       		set(
       			$current, 
       			"x",
        		lv_x_0_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPointsAccess().getCommaKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPointsAccess().getYRealNumberParserRuleCall_2_0()); 
	    }
		lv_y_2_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPointsRule());
	        }
       		set(
       			$current, 
       			"y",
        		lv_y_2_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePathParametersHV
entryRulePathParametersHV returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPathParametersHVRule()); }
	 iv_rulePathParametersHV=rulePathParametersHV 
	 { $current=$iv_rulePathParametersHV.current; } 
	 EOF 
;

// Rule PathParametersHV
rulePathParametersHV returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getPathParametersHVAccess().getXRealNumberParserRuleCall_0()); 
	    }
		lv_x_0_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathParametersHVRule());
	        }
       		set(
       			$current, 
       			"x",
        		lv_x_0_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRulePathParametersMLT
entryRulePathParametersMLT returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPathParametersMLTRule()); }
	 iv_rulePathParametersMLT=rulePathParametersMLT 
	 { $current=$iv_rulePathParametersMLT.current; } 
	 EOF 
;

// Rule PathParametersMLT
rulePathParametersMLT returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPathParametersMLTAccess().getXRealNumberParserRuleCall_0_0()); 
	    }
		lv_x_0_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathParametersMLTRule());
	        }
       		set(
       			$current, 
       			"x",
        		lv_x_0_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPathParametersMLTAccess().getCommaKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPathParametersMLTAccess().getYRealNumberParserRuleCall_2_0()); 
	    }
		lv_y_2_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathParametersMLTRule());
	        }
       		set(
       			$current, 
       			"y",
        		lv_y_2_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePathParametersS
entryRulePathParametersS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPathParametersSRule()); }
	 iv_rulePathParametersS=rulePathParametersS 
	 { $current=$iv_rulePathParametersS.current; } 
	 EOF 
;

// Rule PathParametersS
rulePathParametersS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPathParametersSAccess().getX2RealNumberParserRuleCall_0_0()); 
	    }
		lv_x2_0_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathParametersSRule());
	        }
       		set(
       			$current, 
       			"x2",
        		lv_x2_0_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPathParametersSAccess().getY2RealNumberParserRuleCall_1_0()); 
	    }
		lv_y2_1_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathParametersSRule());
	        }
       		set(
       			$current, 
       			"y2",
        		lv_y2_1_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPathParametersSAccess().getXRealNumberParserRuleCall_2_0()); 
	    }
		lv_x_2_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathParametersSRule());
	        }
       		set(
       			$current, 
       			"x",
        		lv_x_2_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPathParametersSAccess().getYRealNumberParserRuleCall_3_0()); 
	    }
		lv_y_3_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathParametersSRule());
	        }
       		set(
       			$current, 
       			"y",
        		lv_y_3_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePathParametersQ
entryRulePathParametersQ returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPathParametersQRule()); }
	 iv_rulePathParametersQ=rulePathParametersQ 
	 { $current=$iv_rulePathParametersQ.current; } 
	 EOF 
;

// Rule PathParametersQ
rulePathParametersQ returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPathParametersQAccess().getX1RealNumberParserRuleCall_0_0()); 
	    }
		lv_x1_0_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathParametersQRule());
	        }
       		set(
       			$current, 
       			"x1",
        		lv_x1_0_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPathParametersQAccess().getY1RealNumberParserRuleCall_1_0()); 
	    }
		lv_y1_1_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathParametersQRule());
	        }
       		set(
       			$current, 
       			"y1",
        		lv_y1_1_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPathParametersQAccess().getXRealNumberParserRuleCall_2_0()); 
	    }
		lv_x_2_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathParametersQRule());
	        }
       		set(
       			$current, 
       			"x",
        		lv_x_2_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPathParametersQAccess().getYRealNumberParserRuleCall_3_0()); 
	    }
		lv_y_3_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathParametersQRule());
	        }
       		set(
       			$current, 
       			"y",
        		lv_y_3_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePathParametersC
entryRulePathParametersC returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPathParametersCRule()); }
	 iv_rulePathParametersC=rulePathParametersC 
	 { $current=$iv_rulePathParametersC.current; } 
	 EOF 
;

// Rule PathParametersC
rulePathParametersC returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPathParametersCAccess().getX1RealNumberParserRuleCall_0_0()); 
	    }
		lv_x1_0_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathParametersCRule());
	        }
       		set(
       			$current, 
       			"x1",
        		lv_x1_0_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPathParametersCAccess().getY1RealNumberParserRuleCall_1_0()); 
	    }
		lv_y1_1_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathParametersCRule());
	        }
       		set(
       			$current, 
       			"y1",
        		lv_y1_1_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPathParametersCAccess().getX2RealNumberParserRuleCall_2_0()); 
	    }
		lv_x2_2_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathParametersCRule());
	        }
       		set(
       			$current, 
       			"x2",
        		lv_x2_2_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPathParametersCAccess().getY2RealNumberParserRuleCall_3_0()); 
	    }
		lv_y2_3_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathParametersCRule());
	        }
       		set(
       			$current, 
       			"y2",
        		lv_y2_3_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPathParametersCAccess().getXRealNumberParserRuleCall_4_0()); 
	    }
		lv_x_4_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathParametersCRule());
	        }
       		set(
       			$current, 
       			"x",
        		lv_x_4_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPathParametersCAccess().getYRealNumberParserRuleCall_5_0()); 
	    }
		lv_y_5_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathParametersCRule());
	        }
       		set(
       			$current, 
       			"y",
        		lv_y_5_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePathParametersA
entryRulePathParametersA returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPathParametersARule()); }
	 iv_rulePathParametersA=rulePathParametersA 
	 { $current=$iv_rulePathParametersA.current; } 
	 EOF 
;

// Rule PathParametersA
rulePathParametersA returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPathParametersAAccess().getRxRealNumberParserRuleCall_0_0()); 
	    }
		lv_rx_0_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathParametersARule());
	        }
       		set(
       			$current, 
       			"rx",
        		lv_rx_0_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPathParametersAAccess().getCommaKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPathParametersAAccess().getRyRealNumberParserRuleCall_2_0()); 
	    }
		lv_ry_2_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathParametersARule());
	        }
       		set(
       			$current, 
       			"ry",
        		lv_ry_2_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPathParametersAAccess().getXaxisrotRealNumberParserRuleCall_3_0()); 
	    }
		lv_xaxisrot_3_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathParametersARule());
	        }
       		set(
       			$current, 
       			"xaxisrot",
        		lv_xaxisrot_3_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPathParametersAAccess().getLargearcflagNumberParserRuleCall_4_0()); 
	    }
		lv_largearcflag_4_0=ruleNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathParametersARule());
	        }
       		set(
       			$current, 
       			"largearcflag",
        		lv_largearcflag_4_0, 
        		"Number");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPathParametersAAccess().getSweepflagNumberParserRuleCall_5_0()); 
	    }
		lv_sweepflag_5_0=ruleNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathParametersARule());
	        }
       		set(
       			$current, 
       			"sweepflag",
        		lv_sweepflag_5_0, 
        		"Number");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPathParametersAAccess().getXRealNumberParserRuleCall_6_0()); 
	    }
		lv_x_6_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathParametersARule());
	        }
       		set(
       			$current, 
       			"x",
        		lv_x_6_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPathParametersAAccess().getYRealNumberParserRuleCall_7_0()); 
	    }
		lv_y_7_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPathParametersARule());
	        }
       		set(
       			$current, 
       			"y",
        		lv_y_7_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSymbolStyle
entryRuleSymbolStyle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSymbolStyleRule()); }
	 iv_ruleSymbolStyle=ruleSymbolStyle 
	 { $current=$iv_ruleSymbolStyle.current; } 
	 EOF 
;

// Rule SymbolStyle
ruleSymbolStyle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='style' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSymbolStyleAccess().getStyleKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSymbolStyleAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSymbolStyleRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSymbolStyleAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='fill' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSymbolStyleAccess().getFillKeyword_3());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSymbolStyleAccess().getColonKeyword_4());
    }
(	otherlv_5='none' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSymbolStyleAccess().getNoneKeyword_5_0());
    }

    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSymbolStyleAccess().getFillcolorFillColorParserRuleCall_5_1_0()); 
	    }
		lv_fillcolor_6_0=ruleFillColor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSymbolStyleRule());
	        }
       		set(
       			$current, 
       			"fillcolor",
        		lv_fillcolor_6_0, 
        		"FillColor");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_7='stroke' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSymbolStyleAccess().getStrokeKeyword_6());
    }
	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSymbolStyleAccess().getColonKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSymbolStyleAccess().getStrokecolorStrokeColorParserRuleCall_8_0()); 
	    }
		lv_strokecolor_9_0=ruleStrokeColor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSymbolStyleRule());
	        }
       		set(
       			$current, 
       			"strokecolor",
        		lv_strokecolor_9_0, 
        		"StrokeColor");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='stroke-width' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSymbolStyleAccess().getStrokeWidthKeyword_9());
    }
	otherlv_11=':' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSymbolStyleAccess().getColonKeyword_10());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSymbolStyleAccess().getStrokewidthStrokeWidthParserRuleCall_11_0()); 
	    }
		lv_strokewidth_12_0=ruleStrokeWidth		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSymbolStyleRule());
	        }
       		set(
       			$current, 
       			"strokewidth",
        		lv_strokewidth_12_0, 
        		"StrokeWidth");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13='font-family' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSymbolStyleAccess().getFontFamilyKeyword_12_0());
    }
	otherlv_14=':' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getSymbolStyleAccess().getColonKeyword_12_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSymbolStyleAccess().getFontfamilyFontFamilyParserRuleCall_12_2_0()); 
	    }
		lv_fontfamily_15_0=ruleFontFamily		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSymbolStyleRule());
	        }
       		set(
       			$current, 
       			"fontfamily",
        		lv_fontfamily_15_0, 
        		"FontFamily");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_16='font-size' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getSymbolStyleAccess().getFontSizeKeyword_13_0());
    }
	otherlv_17=':' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getSymbolStyleAccess().getColonKeyword_13_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSymbolStyleAccess().getFontsizeFontSizeParserRuleCall_13_2_0()); 
	    }
		lv_fontsize_18_0=ruleFontSize		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSymbolStyleRule());
	        }
       		set(
       			$current, 
       			"fontsize",
        		lv_fontsize_18_0, 
        		"FontSize");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getSymbolStyleAccess().getInsertembedcodeInsertEmbedCodeParserRuleCall_14_0()); 
	    }
		lv_insertembedcode_19_0=ruleInsertEmbedCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSymbolStyleRule());
	        }
       		add(
       			$current, 
       			"insertembedcode",
        		lv_insertembedcode_19_0, 
        		"InsertEmbedCode");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_20='}' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getSymbolStyleAccess().getRightCurlyBracketKeyword_15());
    }
)
;





// Entry rule entryRuleFillColor
entryRuleFillColor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFillColorRule()); }
	 iv_ruleFillColor=ruleFillColor 
	 { $current=$iv_ruleFillColor.current; } 
	 EOF 
;

// Rule FillColor
ruleFillColor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFillColorAccess().getFillColorAction_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFillColorAccess().getColorColorEnumRuleCall_0_1_0()); 
	    }
		lv_color_1_0=ruleColor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFillColorRule());
	        }
       		set(
       			$current, 
       			"color",
        		lv_color_1_0, 
        		"Color");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		lv_hexcolor_2_0=RULE_HEXCOLOR
		{
			newLeafNode(lv_hexcolor_2_0, grammarAccess.getFillColorAccess().getHexcolorHEXCOLORTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFillColorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"hexcolor",
        		lv_hexcolor_2_0, 
        		"HEXCOLOR");
	    }

)
))
;





// Entry rule entryRuleStrokeColor
entryRuleStrokeColor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStrokeColorRule()); }
	 iv_ruleStrokeColor=ruleStrokeColor 
	 { $current=$iv_ruleStrokeColor.current; } 
	 EOF 
;

// Rule StrokeColor
ruleStrokeColor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStrokeColorAccess().getStrokeColorAction_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStrokeColorAccess().getColorColorEnumRuleCall_0_1_0()); 
	    }
		lv_color_1_0=ruleColor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStrokeColorRule());
	        }
       		set(
       			$current, 
       			"color",
        		lv_color_1_0, 
        		"Color");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		lv_hexcolor_2_0=RULE_HEXCOLOR
		{
			newLeafNode(lv_hexcolor_2_0, grammarAccess.getStrokeColorAccess().getHexcolorHEXCOLORTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStrokeColorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"hexcolor",
        		lv_hexcolor_2_0, 
        		"HEXCOLOR");
	    }

)
))
;





// Entry rule entryRuleStrokeWidth
entryRuleStrokeWidth returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getStrokeWidthRule()); } 
	 iv_ruleStrokeWidth=ruleStrokeWidth 
	 { $current=$iv_ruleStrokeWidth.current.getText(); }  
	 EOF 
;

// Rule StrokeWidth
ruleStrokeWidth returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getStrokeWidthAccess().getNumberParserRuleCall()); 
    }
    this_Number_0=ruleNumber    {
		$current.merge(this_Number_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    ;





// Entry rule entryRuleFontFamily
entryRuleFontFamily returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFontFamilyRule()); }
	 iv_ruleFontFamily=ruleFontFamily 
	 { $current=$iv_ruleFontFamily.current; } 
	 EOF 
;

// Rule FontFamily
ruleFontFamily returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFontFamilyAccess().getFontFamilyAction_0_0(),
            $current);
    }
)(
(
		lv_fontstr_1_0=RULE_STRING
		{
			newLeafNode(lv_fontstr_1_0, grammarAccess.getFontFamilyAccess().getFontstrSTRINGTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFontFamilyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fontstr",
        		lv_fontstr_1_0, 
        		"STRING");
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFontFamilyAccess().getFontFontEnumRuleCall_1_0()); 
	    }
		lv_font_2_0=ruleFont		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFontFamilyRule());
	        }
       		set(
       			$current, 
       			"font",
        		lv_font_2_0, 
        		"Font");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFontSize
entryRuleFontSize returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFontSizeRule()); } 
	 iv_ruleFontSize=ruleFontSize 
	 { $current=$iv_ruleFontSize.current.getText(); }  
	 EOF 
;

// Rule FontSize
ruleFontSize returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getFontSizeAccess().getNumberParserRuleCall()); 
    }
    this_Number_0=ruleNumber    {
		$current.merge(this_Number_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    ;





// Entry rule entryRuleAlgorithm
entryRuleAlgorithm returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAlgorithmRule()); }
	 iv_ruleAlgorithm=ruleAlgorithm 
	 { $current=$iv_ruleAlgorithm.current; } 
	 EOF 
;

// Rule Algorithm
ruleAlgorithm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='algorithm' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAlgorithmAccess().getAlgorithmKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAlgorithmAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlgorithmRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAlgorithmAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAlgorithmAccess().getStmntStatementParserRuleCall_3_0()); 
	    }
		lv_stmnt_3_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlgorithmRule());
	        }
       		add(
       			$current, 
       			"stmnt",
        		lv_stmnt_3_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAlgorithmAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	 iv_ruleStatement=ruleStatement 
	 { $current=$iv_ruleStatement.current; } 
	 EOF 
;

// Rule Statement
ruleStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getSelectionSelectionStatementParserRuleCall_0_0()); 
	    }
		lv_selection_0_0=ruleSelectionStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"selection",
        		lv_selection_0_0, 
        		"SelectionStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getLoopLoopStatementParserRuleCall_1_0()); 
	    }
		lv_loop_1_0=ruleLoopStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"loop",
        		lv_loop_1_0, 
        		"LoopStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getVariableVariableParserRuleCall_2_0()); 
	    }
		lv_variable_2_0=ruleVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_2_0, 
        		"Variable");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getAlgorithmoperationAlgorithmOperationParserRuleCall_3_0()); 
	    }
		lv_algorithmoperation_3_0=ruleAlgorithmOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"algorithmoperation",
        		lv_algorithmoperation_3_0, 
        		"AlgorithmOperation");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getInsertembedcodeInsertEmbedCodeParserRuleCall_4_0()); 
	    }
		lv_insertembedcode_4_0=ruleInsertEmbedCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"insertembedcode",
        		lv_insertembedcode_4_0, 
        		"InsertEmbedCode");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSelectionStatement
entryRuleSelectionStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSelectionStatementRule()); }
	 iv_ruleSelectionStatement=ruleSelectionStatement 
	 { $current=$iv_ruleSelectionStatement.current; } 
	 EOF 
;

// Rule SelectionStatement
ruleSelectionStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='if' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSelectionStatementAccess().getIfKeyword_0_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSelectionStatementAccess().getLeftParenthesisKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionStatementAccess().getIfconditionExprParserRuleCall_0_2_0()); 
	    }
		lv_ifcondition_2_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionStatementRule());
	        }
       		set(
       			$current, 
       			"ifcondition",
        		lv_ifcondition_2_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSelectionStatementAccess().getRightParenthesisKeyword_0_3());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSelectionStatementAccess().getLeftCurlyBracketKeyword_0_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionStatementAccess().getIfblockStatementParserRuleCall_0_5_0()); 
	    }
		lv_ifblock_5_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionStatementRule());
	        }
       		add(
       			$current, 
       			"ifblock",
        		lv_ifblock_5_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSelectionStatementAccess().getRightCurlyBracketKeyword_0_6());
    }
)((	otherlv_7='elseif' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSelectionStatementAccess().getElseifKeyword_1_0_0());
    }
	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSelectionStatementAccess().getLeftParenthesisKeyword_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionStatementAccess().getElseifconditionExprParserRuleCall_1_0_2_0()); 
	    }
		lv_elseifcondition_9_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionStatementRule());
	        }
       		add(
       			$current, 
       			"elseifcondition",
        		lv_elseifcondition_9_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSelectionStatementAccess().getRightParenthesisKeyword_1_0_3());
    }
	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSelectionStatementAccess().getLeftCurlyBracketKeyword_1_0_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionStatementAccess().getElseifblockStatementParserRuleCall_1_0_5_0()); 
	    }
		lv_elseifblock_12_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionStatementRule());
	        }
       		add(
       			$current, 
       			"elseifblock",
        		lv_elseifblock_12_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSelectionStatementAccess().getRightCurlyBracketKeyword_1_0_6());
    }
)*	otherlv_14='else' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getSelectionStatementAccess().getElseKeyword_1_1());
    }
	otherlv_15='{' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getSelectionStatementAccess().getLeftCurlyBracketKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectionStatementAccess().getElseblockStatementParserRuleCall_1_3_0()); 
	    }
		lv_elseblock_16_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectionStatementRule());
	        }
       		add(
       			$current, 
       			"elseblock",
        		lv_elseblock_16_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getSelectionStatementAccess().getRightCurlyBracketKeyword_1_4());
    }
)?)
;





// Entry rule entryRuleLoopStatement
entryRuleLoopStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLoopStatementRule()); }
	 iv_ruleLoopStatement=ruleLoopStatement 
	 { $current=$iv_ruleLoopStatement.current; } 
	 EOF 
;

// Rule LoopStatement
ruleLoopStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getLoopStatementAccess().getWhiletloopWhileLoopParserRuleCall_0_0()); 
	    }
		lv_whiletloop_0_0=ruleWhileLoop		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLoopStatementRule());
	        }
       		set(
       			$current, 
       			"whiletloop",
        		lv_whiletloop_0_0, 
        		"WhileLoop");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLoopStatementAccess().getForloopForLoopParserRuleCall_1_0()); 
	    }
		lv_forloop_1_0=ruleForLoop		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLoopStatementRule());
	        }
       		set(
       			$current, 
       			"forloop",
        		lv_forloop_1_0, 
        		"ForLoop");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleWhileLoop
entryRuleWhileLoop returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhileLoopRule()); }
	 iv_ruleWhileLoop=ruleWhileLoop 
	 { $current=$iv_ruleWhileLoop.current; } 
	 EOF 
;

// Rule WhileLoop
ruleWhileLoop returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='while' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhileLoopAccess().getWhileKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhileLoopAccess().getConditionExprParserRuleCall_2_0()); 
	    }
		lv_condition_2_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhileLoopRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_2_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_3());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getWhileLoopAccess().getLeftCurlyBracketKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getWhileLoopAccess().getWhileblockStatementParserRuleCall_5_0_0()); 
	    }
		lv_whileblock_5_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhileLoopRule());
	        }
       		add(
       			$current, 
       			"whileblock",
        		lv_whileblock_5_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getWhileLoopAccess().getBreakcontinueBreakContinueParserRuleCall_5_1_0()); 
	    }
		lv_breakcontinue_6_0=ruleBreakContinue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhileLoopRule());
	        }
       		add(
       			$current, 
       			"breakcontinue",
        		lv_breakcontinue_6_0, 
        		"BreakContinue");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getWhileLoopAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleForLoop
entryRuleForLoop returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getForLoopRule()); }
	 iv_ruleForLoop=ruleForLoop 
	 { $current=$iv_ruleForLoop.current; } 
	 EOF 
;

// Rule ForLoop
ruleForLoop returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='for' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getForLoopAccess().getForKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getForLoopAccess().getLeftParenthesisKeyword_1());
    }
(
(
		lv_start_2_0=RULE_INT
		{
			newLeafNode(lv_start_2_0, grammarAccess.getForLoopAccess().getStartINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getForLoopRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"start",
        		lv_start_2_0, 
        		"INT");
	    }

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getForLoopAccess().getSemicolonKeyword_3());
    }
(
(
		lv_stop_4_0=RULE_INT
		{
			newLeafNode(lv_stop_4_0, grammarAccess.getForLoopAccess().getStopINTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getForLoopRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"stop",
        		lv_stop_4_0, 
        		"INT");
	    }

)
)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getForLoopAccess().getSemicolonKeyword_5());
    }
(
(
		lv_interval_6_0=RULE_INT
		{
			newLeafNode(lv_interval_6_0, grammarAccess.getForLoopAccess().getIntervalINTTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getForLoopRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"interval",
        		lv_interval_6_0, 
        		"INT");
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getForLoopAccess().getRightParenthesisKeyword_7());
    }
	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getForLoopAccess().getLeftCurlyBracketKeyword_8());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getForLoopAccess().getForblockStatementParserRuleCall_9_0_0()); 
	    }
		lv_forblock_9_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForLoopRule());
	        }
       		add(
       			$current, 
       			"forblock",
        		lv_forblock_9_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getForLoopAccess().getBreakcontinueBreakContinueParserRuleCall_9_1_0()); 
	    }
		lv_breakcontinue_10_0=ruleBreakContinue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForLoopRule());
	        }
       		add(
       			$current, 
       			"breakcontinue",
        		lv_breakcontinue_10_0, 
        		"BreakContinue");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getForLoopAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleBreakContinue
entryRuleBreakContinue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBreakContinueRule()); }
	 iv_ruleBreakContinue=ruleBreakContinue 
	 { $current=$iv_ruleBreakContinue.current; } 
	 EOF 
;

// Rule BreakContinue
ruleBreakContinue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_break_0_0=	'break' 
    {
        newLeafNode(lv_break_0_0, grammarAccess.getBreakContinueAccess().getBreakBreakKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBreakContinueRule());
	        }
       		setWithLastConsumed($current, "break", lv_break_0_0, "break");
	    }

)
)
    |(
(
		lv_continue_1_0=	'continue' 
    {
        newLeafNode(lv_continue_1_0, grammarAccess.getBreakContinueAccess().getContinueContinueKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBreakContinueRule());
	        }
       		setWithLastConsumed($current, "continue", lv_continue_1_0, "continue");
	    }

)
))
;





// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	 iv_ruleVariable=ruleVariable 
	 { $current=$iv_ruleVariable.current; } 
	 EOF 
;

// Rule Variable
ruleVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='var' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVariableAccess().getVarKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAccess().getNameValidIDParserRuleCall_0_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAccess().getOpassingOperatorAssignParserRuleCall_0_2_0_0()); 
	    }
		lv_opassing_2_0=ruleOperatorAssign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableRule());
	        }
       		set(
       			$current, 
       			"opassing",
        		lv_opassing_2_0, 
        		"OperatorAssign");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAccess().getVarstatementVarStatementParserRuleCall_0_2_1_0()); 
	    }
		lv_varstatement_3_0=ruleVarStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableRule());
	        }
       		set(
       			$current, 
       			"varstatement",
        		lv_varstatement_3_0, 
        		"VarStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariableRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVariableAccess().getVariableVariableCrossReference_1_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAccess().getOpassingOperatorAssignParserRuleCall_1_1_0()); 
	    }
		lv_opassing_5_0=ruleOperatorAssign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableRule());
	        }
       		set(
       			$current, 
       			"opassing",
        		lv_opassing_5_0, 
        		"OperatorAssign");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAccess().getVarstatementVarStatementParserRuleCall_1_2_0()); 
	    }
		lv_varstatement_6_0=ruleVarStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableRule());
	        }
       		set(
       			$current, 
       			"varstatement",
        		lv_varstatement_6_0, 
        		"VarStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleVarStatement
entryRuleVarStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVarStatementRule()); }
	 iv_ruleVarStatement=ruleVarStatement 
	 { $current=$iv_ruleVarStatement.current; } 
	 EOF 
;

// Rule VarStatement
ruleVarStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVarStatementAccess().getExpressionExprParserRuleCall_0_0()); 
	    }
		lv_expression_0_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVarStatementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_0_0, 
        		"Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getVarStatementAccess().getAlgorithmoperationAlgorithmOperationParserRuleCall_1_0()); 
	    }
		lv_algorithmoperation_1_0=ruleAlgorithmOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVarStatementRule());
	        }
       		set(
       			$current, 
       			"algorithmoperation",
        		lv_algorithmoperation_1_0, 
        		"AlgorithmOperation");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_2='class' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVarStatementAccess().getClassKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVarStatementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVarStatementAccess().getClassClassCrossReference_2_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_4='attribute' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVarStatementAccess().getAttributeKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVarStatementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVarStatementAccess().getAttributeAttributeCrossReference_3_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_6='reference' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getVarStatementAccess().getReferenceKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVarStatementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVarStatementAccess().getReferenceReferenceCrossReference_4_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_8='symbolclass' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getVarStatementAccess().getSymbolclassKeyword_5_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVarStatementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVarStatementAccess().getSymbolclassSymbolClassCrossReference_5_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_10='symbolrelation' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getVarStatementAccess().getSymbolrelationKeyword_6_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVarStatementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVarStatementAccess().getSymbolrelationSymbolRelationCrossReference_6_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_12='symbolstyle' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getVarStatementAccess().getSymbolstyleKeyword_7_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVarStatementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVarStatementAccess().getSymbolstyleSymbolStyleCrossReference_7_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_14='embedded' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getVarStatementAccess().getEmbeddedKeyword_8_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVarStatementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVarStatementAccess().getEmbeddedcodeEmbedCodeCrossReference_8_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_16='modeltype' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getVarStatementAccess().getModeltypeKeyword_9_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVarStatementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVarStatementAccess().getModeltypeModelTypeCrossReference_9_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleOperatorAssign
entryRuleOperatorAssign returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperatorAssignRule()); }
	 iv_ruleOperatorAssign=ruleOperatorAssign 
	 { $current=$iv_ruleOperatorAssign.current; } 
	 EOF 
;

// Rule OperatorAssign
ruleOperatorAssign returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_assign_0_0=	'=' 
    {
        newLeafNode(lv_assign_0_0, grammarAccess.getOperatorAssignAccess().getAssignEqualsSignKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperatorAssignRule());
	        }
       		setWithLastConsumed($current, "assign", lv_assign_0_0, "=");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getOperatorAssignAccess().getMultyassignOperatorMultyAssignParserRuleCall_1_0()); 
	    }
		lv_multyassign_1_0=ruleOperatorMultyAssign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperatorAssignRule());
	        }
       		set(
       			$current, 
       			"multyassign",
        		lv_multyassign_1_0, 
        		"OperatorMultyAssign");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleOperatorMultyAssign
entryRuleOperatorMultyAssign returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperatorMultyAssignRule()); }
	 iv_ruleOperatorMultyAssign=ruleOperatorMultyAssign 
	 { $current=$iv_ruleOperatorMultyAssign.current; } 
	 EOF 
;

// Rule OperatorMultyAssign
ruleOperatorMultyAssign returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_addassign_0_0=	'+=' 
    {
        newLeafNode(lv_addassign_0_0, grammarAccess.getOperatorMultyAssignAccess().getAddassignPlusSignEqualsSignKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperatorMultyAssignRule());
	        }
       		setWithLastConsumed($current, "addassign", lv_addassign_0_0, "+=");
	    }

)
)
    |(
(
		lv_subassign_1_0=	'-=' 
    {
        newLeafNode(lv_subassign_1_0, grammarAccess.getOperatorMultyAssignAccess().getSubassignHyphenMinusEqualsSignKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperatorMultyAssignRule());
	        }
       		setWithLastConsumed($current, "subassign", lv_subassign_1_0, "-=");
	    }

)
)
    |(
(
		lv_multiassign_2_0=	'*=' 
    {
        newLeafNode(lv_multiassign_2_0, grammarAccess.getOperatorMultyAssignAccess().getMultiassignAsteriskEqualsSignKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperatorMultyAssignRule());
	        }
       		setWithLastConsumed($current, "multiassign", lv_multiassign_2_0, "*=");
	    }

)
)
    |(
(
		lv_divassign_3_0=	'/=' 
    {
        newLeafNode(lv_divassign_3_0, grammarAccess.getOperatorMultyAssignAccess().getDivassignSolidusEqualsSignKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperatorMultyAssignRule());
	        }
       		setWithLastConsumed($current, "divassign", lv_divassign_3_0, "/=");
	    }

)
))
;





// Entry rule entryRuleOperatorUnary
entryRuleOperatorUnary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperatorUnaryRule()); }
	 iv_ruleOperatorUnary=ruleOperatorUnary 
	 { $current=$iv_ruleOperatorUnary.current; } 
	 EOF 
;

// Rule OperatorUnary
ruleOperatorUnary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_not_0_0=	'!' 
    {
        newLeafNode(lv_not_0_0, grammarAccess.getOperatorUnaryAccess().getNotExclamationMarkKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperatorUnaryRule());
	        }
       		setWithLastConsumed($current, "not", lv_not_0_0, "!");
	    }

)
)
;





// Entry rule entryRuleOperatorMultiply
entryRuleOperatorMultiply returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperatorMultiplyRule()); }
	 iv_ruleOperatorMultiply=ruleOperatorMultiply 
	 { $current=$iv_ruleOperatorMultiply.current; } 
	 EOF 
;

// Rule OperatorMultiply
ruleOperatorMultiply returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_multiply_0_0=	'*' 
    {
        newLeafNode(lv_multiply_0_0, grammarAccess.getOperatorMultiplyAccess().getMultiplyAsteriskKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperatorMultiplyRule());
	        }
       		setWithLastConsumed($current, "multiply", lv_multiply_0_0, "*");
	    }

)
)
    |(
(
		lv_divide_1_0=	'/' 
    {
        newLeafNode(lv_divide_1_0, grammarAccess.getOperatorMultiplyAccess().getDivideSolidusKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperatorMultiplyRule());
	        }
       		setWithLastConsumed($current, "divide", lv_divide_1_0, "/");
	    }

)
)
    |(
(
		lv_modulo_2_0=	'%' 
    {
        newLeafNode(lv_modulo_2_0, grammarAccess.getOperatorMultiplyAccess().getModuloPercentSignKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperatorMultiplyRule());
	        }
       		setWithLastConsumed($current, "modulo", lv_modulo_2_0, "\%");
	    }

)
))
;





// Entry rule entryRuleOperatorAdd
entryRuleOperatorAdd returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperatorAddRule()); }
	 iv_ruleOperatorAdd=ruleOperatorAdd 
	 { $current=$iv_ruleOperatorAdd.current; } 
	 EOF 
;

// Rule OperatorAdd
ruleOperatorAdd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_add_0_0=	'+' 
    {
        newLeafNode(lv_add_0_0, grammarAccess.getOperatorAddAccess().getAddPlusSignKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperatorAddRule());
	        }
       		setWithLastConsumed($current, "add", lv_add_0_0, "+");
	    }

)
)
    |(
(
		lv_subtract_1_0=	'-' 
    {
        newLeafNode(lv_subtract_1_0, grammarAccess.getOperatorAddAccess().getSubtractHyphenMinusKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperatorAddRule());
	        }
       		setWithLastConsumed($current, "subtract", lv_subtract_1_0, "-");
	    }

)
))
;





// Entry rule entryRuleOperatorCompare
entryRuleOperatorCompare returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperatorCompareRule()); }
	 iv_ruleOperatorCompare=ruleOperatorCompare 
	 { $current=$iv_ruleOperatorCompare.current; } 
	 EOF 
;

// Rule OperatorCompare
ruleOperatorCompare returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_greaterequal_0_0=	'>=' 
    {
        newLeafNode(lv_greaterequal_0_0, grammarAccess.getOperatorCompareAccess().getGreaterequalGreaterThanSignEqualsSignKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperatorCompareRule());
	        }
       		setWithLastConsumed($current, "greaterequal", lv_greaterequal_0_0, ">=");
	    }

)
)
    |(
(
		lv_lesserequal_1_0=	'<=' 
    {
        newLeafNode(lv_lesserequal_1_0, grammarAccess.getOperatorCompareAccess().getLesserequalLessThanSignEqualsSignKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperatorCompareRule());
	        }
       		setWithLastConsumed($current, "lesserequal", lv_lesserequal_1_0, "<=");
	    }

)
)
    |(
(
		lv_greater_2_0=	'>' 
    {
        newLeafNode(lv_greater_2_0, grammarAccess.getOperatorCompareAccess().getGreaterGreaterThanSignKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperatorCompareRule());
	        }
       		setWithLastConsumed($current, "greater", lv_greater_2_0, ">");
	    }

)
)
    |(
(
		lv_lesser_3_0=	'<' 
    {
        newLeafNode(lv_lesser_3_0, grammarAccess.getOperatorCompareAccess().getLesserLessThanSignKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperatorCompareRule());
	        }
       		setWithLastConsumed($current, "lesser", lv_lesser_3_0, "<");
	    }

)
))
;





// Entry rule entryRuleOperatorEqual
entryRuleOperatorEqual returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperatorEqualRule()); }
	 iv_ruleOperatorEqual=ruleOperatorEqual 
	 { $current=$iv_ruleOperatorEqual.current; } 
	 EOF 
;

// Rule OperatorEqual
ruleOperatorEqual returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_equal_0_0=	'==' 
    {
        newLeafNode(lv_equal_0_0, grammarAccess.getOperatorEqualAccess().getEqualEqualsSignEqualsSignKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperatorEqualRule());
	        }
       		setWithLastConsumed($current, "equal", lv_equal_0_0, "==");
	    }

)
)
    |(
(
		lv_notequal_1_0=	'!=' 
    {
        newLeafNode(lv_notequal_1_0, grammarAccess.getOperatorEqualAccess().getNotequalExclamationMarkEqualsSignKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperatorEqualRule());
	        }
       		setWithLastConsumed($current, "notequal", lv_notequal_1_0, "!=");
	    }

)
))
;





// Entry rule entryRuleOperatorAnd
entryRuleOperatorAnd returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperatorAndRule()); }
	 iv_ruleOperatorAnd=ruleOperatorAnd 
	 { $current=$iv_ruleOperatorAnd.current; } 
	 EOF 
;

// Rule OperatorAnd
ruleOperatorAnd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_and_0_0=	'&&' 
    {
        newLeafNode(lv_and_0_0, grammarAccess.getOperatorAndAccess().getAndAmpersandAmpersandKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperatorAndRule());
	        }
       		setWithLastConsumed($current, "and", lv_and_0_0, "&&");
	    }

)
)
;





// Entry rule entryRuleOperatorOr
entryRuleOperatorOr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperatorOrRule()); }
	 iv_ruleOperatorOr=ruleOperatorOr 
	 { $current=$iv_ruleOperatorOr.current; } 
	 EOF 
;

// Rule OperatorOr
ruleOperatorOr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_or_0_0=	'||' 
    {
        newLeafNode(lv_or_0_0, grammarAccess.getOperatorOrAccess().getOrVerticalLineVerticalLineKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperatorOrRule());
	        }
       		setWithLastConsumed($current, "or", lv_or_0_0, "||");
	    }

)
)
;





// Entry rule entryRuleExpr
entryRuleExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExprRule()); }
	 iv_ruleExpr=ruleExpr 
	 { $current=$iv_ruleExpr.current; } 
	 EOF 
;

// Rule Expr
ruleExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getExprAccess().getExprOrExpressionParserRuleCall_0()); 
	    }
		lv_expr_0_0=ruleOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExprRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_0_0, 
        		"OrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleOrExpression
entryRuleOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrExpressionRule()); }
	 iv_ruleOrExpression=ruleOrExpression 
	 { $current=$iv_ruleOrExpression.current; } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); 
    }
    this_AndExpression_0=ruleAndExpression
    { 
        $current = $this_AndExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
ruleOperatorOr
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getOrExpressionAccess().getOrExpressionLeftAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOrExpressionAccess().getOpOperatorOrParserRuleCall_1_0_0_1_0()); 
	    }
		lv_op_2_0=ruleOperatorOr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"OperatorOr");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"AndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAndExpression
entryRuleAndExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAndExpressionRule()); }
	 iv_ruleAndExpression=ruleAndExpression 
	 { $current=$iv_ruleAndExpression.current; } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualExpressionParserRuleCall_0()); 
    }
    this_EqualExpression_0=ruleEqualExpression
    { 
        $current = $this_EqualExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
ruleOperatorAnd
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAndExpressionAccess().getOpOperatorAndParserRuleCall_1_0_0_1_0()); 
	    }
		lv_op_2_0=ruleOperatorAnd		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"OperatorAnd");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleEqualExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"EqualExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleEqualExpression
entryRuleEqualExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEqualExpressionRule()); }
	 iv_ruleEqualExpression=ruleEqualExpression 
	 { $current=$iv_ruleEqualExpression.current; } 
	 EOF 
;

// Rule EqualExpression
ruleEqualExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getEqualExpressionAccess().getCompareExpressionParserRuleCall_0()); 
    }
    this_CompareExpression_0=ruleCompareExpression
    { 
        $current = $this_CompareExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
ruleOperatorEqual
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getEqualExpressionAccess().getEqualExpressionLeftAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEqualExpressionAccess().getOpOperatorEqualParserRuleCall_1_0_0_1_0()); 
	    }
		lv_op_2_0=ruleOperatorEqual		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEqualExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"OperatorEqual");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getEqualExpressionAccess().getRightCompareExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleCompareExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEqualExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"CompareExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleCompareExpression
entryRuleCompareExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompareExpressionRule()); }
	 iv_ruleCompareExpression=ruleCompareExpression 
	 { $current=$iv_ruleCompareExpression.current; } 
	 EOF 
;

// Rule CompareExpression
ruleCompareExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCompareExpressionAccess().getAdditionExpressionParserRuleCall_0()); 
    }
    this_AdditionExpression_0=ruleAdditionExpression
    { 
        $current = $this_AdditionExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
ruleOperatorCompare
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getCompareExpressionAccess().getCompareExpressionLeftAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompareExpressionAccess().getOpOperatorCompareParserRuleCall_1_0_0_1_0()); 
	    }
		lv_op_2_0=ruleOperatorCompare		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"OperatorCompare");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getCompareExpressionAccess().getRightAdditionExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleAdditionExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"AdditionExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAdditionExpression
entryRuleAdditionExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAdditionExpressionRule()); }
	 iv_ruleAdditionExpression=ruleAdditionExpression 
	 { $current=$iv_ruleAdditionExpression.current; } 
	 EOF 
;

// Rule AdditionExpression
ruleAdditionExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAdditionExpressionAccess().getMultiplicationExpressionParserRuleCall_0()); 
    }
    this_MultiplicationExpression_0=ruleMultiplicationExpression
    { 
        $current = $this_MultiplicationExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
ruleOperatorAdd
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAdditionExpressionAccess().getAdditionExpressionLeftAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditionExpressionAccess().getOpOperatorAddParserRuleCall_1_0_0_1_0()); 
	    }
		lv_op_2_0=ruleOperatorAdd		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditionExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"OperatorAdd");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditionExpressionAccess().getRightMultiplicationExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleMultiplicationExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditionExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"MultiplicationExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleMultiplicationExpression
entryRuleMultiplicationExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiplicationExpressionRule()); }
	 iv_ruleMultiplicationExpression=ruleMultiplicationExpression 
	 { $current=$iv_ruleMultiplicationExpression.current; } 
	 EOF 
;

// Rule MultiplicationExpression
ruleMultiplicationExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMultiplicationExpressionAccess().getUnaryExpressionParserRuleCall_0()); 
    }
    this_UnaryExpression_0=ruleUnaryExpression
    { 
        $current = $this_UnaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
ruleOperatorMultiply
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMultiplicationExpressionAccess().getMultiplicationExpressionLeftAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicationExpressionAccess().getOpOperatorMultiplyParserRuleCall_1_0_0_1_0()); 
	    }
		lv_op_2_0=ruleOperatorMultiply		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicationExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"OperatorMultiply");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicationExpressionAccess().getRightUnaryExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicationExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"UnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnaryExpressionRule()); }
	 iv_ruleUnaryExpression=ruleUnaryExpression 
	 { $current=$iv_ruleUnaryExpression.current; } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpOperatorUnaryParserRuleCall_0_0()); 
	    }
		lv_op_0_0=ruleOperatorUnary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_0_0, 
        		"OperatorUnary");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOperandPrimaryExpressionParserRuleCall_1_0()); 
	    }
		lv_operand_1_0=rulePrimaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_1_0, 
        		"PrimaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	 iv_rulePrimaryExpression=rulePrimaryExpression 
	 { $current=$iv_rulePrimaryExpression.current; } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getAtomicAtomicExpressionParserRuleCall_0_0()); 
	    }
		lv_atomic_0_0=ruleAtomicExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"atomic",
        		lv_atomic_0_0, 
        		"AtomicExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getExpressionOrExpressionParserRuleCall_1_1_0()); 
	    }
		lv_expression_2_0=ruleOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"OrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_2());
    }
))
;





// Entry rule entryRuleAtomicExpression
entryRuleAtomicExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAtomicExpressionRule()); }
	 iv_ruleAtomicExpression=ruleAtomicExpression 
	 { $current=$iv_ruleAtomicExpression.current; } 
	 EOF 
;

// Rule AtomicExpression
ruleAtomicExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_true_0_0=	'true' 
    {
        newLeafNode(lv_true_0_0, grammarAccess.getAtomicExpressionAccess().getTrueTrueKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicExpressionRule());
	        }
       		setWithLastConsumed($current, "true", lv_true_0_0, "true");
	    }

)
)
    |(
(
		lv_false_1_0=	'false' 
    {
        newLeafNode(lv_false_1_0, grammarAccess.getAtomicExpressionAccess().getFalseFalseKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicExpressionRule());
	        }
       		setWithLastConsumed($current, "false", lv_false_1_0, "false");
	    }

)
)
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAtomicExpressionAccess().getVariableVariableCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_valueString_3_0=RULE_STRING
		{
			newLeafNode(lv_valueString_3_0, grammarAccess.getAtomicExpressionAccess().getValueStringSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"valueString",
        		lv_valueString_3_0, 
        		"STRING");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAtomicExpressionAccess().getValueRealNumberRealNumberParserRuleCall_4_0()); 
	    }
		lv_valueRealNumber_4_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomicExpressionRule());
	        }
       		set(
       			$current, 
       			"valueRealNumber",
        		lv_valueRealNumber_4_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAlgorithmOperation
entryRuleAlgorithmOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAlgorithmOperationRule()); }
	 iv_ruleAlgorithmOperation=ruleAlgorithmOperation 
	 { $current=$iv_ruleAlgorithmOperation.current; } 
	 EOF 
;

// Rule AlgorithmOperation
ruleAlgorithmOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAlgorithmOperationAccess().getFileoperationFileOperationParserRuleCall_0_0()); 
	    }
		lv_fileoperation_0_0=ruleFileOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlgorithmOperationRule());
	        }
       		set(
       			$current, 
       			"fileoperation",
        		lv_fileoperation_0_0, 
        		"FileOperation");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAlgorithmOperationAccess().getDiroperationDirOperationParserRuleCall_1_0()); 
	    }
		lv_diroperation_1_0=ruleDirOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlgorithmOperationRule());
	        }
       		set(
       			$current, 
       			"diroperation",
        		lv_diroperation_1_0, 
        		"DirOperation");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAlgorithmOperationAccess().getSimpleuiSimpleUIParserRuleCall_2_0()); 
	    }
		lv_simpleui_2_0=ruleSimpleUI		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlgorithmOperationRule());
	        }
       		set(
       			$current, 
       			"simpleui",
        		lv_simpleui_2_0, 
        		"SimpleUI");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAlgorithmOperationAccess().getModeloperationModelOperationParserRuleCall_3_0()); 
	    }
		lv_modeloperation_3_0=ruleModelOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlgorithmOperationRule());
	        }
       		set(
       			$current, 
       			"modeloperation",
        		lv_modeloperation_3_0, 
        		"ModelOperation");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAlgorithmOperationAccess().getInstanceoperationInstanceOperationParserRuleCall_4_0()); 
	    }
		lv_instanceoperation_4_0=ruleInstanceOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlgorithmOperationRule());
	        }
       		set(
       			$current, 
       			"instanceoperation",
        		lv_instanceoperation_4_0, 
        		"InstanceOperation");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAlgorithmOperationAccess().getAttributeoperationAttributeOperationParserRuleCall_5_0()); 
	    }
		lv_attributeoperation_5_0=ruleAttributeOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlgorithmOperationRule());
	        }
       		set(
       			$current, 
       			"attributeoperation",
        		lv_attributeoperation_5_0, 
        		"AttributeOperation");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFileOperation
entryRuleFileOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFileOperationRule()); }
	 iv_ruleFileOperation=ruleFileOperation 
	 { $current=$iv_ruleFileOperation.current; } 
	 EOF 
;

// Rule FileOperation
ruleFileOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='file' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFileOperationAccess().getFileKeyword_0());
    }
	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFileOperationAccess().getFullStopKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFileOperationAccess().getFilecopyFileCopyParserRuleCall_2_0_0()); 
	    }
		lv_filecopy_2_0=ruleFileCopy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFileOperationRule());
	        }
       		set(
       			$current, 
       			"filecopy",
        		lv_filecopy_2_0, 
        		"FileCopy");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFileOperationAccess().getFiledeleteFileDeleteParserRuleCall_2_1_0()); 
	    }
		lv_filedelete_3_0=ruleFileDelete		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFileOperationRule());
	        }
       		set(
       			$current, 
       			"filedelete",
        		lv_filedelete_3_0, 
        		"FileDelete");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFileOperationAccess().getFilecreateFileCreateParserRuleCall_2_2_0()); 
	    }
		lv_filecreate_4_0=ruleFileCreate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFileOperationRule());
	        }
       		set(
       			$current, 
       			"filecreate",
        		lv_filecreate_4_0, 
        		"FileCreate");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFileOperationAccess().getFilereadFileReadParserRuleCall_2_3_0()); 
	    }
		lv_fileread_5_0=ruleFileRead		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFileOperationRule());
	        }
       		set(
       			$current, 
       			"fileread",
        		lv_fileread_5_0, 
        		"FileRead");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFileOperationAccess().getFilewriteFileWriteParserRuleCall_2_4_0()); 
	    }
		lv_filewrite_6_0=ruleFileWrite		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFileOperationRule());
	        }
       		set(
       			$current, 
       			"filewrite",
        		lv_filewrite_6_0, 
        		"FileWrite");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleFileCopy
entryRuleFileCopy returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFileCopyRule()); }
	 iv_ruleFileCopy=ruleFileCopy 
	 { $current=$iv_ruleFileCopy.current; } 
	 EOF 
;

// Rule FileCopy
ruleFileCopy returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='copy' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFileCopyAccess().getCopyKeyword_0());
    }
	otherlv_1='source' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFileCopyAccess().getSourceKeyword_1());
    }
(
(
		lv_src_2_0=RULE_STRING
		{
			newLeafNode(lv_src_2_0, grammarAccess.getFileCopyAccess().getSrcSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFileCopyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"src",
        		lv_src_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='destination' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFileCopyAccess().getDestinationKeyword_3());
    }
(
(
		lv_dest_4_0=RULE_STRING
		{
			newLeafNode(lv_dest_4_0, grammarAccess.getFileCopyAccess().getDestSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFileCopyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dest",
        		lv_dest_4_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleFileDelete
entryRuleFileDelete returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFileDeleteRule()); }
	 iv_ruleFileDelete=ruleFileDelete 
	 { $current=$iv_ruleFileDelete.current; } 
	 EOF 
;

// Rule FileDelete
ruleFileDelete returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='delete' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFileDeleteAccess().getDeleteKeyword_0());
    }
(
(
		lv_filename_1_0=RULE_STRING
		{
			newLeafNode(lv_filename_1_0, grammarAccess.getFileDeleteAccess().getFilenameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFileDeleteRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"filename",
        		lv_filename_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleFileCreate
entryRuleFileCreate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFileCreateRule()); }
	 iv_ruleFileCreate=ruleFileCreate 
	 { $current=$iv_ruleFileCreate.current; } 
	 EOF 
;

// Rule FileCreate
ruleFileCreate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='create' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFileCreateAccess().getCreateKeyword_0());
    }
(
(
		lv_filename_1_0=RULE_STRING
		{
			newLeafNode(lv_filename_1_0, grammarAccess.getFileCreateAccess().getFilenameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFileCreateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"filename",
        		lv_filename_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleFileRead
entryRuleFileRead returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFileReadRule()); }
	 iv_ruleFileRead=ruleFileRead 
	 { $current=$iv_ruleFileRead.current; } 
	 EOF 
;

// Rule FileRead
ruleFileRead returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='read' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFileReadAccess().getReadKeyword_0());
    }
(
(
		lv_filename_1_0=RULE_STRING
		{
			newLeafNode(lv_filename_1_0, grammarAccess.getFileReadAccess().getFilenameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFileReadRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"filename",
        		lv_filename_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleFileWrite
entryRuleFileWrite returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFileWriteRule()); }
	 iv_ruleFileWrite=ruleFileWrite 
	 { $current=$iv_ruleFileWrite.current; } 
	 EOF 
;

// Rule FileWrite
ruleFileWrite returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='write' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFileWriteAccess().getWriteKeyword_0());
    }
(
(
		lv_filename_1_0=RULE_STRING
		{
			newLeafNode(lv_filename_1_0, grammarAccess.getFileWriteAccess().getFilenameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFileWriteRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"filename",
        		lv_filename_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='text' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFileWriteAccess().getTextKeyword_2());
    }
(
(
		lv_text_3_0=RULE_STRING
		{
			newLeafNode(lv_text_3_0, grammarAccess.getFileWriteAccess().getTextSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFileWriteRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"text",
        		lv_text_3_0, 
        		"STRING");
	    }

)
)(
(
		lv_append_4_0=	'append' 
    {
        newLeafNode(lv_append_4_0, grammarAccess.getFileWriteAccess().getAppendAppendKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFileWriteRule());
	        }
       		setWithLastConsumed($current, "append", lv_append_4_0, "append");
	    }

)
)?)
;





// Entry rule entryRuleDirOperation
entryRuleDirOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDirOperationRule()); }
	 iv_ruleDirOperation=ruleDirOperation 
	 { $current=$iv_ruleDirOperation.current; } 
	 EOF 
;

// Rule DirOperation
ruleDirOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='dir' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDirOperationAccess().getDirKeyword_0());
    }
	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDirOperationAccess().getFullStopKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDirOperationAccess().getDirsetworkingDirSetWorkingParserRuleCall_2_0_0()); 
	    }
		lv_dirsetworking_2_0=ruleDirSetWorking		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDirOperationRule());
	        }
       		set(
       			$current, 
       			"dirsetworking",
        		lv_dirsetworking_2_0, 
        		"DirSetWorking");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDirOperationAccess().getDirgetworkingDirGetWorkingParserRuleCall_2_1_0()); 
	    }
		lv_dirgetworking_3_0=ruleDirGetWorking		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDirOperationRule());
	        }
       		set(
       			$current, 
       			"dirgetworking",
        		lv_dirgetworking_3_0, 
        		"DirGetWorking");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDirOperationAccess().getDircreateDirCreateParserRuleCall_2_2_0()); 
	    }
		lv_dircreate_4_0=ruleDirCreate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDirOperationRule());
	        }
       		set(
       			$current, 
       			"dircreate",
        		lv_dircreate_4_0, 
        		"DirCreate");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDirOperationAccess().getDirdeleteDirDeleteParserRuleCall_2_3_0()); 
	    }
		lv_dirdelete_5_0=ruleDirDelete		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDirOperationRule());
	        }
       		set(
       			$current, 
       			"dirdelete",
        		lv_dirdelete_5_0, 
        		"DirDelete");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDirOperationAccess().getDirlistDirListParserRuleCall_2_4_0()); 
	    }
		lv_dirlist_6_0=ruleDirList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDirOperationRule());
	        }
       		set(
       			$current, 
       			"dirlist",
        		lv_dirlist_6_0, 
        		"DirList");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleDirSetWorking
entryRuleDirSetWorking returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDirSetWorkingRule()); }
	 iv_ruleDirSetWorking=ruleDirSetWorking 
	 { $current=$iv_ruleDirSetWorking.current; } 
	 EOF 
;

// Rule DirSetWorking
ruleDirSetWorking returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='set' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDirSetWorkingAccess().getSetKeyword_0());
    }
(
(
		lv_dirname_1_0=RULE_STRING
		{
			newLeafNode(lv_dirname_1_0, grammarAccess.getDirSetWorkingAccess().getDirnameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDirSetWorkingRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dirname",
        		lv_dirname_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleDirGetWorking
entryRuleDirGetWorking returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDirGetWorkingRule()); }
	 iv_ruleDirGetWorking=ruleDirGetWorking 
	 { $current=$iv_ruleDirGetWorking.current; } 
	 EOF 
;

// Rule DirGetWorking
ruleDirGetWorking returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDirGetWorkingAccess().getDirGetWorkingAction_0(),
            $current);
    }
)	otherlv_1='get' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDirGetWorkingAccess().getGetKeyword_1());
    }
)
;





// Entry rule entryRuleDirCreate
entryRuleDirCreate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDirCreateRule()); }
	 iv_ruleDirCreate=ruleDirCreate 
	 { $current=$iv_ruleDirCreate.current; } 
	 EOF 
;

// Rule DirCreate
ruleDirCreate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='create' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDirCreateAccess().getCreateKeyword_0());
    }
(
(
		lv_dirname_1_0=RULE_STRING
		{
			newLeafNode(lv_dirname_1_0, grammarAccess.getDirCreateAccess().getDirnameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDirCreateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dirname",
        		lv_dirname_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleDirDelete
entryRuleDirDelete returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDirDeleteRule()); }
	 iv_ruleDirDelete=ruleDirDelete 
	 { $current=$iv_ruleDirDelete.current; } 
	 EOF 
;

// Rule DirDelete
ruleDirDelete returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='delete' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDirDeleteAccess().getDeleteKeyword_0());
    }
(
(
		lv_dirname_1_0=RULE_STRING
		{
			newLeafNode(lv_dirname_1_0, grammarAccess.getDirDeleteAccess().getDirnameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDirDeleteRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dirname",
        		lv_dirname_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleDirList
entryRuleDirList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDirListRule()); }
	 iv_ruleDirList=ruleDirList 
	 { $current=$iv_ruleDirList.current; } 
	 EOF 
;

// Rule DirList
ruleDirList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='list' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDirListAccess().getListKeyword_0());
    }
(
(
		lv_dirname_1_0=RULE_STRING
		{
			newLeafNode(lv_dirname_1_0, grammarAccess.getDirListAccess().getDirnameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDirListRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dirname",
        		lv_dirname_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleSimpleUI
entryRuleSimpleUI returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleUIRule()); }
	 iv_ruleSimpleUI=ruleSimpleUI 
	 { $current=$iv_ruleSimpleUI.current; } 
	 EOF 
;

// Rule SimpleUI
ruleSimpleUI returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ui' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSimpleUIAccess().getUiKeyword_0());
    }
	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSimpleUIAccess().getFullStopKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleUIAccess().getEditboxEditBoxParserRuleCall_2_0_0()); 
	    }
		lv_editbox_2_0=ruleEditBox		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleUIRule());
	        }
       		set(
       			$current, 
       			"editbox",
        		lv_editbox_2_0, 
        		"EditBox");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleUIAccess().getInfoboxInfoBoxParserRuleCall_2_1_0()); 
	    }
		lv_infobox_3_0=ruleInfoBox		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleUIRule());
	        }
       		set(
       			$current, 
       			"infobox",
        		lv_infobox_3_0, 
        		"InfoBox");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleUIAccess().getErrorboxErrorBoxParserRuleCall_2_2_0()); 
	    }
		lv_errorbox_4_0=ruleErrorBox		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleUIRule());
	        }
       		set(
       			$current, 
       			"errorbox",
        		lv_errorbox_4_0, 
        		"ErrorBox");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleUIAccess().getWarningboxWarningBoxParserRuleCall_2_3_0()); 
	    }
		lv_warningbox_5_0=ruleWarningBox		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleUIRule());
	        }
       		set(
       			$current, 
       			"warningbox",
        		lv_warningbox_5_0, 
        		"WarningBox");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleUIAccess().getViewboxViewBoxParserRuleCall_2_4_0()); 
	    }
		lv_viewbox_6_0=ruleViewBox		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleUIRule());
	        }
       		set(
       			$current, 
       			"viewbox",
        		lv_viewbox_6_0, 
        		"ViewBox");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleUIAccess().getItemoperationItemOperationParserRuleCall_2_5_0()); 
	    }
		lv_itemoperation_7_0=ruleItemOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleUIRule());
	        }
       		set(
       			$current, 
       			"itemoperation",
        		lv_itemoperation_7_0, 
        		"ItemOperation");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleEditBox
entryRuleEditBox returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEditBoxRule()); }
	 iv_ruleEditBox=ruleEditBox 
	 { $current=$iv_ruleEditBox.current; } 
	 EOF 
;

// Rule EditBox
ruleEditBox returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='editbox' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEditBoxAccess().getEditboxKeyword_0());
    }
	otherlv_1='title' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEditBoxAccess().getTitleKeyword_1());
    }
(
(
		lv_title_2_0=RULE_STRING
		{
			newLeafNode(lv_title_2_0, grammarAccess.getEditBoxAccess().getTitleSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEditBoxRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='text' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEditBoxAccess().getTextKeyword_3());
    }
(
(
		lv_text_4_0=RULE_STRING
		{
			newLeafNode(lv_text_4_0, grammarAccess.getEditBoxAccess().getTextSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEditBoxRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"text",
        		lv_text_4_0, 
        		"STRING");
	    }

)
)(	otherlv_5='button' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEditBoxAccess().getButtonKeyword_5_0());
    }
(
(
		lv_okbuttontext_6_0=RULE_STRING
		{
			newLeafNode(lv_okbuttontext_6_0, grammarAccess.getEditBoxAccess().getOkbuttontextSTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEditBoxRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"okbuttontext",
        		lv_okbuttontext_6_0, 
        		"STRING");
	    }

)
))?)
;





// Entry rule entryRuleInfoBox
entryRuleInfoBox returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInfoBoxRule()); }
	 iv_ruleInfoBox=ruleInfoBox 
	 { $current=$iv_ruleInfoBox.current; } 
	 EOF 
;

// Rule InfoBox
ruleInfoBox returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='infobox' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInfoBoxAccess().getInfoboxKeyword_0());
    }
	otherlv_1='title' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInfoBoxAccess().getTitleKeyword_1());
    }
(
(
		lv_title_2_0=RULE_STRING
		{
			newLeafNode(lv_title_2_0, grammarAccess.getInfoBoxAccess().getTitleSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInfoBoxRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='text' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInfoBoxAccess().getTextKeyword_3());
    }
(
(
		lv_text_4_0=RULE_STRING
		{
			newLeafNode(lv_text_4_0, grammarAccess.getInfoBoxAccess().getTextSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInfoBoxRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"text",
        		lv_text_4_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleErrorBox
entryRuleErrorBox returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getErrorBoxRule()); }
	 iv_ruleErrorBox=ruleErrorBox 
	 { $current=$iv_ruleErrorBox.current; } 
	 EOF 
;

// Rule ErrorBox
ruleErrorBox returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='errorbox' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getErrorBoxAccess().getErrorboxKeyword_0());
    }
	otherlv_1='title' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getErrorBoxAccess().getTitleKeyword_1());
    }
(
(
		lv_title_2_0=RULE_STRING
		{
			newLeafNode(lv_title_2_0, grammarAccess.getErrorBoxAccess().getTitleSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getErrorBoxRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='text' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getErrorBoxAccess().getTextKeyword_3());
    }
(
(
		lv_text_4_0=RULE_STRING
		{
			newLeafNode(lv_text_4_0, grammarAccess.getErrorBoxAccess().getTextSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getErrorBoxRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"text",
        		lv_text_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='button' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getErrorBoxAccess().getButtonKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getErrorBoxAccess().getButtontypeButtonTypeEnumRuleCall_6_0()); 
	    }
		lv_buttontype_6_0=ruleButtonType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getErrorBoxRule());
	        }
       		set(
       			$current, 
       			"buttontype",
        		lv_buttontype_6_0, 
        		"ButtonType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleWarningBox
entryRuleWarningBox returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWarningBoxRule()); }
	 iv_ruleWarningBox=ruleWarningBox 
	 { $current=$iv_ruleWarningBox.current; } 
	 EOF 
;

// Rule WarningBox
ruleWarningBox returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='warningbox' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWarningBoxAccess().getWarningboxKeyword_0());
    }
	otherlv_1='title' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWarningBoxAccess().getTitleKeyword_1());
    }
(
(
		lv_title_2_0=RULE_STRING
		{
			newLeafNode(lv_title_2_0, grammarAccess.getWarningBoxAccess().getTitleSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWarningBoxRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='text' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWarningBoxAccess().getTextKeyword_3());
    }
(
(
		lv_text_4_0=RULE_STRING
		{
			newLeafNode(lv_text_4_0, grammarAccess.getWarningBoxAccess().getTextSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWarningBoxRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"text",
        		lv_text_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='button' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getWarningBoxAccess().getButtonKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWarningBoxAccess().getButtontypeButtonTypeEnumRuleCall_6_0()); 
	    }
		lv_buttontype_6_0=ruleButtonType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWarningBoxRule());
	        }
       		set(
       			$current, 
       			"buttontype",
        		lv_buttontype_6_0, 
        		"ButtonType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleViewBox
entryRuleViewBox returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getViewBoxRule()); }
	 iv_ruleViewBox=ruleViewBox 
	 { $current=$iv_ruleViewBox.current; } 
	 EOF 
;

// Rule ViewBox
ruleViewBox returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='viewbox' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getViewBoxAccess().getViewboxKeyword_0());
    }
	otherlv_1='title' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getViewBoxAccess().getTitleKeyword_1());
    }
(
(
		lv_title_2_0=RULE_STRING
		{
			newLeafNode(lv_title_2_0, grammarAccess.getViewBoxAccess().getTitleSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getViewBoxRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='text' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getViewBoxAccess().getTextKeyword_3());
    }
(
(
		lv_text_4_0=RULE_STRING
		{
			newLeafNode(lv_text_4_0, grammarAccess.getViewBoxAccess().getTextSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getViewBoxRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"text",
        		lv_text_4_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleItemOperation
entryRuleItemOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getItemOperationRule()); }
	 iv_ruleItemOperation=ruleItemOperation 
	 { $current=$iv_ruleItemOperation.current; } 
	 EOF 
;

// Rule ItemOperation
ruleItemOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='item' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getItemOperationAccess().getItemKeyword_0());
    }
	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getItemOperationAccess().getFullStopKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getItemOperationAccess().getMenuitemMenuItemParserRuleCall_2_0_0()); 
	    }
		lv_menuitem_2_0=ruleMenuItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getItemOperationRule());
	        }
       		set(
       			$current, 
       			"menuitem",
        		lv_menuitem_2_0, 
        		"MenuItem");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getItemOperationAccess().getContextitemContextItemParserRuleCall_2_1_0()); 
	    }
		lv_contextitem_3_0=ruleContextItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getItemOperationRule());
	        }
       		set(
       			$current, 
       			"contextitem",
        		lv_contextitem_3_0, 
        		"ContextItem");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleMenuItem
entryRuleMenuItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMenuItemRule()); }
	 iv_ruleMenuItem=ruleMenuItem 
	 { $current=$iv_ruleMenuItem.current; } 
	 EOF 
;

// Rule MenuItem
ruleMenuItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='menu' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMenuItemAccess().getMenuKeyword_0());
    }
	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMenuItemAccess().getFullStopKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getMenuItemAccess().getInsertmenuitemInsertMenuItemParserRuleCall_2_0_0()); 
	    }
		lv_insertmenuitem_2_0=ruleInsertMenuItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMenuItemRule());
	        }
       		set(
       			$current, 
       			"insertmenuitem",
        		lv_insertmenuitem_2_0, 
        		"InsertMenuItem");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMenuItemAccess().getRemovemenuitemRemoveMenuItemParserRuleCall_2_1_0()); 
	    }
		lv_removemenuitem_3_0=ruleRemoveMenuItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMenuItemRule());
	        }
       		set(
       			$current, 
       			"removemenuitem",
        		lv_removemenuitem_3_0, 
        		"RemoveMenuItem");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleInsertMenuItem
entryRuleInsertMenuItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInsertMenuItemRule()); }
	 iv_ruleInsertMenuItem=ruleInsertMenuItem 
	 { $current=$iv_ruleInsertMenuItem.current; } 
	 EOF 
;

// Rule InsertMenuItem
ruleInsertMenuItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='insert' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInsertMenuItemAccess().getInsertKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInsertMenuItemAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInsertMenuItemRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='to' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInsertMenuItemAccess().getToKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInsertMenuItemAccess().getMenuValidIDParserRuleCall_3_0()); 
	    }
		lv_menu_3_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInsertMenuItemRule());
	        }
       		set(
       			$current, 
       			"menu",
        		lv_menu_3_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRemoveMenuItem
entryRuleRemoveMenuItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRemoveMenuItemRule()); }
	 iv_ruleRemoveMenuItem=ruleRemoveMenuItem 
	 { $current=$iv_ruleRemoveMenuItem.current; } 
	 EOF 
;

// Rule RemoveMenuItem
ruleRemoveMenuItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='remove' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRemoveMenuItemAccess().getRemoveKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRemoveMenuItemRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRemoveMenuItemAccess().getMenuitemnameInsertMenuItemCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleContextItem
entryRuleContextItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContextItemRule()); }
	 iv_ruleContextItem=ruleContextItem 
	 { $current=$iv_ruleContextItem.current; } 
	 EOF 
;

// Rule ContextItem
ruleContextItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='context' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getContextItemAccess().getContextKeyword_0());
    }
	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getContextItemAccess().getFullStopKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getContextItemAccess().getInsertcontextitemInsertContextItemParserRuleCall_2_0_0()); 
	    }
		lv_insertcontextitem_2_0=ruleInsertContextItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContextItemRule());
	        }
       		set(
       			$current, 
       			"insertcontextitem",
        		lv_insertcontextitem_2_0, 
        		"InsertContextItem");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getContextItemAccess().getRemovecontextitemRemoveContextItemParserRuleCall_2_1_0()); 
	    }
		lv_removecontextitem_3_0=ruleRemoveContextItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContextItemRule());
	        }
       		set(
       			$current, 
       			"removecontextitem",
        		lv_removecontextitem_3_0, 
        		"RemoveContextItem");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleInsertContextItem
entryRuleInsertContextItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInsertContextItemRule()); }
	 iv_ruleInsertContextItem=ruleInsertContextItem 
	 { $current=$iv_ruleInsertContextItem.current; } 
	 EOF 
;

// Rule InsertContextItem
ruleInsertContextItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='insert' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInsertContextItemAccess().getInsertKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInsertContextItemAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInsertContextItemRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='to' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInsertContextItemAccess().getToKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInsertContextItemAccess().getContextValidIDParserRuleCall_3_0()); 
	    }
		lv_context_3_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInsertContextItemRule());
	        }
       		set(
       			$current, 
       			"context",
        		lv_context_3_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRemoveContextItem
entryRuleRemoveContextItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRemoveContextItemRule()); }
	 iv_ruleRemoveContextItem=ruleRemoveContextItem 
	 { $current=$iv_ruleRemoveContextItem.current; } 
	 EOF 
;

// Rule RemoveContextItem
ruleRemoveContextItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='remove' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRemoveContextItemAccess().getRemoveKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRemoveContextItemRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRemoveContextItemAccess().getContextitemInsertContextItemCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleModelOperation
entryRuleModelOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelOperationRule()); }
	 iv_ruleModelOperation=ruleModelOperation 
	 { $current=$iv_ruleModelOperation.current; } 
	 EOF 
;

// Rule ModelOperation
ruleModelOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='model' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModelOperationAccess().getModelKeyword_0());
    }
	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getModelOperationAccess().getFullStopKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getModelOperationAccess().getModelcreateModelCreateParserRuleCall_2_0_0()); 
	    }
		lv_modelcreate_2_0=ruleModelCreate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelOperationRule());
	        }
       		set(
       			$current, 
       			"modelcreate",
        		lv_modelcreate_2_0, 
        		"ModelCreate");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModelOperationAccess().getModeldeleteModelDeleteParserRuleCall_2_1_0()); 
	    }
		lv_modeldelete_3_0=ruleModelDelete		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelOperationRule());
	        }
       		set(
       			$current, 
       			"modeldelete",
        		lv_modeldelete_3_0, 
        		"ModelDelete");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModelOperationAccess().getModeldiscardModelDiscardParserRuleCall_2_2_0()); 
	    }
		lv_modeldiscard_4_0=ruleModelDiscard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelOperationRule());
	        }
       		set(
       			$current, 
       			"modeldiscard",
        		lv_modeldiscard_4_0, 
        		"ModelDiscard");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModelOperationAccess().getModelsaveModelSaveParserRuleCall_2_3_0()); 
	    }
		lv_modelsave_5_0=ruleModelSave		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelOperationRule());
	        }
       		set(
       			$current, 
       			"modelsave",
        		lv_modelsave_5_0, 
        		"ModelSave");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModelOperationAccess().getModelloadModelLoadParserRuleCall_2_4_0()); 
	    }
		lv_modelload_6_0=ruleModelLoad		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelOperationRule());
	        }
       		set(
       			$current, 
       			"modelload",
        		lv_modelload_6_0, 
        		"ModelLoad");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModelOperationAccess().getModelisloadedModelIsLoadedParserRuleCall_2_5_0()); 
	    }
		lv_modelisloaded_7_0=ruleModelIsLoaded		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelOperationRule());
	        }
       		set(
       			$current, 
       			"modelisloaded",
        		lv_modelisloaded_7_0, 
        		"ModelIsLoaded");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleModelCreate
entryRuleModelCreate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelCreateRule()); }
	 iv_ruleModelCreate=ruleModelCreate 
	 { $current=$iv_ruleModelCreate.current; } 
	 EOF 
;

// Rule ModelCreate
ruleModelCreate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='create' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModelCreateAccess().getCreateKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelCreateAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelCreateRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelCreateRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getModelCreateAccess().getModeltypeModelTypeCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleModelDelete
entryRuleModelDelete returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelDeleteRule()); }
	 iv_ruleModelDelete=ruleModelDelete 
	 { $current=$iv_ruleModelDelete.current; } 
	 EOF 
;

// Rule ModelDelete
ruleModelDelete returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='delete' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModelDeleteAccess().getDeleteKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelDeleteRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getModelDeleteAccess().getModelnameModelCreateCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleModelDiscard
entryRuleModelDiscard returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelDiscardRule()); }
	 iv_ruleModelDiscard=ruleModelDiscard 
	 { $current=$iv_ruleModelDiscard.current; } 
	 EOF 
;

// Rule ModelDiscard
ruleModelDiscard returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='discard' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModelDiscardAccess().getDiscardKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelDiscardRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getModelDiscardAccess().getModelnameModelCreateCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleModelSave
entryRuleModelSave returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelSaveRule()); }
	 iv_ruleModelSave=ruleModelSave 
	 { $current=$iv_ruleModelSave.current; } 
	 EOF 
;

// Rule ModelSave
ruleModelSave returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='save' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModelSaveAccess().getSaveKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelSaveRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getModelSaveAccess().getModelnameModelCreateCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleModelLoad
entryRuleModelLoad returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelLoadRule()); }
	 iv_ruleModelLoad=ruleModelLoad 
	 { $current=$iv_ruleModelLoad.current; } 
	 EOF 
;

// Rule ModelLoad
ruleModelLoad returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='load' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModelLoadAccess().getLoadKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelLoadRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getModelLoadAccess().getModelnameModelCreateCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleModelIsLoaded
entryRuleModelIsLoaded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelIsLoadedRule()); }
	 iv_ruleModelIsLoaded=ruleModelIsLoaded 
	 { $current=$iv_ruleModelIsLoaded.current; } 
	 EOF 
;

// Rule ModelIsLoaded
ruleModelIsLoaded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='isloaded' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModelIsLoadedAccess().getIsloadedKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelIsLoadedRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getModelIsLoadedAccess().getModelnameModelCreateCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstanceOperation
entryRuleInstanceOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstanceOperationRule()); }
	 iv_ruleInstanceOperation=ruleInstanceOperation 
	 { $current=$iv_ruleInstanceOperation.current; } 
	 EOF 
;

// Rule InstanceOperation
ruleInstanceOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='instance' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInstanceOperationAccess().getInstanceKeyword_0());
    }
	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInstanceOperationAccess().getFullStopKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceOperationAccess().getClassinstanceClassInstanceParserRuleCall_2_0_0()); 
	    }
		lv_classinstance_2_0=ruleClassInstance		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceOperationRule());
	        }
       		set(
       			$current, 
       			"classinstance",
        		lv_classinstance_2_0, 
        		"ClassInstance");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceOperationAccess().getRelationinstanceRelationInstanceParserRuleCall_2_1_0()); 
	    }
		lv_relationinstance_3_0=ruleRelationInstance		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceOperationRule());
	        }
       		set(
       			$current, 
       			"relationinstance",
        		lv_relationinstance_3_0, 
        		"RelationInstance");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleClassInstance
entryRuleClassInstance returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassInstanceRule()); }
	 iv_ruleClassInstance=ruleClassInstance 
	 { $current=$iv_ruleClassInstance.current; } 
	 EOF 
;

// Rule ClassInstance
ruleClassInstance returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='class' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClassInstanceAccess().getClassKeyword_0());
    }
	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getClassInstanceAccess().getFullStopKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getClassInstanceAccess().getClassinstancecreateClassInstanceCreateParserRuleCall_2_0_0()); 
	    }
		lv_classinstancecreate_2_0=ruleClassInstanceCreate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassInstanceRule());
	        }
       		set(
       			$current, 
       			"classinstancecreate",
        		lv_classinstancecreate_2_0, 
        		"ClassInstanceCreate");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getClassInstanceAccess().getClassinstancedeleteClassInstanceDeleteParserRuleCall_2_1_0()); 
	    }
		lv_classinstancedelete_3_0=ruleClassInstanceDelete		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassInstanceRule());
	        }
       		set(
       			$current, 
       			"classinstancedelete",
        		lv_classinstancedelete_3_0, 
        		"ClassInstanceDelete");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getClassInstanceAccess().getClassinstancegetClassInstanceGetParserRuleCall_2_2_0()); 
	    }
		lv_classinstanceget_4_0=ruleClassInstanceGet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassInstanceRule());
	        }
       		set(
       			$current, 
       			"classinstanceget",
        		lv_classinstanceget_4_0, 
        		"ClassInstanceGet");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getClassInstanceAccess().getClassinstancesetClassInstanceSetParserRuleCall_2_3_0()); 
	    }
		lv_classinstanceset_5_0=ruleClassInstanceSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassInstanceRule());
	        }
       		set(
       			$current, 
       			"classinstanceset",
        		lv_classinstanceset_5_0, 
        		"ClassInstanceSet");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getClassInstanceAccess().getClassinstancegetallClassInstanceGetAllParserRuleCall_2_4_0()); 
	    }
		lv_classinstancegetall_6_0=ruleClassInstanceGetAll		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassInstanceRule());
	        }
       		set(
       			$current, 
       			"classinstancegetall",
        		lv_classinstancegetall_6_0, 
        		"ClassInstanceGetAll");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleClassInstanceCreate
entryRuleClassInstanceCreate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassInstanceCreateRule()); }
	 iv_ruleClassInstanceCreate=ruleClassInstanceCreate 
	 { $current=$iv_ruleClassInstanceCreate.current; } 
	 EOF 
;

// Rule ClassInstanceCreate
ruleClassInstanceCreate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='create' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClassInstanceCreateAccess().getCreateKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassInstanceCreateAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassInstanceCreateRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassInstanceCreateRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getClassInstanceCreateAccess().getNameofclassClassCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleClassInstanceDelete
entryRuleClassInstanceDelete returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassInstanceDeleteRule()); }
	 iv_ruleClassInstanceDelete=ruleClassInstanceDelete 
	 { $current=$iv_ruleClassInstanceDelete.current; } 
	 EOF 
;

// Rule ClassInstanceDelete
ruleClassInstanceDelete returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='delete' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClassInstanceDeleteAccess().getDeleteKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassInstanceDeleteRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getClassInstanceDeleteAccess().getNameofclassinstanceClassInstanceCreateCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleClassInstanceGet
entryRuleClassInstanceGet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassInstanceGetRule()); }
	 iv_ruleClassInstanceGet=ruleClassInstanceGet 
	 { $current=$iv_ruleClassInstanceGet.current; } 
	 EOF 
;

// Rule ClassInstanceGet
ruleClassInstanceGet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='get' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClassInstanceGetAccess().getGetKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassInstanceGetRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getClassInstanceGetAccess().getNameofclassinstanceClassInstanceCreateCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleClassInstanceGetAll
entryRuleClassInstanceGetAll returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassInstanceGetAllRule()); }
	 iv_ruleClassInstanceGetAll=ruleClassInstanceGetAll 
	 { $current=$iv_ruleClassInstanceGetAll.current; } 
	 EOF 
;

// Rule ClassInstanceGetAll
ruleClassInstanceGetAll returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='getall' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClassInstanceGetAllAccess().getGetallKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassInstanceGetAllRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getClassInstanceGetAllAccess().getNameofclassClassCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleClassInstanceSet
entryRuleClassInstanceSet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassInstanceSetRule()); }
	 iv_ruleClassInstanceSet=ruleClassInstanceSet 
	 { $current=$iv_ruleClassInstanceSet.current; } 
	 EOF 
;

// Rule ClassInstanceSet
ruleClassInstanceSet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='set' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClassInstanceSetAccess().getSetKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassInstanceSetRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getClassInstanceSetAccess().getNameofclassinstanceClassInstanceCreateCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRelationInstance
entryRuleRelationInstance returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationInstanceRule()); }
	 iv_ruleRelationInstance=ruleRelationInstance 
	 { $current=$iv_ruleRelationInstance.current; } 
	 EOF 
;

// Rule RelationInstance
ruleRelationInstance returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='relation' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRelationInstanceAccess().getRelationKeyword_0());
    }
	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRelationInstanceAccess().getFullStopKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRelationInstanceAccess().getRelationinstancecreateRelationInstanceCreateParserRuleCall_2_0_0()); 
	    }
		lv_relationinstancecreate_2_0=ruleRelationInstanceCreate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationInstanceRule());
	        }
       		set(
       			$current, 
       			"relationinstancecreate",
        		lv_relationinstancecreate_2_0, 
        		"RelationInstanceCreate");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationInstanceAccess().getRelationinstancedeleteRelationInstanceDeleteParserRuleCall_2_1_0()); 
	    }
		lv_relationinstancedelete_3_0=ruleRelationInstanceDelete		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationInstanceRule());
	        }
       		set(
       			$current, 
       			"relationinstancedelete",
        		lv_relationinstancedelete_3_0, 
        		"RelationInstanceDelete");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationInstanceAccess().getRelationinstancegetRelationInstanceGetParserRuleCall_2_2_0()); 
	    }
		lv_relationinstanceget_4_0=ruleRelationInstanceGet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationInstanceRule());
	        }
       		set(
       			$current, 
       			"relationinstanceget",
        		lv_relationinstanceget_4_0, 
        		"RelationInstanceGet");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationInstanceAccess().getRelationinstancesetRelationInstanceSetParserRuleCall_2_3_0()); 
	    }
		lv_relationinstanceset_5_0=ruleRelationInstanceSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationInstanceRule());
	        }
       		set(
       			$current, 
       			"relationinstanceset",
        		lv_relationinstanceset_5_0, 
        		"RelationInstanceSet");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationInstanceAccess().getRelationinstancegetallRelationInstanceGetAllParserRuleCall_2_4_0()); 
	    }
		lv_relationinstancegetall_6_0=ruleRelationInstanceGetAll		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationInstanceRule());
	        }
       		set(
       			$current, 
       			"relationinstancegetall",
        		lv_relationinstancegetall_6_0, 
        		"RelationInstanceGetAll");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleRelationInstanceCreate
entryRuleRelationInstanceCreate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationInstanceCreateRule()); }
	 iv_ruleRelationInstanceCreate=ruleRelationInstanceCreate 
	 { $current=$iv_ruleRelationInstanceCreate.current; } 
	 EOF 
;

// Rule RelationInstanceCreate
ruleRelationInstanceCreate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='create' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRelationInstanceCreateAccess().getCreateKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationInstanceCreateAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationInstanceCreateRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationInstanceCreateRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRelationInstanceCreateAccess().getNameofrelationRelationCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='from' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRelationInstanceCreateAccess().getFromKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationInstanceCreateRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRelationInstanceCreateAccess().getClassinstancefromClassInstanceCreateCrossReference_4_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='to' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRelationInstanceCreateAccess().getToKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationInstanceCreateRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRelationInstanceCreateAccess().getClassinstancetoClassInstanceCreateCrossReference_6_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRelationInstanceDelete
entryRuleRelationInstanceDelete returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationInstanceDeleteRule()); }
	 iv_ruleRelationInstanceDelete=ruleRelationInstanceDelete 
	 { $current=$iv_ruleRelationInstanceDelete.current; } 
	 EOF 
;

// Rule RelationInstanceDelete
ruleRelationInstanceDelete returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='delete' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRelationInstanceDeleteAccess().getDeleteKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationInstanceDeleteRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRelationInstanceDeleteAccess().getNameofrelationinstanceRelationInstanceCreateCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRelationInstanceGet
entryRuleRelationInstanceGet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationInstanceGetRule()); }
	 iv_ruleRelationInstanceGet=ruleRelationInstanceGet 
	 { $current=$iv_ruleRelationInstanceGet.current; } 
	 EOF 
;

// Rule RelationInstanceGet
ruleRelationInstanceGet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='get' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRelationInstanceGetAccess().getGetKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationInstanceGetRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRelationInstanceGetAccess().getNameofrelationinstanceRelationInstanceCreateCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRelationInstanceGetAll
entryRuleRelationInstanceGetAll returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationInstanceGetAllRule()); }
	 iv_ruleRelationInstanceGetAll=ruleRelationInstanceGetAll 
	 { $current=$iv_ruleRelationInstanceGetAll.current; } 
	 EOF 
;

// Rule RelationInstanceGetAll
ruleRelationInstanceGetAll returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='getall' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRelationInstanceGetAllAccess().getGetallKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationInstanceGetAllRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRelationInstanceGetAllAccess().getNameofrelationRelationCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRelationInstanceSet
entryRuleRelationInstanceSet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationInstanceSetRule()); }
	 iv_ruleRelationInstanceSet=ruleRelationInstanceSet 
	 { $current=$iv_ruleRelationInstanceSet.current; } 
	 EOF 
;

// Rule RelationInstanceSet
ruleRelationInstanceSet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='set' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRelationInstanceSetAccess().getSetKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationInstanceSetRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRelationInstanceSetAccess().getNameofrelationinstanceRelationInstanceCreateCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAttributeOperation
entryRuleAttributeOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeOperationRule()); }
	 iv_ruleAttributeOperation=ruleAttributeOperation 
	 { $current=$iv_ruleAttributeOperation.current; } 
	 EOF 
;

// Rule AttributeOperation
ruleAttributeOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeOperationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAttributeOperationAccess().getAttributenameAttributeCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAttributeOperationAccess().getFullStopKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeOperationAccess().getAttributegetAttributeGetParserRuleCall_2_0_0()); 
	    }
		lv_attributeget_2_0=ruleAttributeGet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeOperationRule());
	        }
       		set(
       			$current, 
       			"attributeget",
        		lv_attributeget_2_0, 
        		"AttributeGet");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeOperationAccess().getAttributesetAttributeSetParserRuleCall_2_1_0()); 
	    }
		lv_attributeset_3_0=ruleAttributeSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeOperationRule());
	        }
       		set(
       			$current, 
       			"attributeset",
        		lv_attributeset_3_0, 
        		"AttributeSet");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleAttributeGet
entryRuleAttributeGet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeGetRule()); }
	 iv_ruleAttributeGet=ruleAttributeGet 
	 { $current=$iv_ruleAttributeGet.current; } 
	 EOF 
;

// Rule AttributeGet
ruleAttributeGet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='get' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeGetAccess().getGetKeyword_0());
    }
	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAttributeGetAccess().getFullStopKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeGetAccess().getAttrgetparamsAttrGetParamsEnumRuleCall_2_0()); 
	    }
		lv_attrgetparams_2_0=ruleAttrGetParams		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeGetRule());
	        }
       		set(
       			$current, 
       			"attrgetparams",
        		lv_attrgetparams_2_0, 
        		"AttrGetParams");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAttributeSet
entryRuleAttributeSet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeSetRule()); }
	 iv_ruleAttributeSet=ruleAttributeSet 
	 { $current=$iv_ruleAttributeSet.current; } 
	 EOF 
;

// Rule AttributeSet
ruleAttributeSet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='set' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeSetAccess().getSetKeyword_0());
    }
	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAttributeSetAccess().getFullStopKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeSetAccess().getAttrsetparamsAttrSetParamsEnumRuleCall_2_0()); 
	    }
		lv_attrsetparams_2_0=ruleAttrSetParams		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeSetRule());
	        }
       		set(
       			$current, 
       			"attrsetparams",
        		lv_attrsetparams_2_0, 
        		"AttrSetParams");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_valueString_3_0=RULE_STRING
		{
			newLeafNode(lv_valueString_3_0, grammarAccess.getAttributeSetAccess().getValueStringSTRINGTerminalRuleCall_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeSetRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"valueString",
        		lv_valueString_3_0, 
        		"STRING");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeSetAccess().getValueRealNumberRealNumberParserRuleCall_3_1_0()); 
	    }
		lv_valueRealNumber_4_0=ruleRealNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeSetRule());
	        }
       		set(
       			$current, 
       			"valueRealNumber",
        		lv_valueRealNumber_4_0, 
        		"RealNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeSetRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAttributeSetAccess().getValueVariableVariableCrossReference_3_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleEvent
entryRuleEvent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEventRule()); }
	 iv_ruleEvent=ruleEvent 
	 { $current=$iv_ruleEvent.current; } 
	 EOF 
;

// Rule Event
ruleEvent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='event' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEventAccess().getEventKeyword_0());
    }
	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEventAccess().getFullStopKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEventAccess().getNameEventNameEnumRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEventName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EventName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='.' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEventAccess().getFullStopKeyword_3());
    }
	otherlv_4='execute' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEventAccess().getExecuteKeyword_4());
    }
	otherlv_5='.' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEventAccess().getFullStopKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getEventAccess().getAlgorithmnameAlgorithmCrossReference_6_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRealNumber
entryRuleRealNumber returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealNumberRule()); } 
	 iv_ruleRealNumber=ruleRealNumber 
	 { $current=$iv_ruleRealNumber.current.getText(); }  
	 EOF 
;

// Rule RealNumber
ruleRealNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRealNumberAccess().getHyphenMinusKeyword_0()); 
    }
)?
    { 
        newCompositeNode(grammarAccess.getRealNumberAccess().getNumberParserRuleCall_1()); 
    }
    this_Number_1=ruleNumber    {
		$current.merge(this_Number_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleXExpression
entryRuleXExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXExpressionRule()); }
	 iv_ruleXExpression=ruleXExpression 
	 { $current=$iv_ruleXExpression.current; } 
	 EOF 
;

// Rule XExpression
ruleXExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall()); 
    }
    this_XAssignment_0=ruleXAssignment
    { 
        $current = $this_XAssignment_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleXAssignment
entryRuleXAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAssignmentRule()); }
	 iv_ruleXAssignment=ruleXAssignment 
	 { $current=$iv_ruleXAssignment.current; } 
	 EOF 
;

// Rule XAssignment
ruleXAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAssignmentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
	    }
		ruleFeatureCallID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2()); 
    }
ruleOpSingleAssign
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0()); 
	    }
		lv_value_3_0=ruleXAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAssignmentRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"XAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
    { 
        newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0()); 
    }
    this_XOrExpression_4=ruleXOrExpression
    { 
        $current = $this_XOrExpression_4.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpMultiAssign
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAssignmentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
	    }
		ruleOpMultiAssign		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0()); 
	    }
		lv_rightOperand_7_0=ruleXAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAssignmentRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_7_0, 
        		"XAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))?))
;





// Entry rule entryRuleOpSingleAssign
entryRuleOpSingleAssign returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpSingleAssignRule()); } 
	 iv_ruleOpSingleAssign=ruleOpSingleAssign 
	 { $current=$iv_ruleOpSingleAssign.current.getText(); }  
	 EOF 
;

// Rule OpSingleAssign
ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); 
    }

    ;





// Entry rule entryRuleOpMultiAssign
entryRuleOpMultiAssign returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpMultiAssignRule()); } 
	 iv_ruleOpMultiAssign=ruleOpMultiAssign 
	 { $current=$iv_ruleOpMultiAssign.current.getText(); }  
	 EOF 
;

// Rule OpMultiAssign
ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='+=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0()); 
    }

    |
	kw='-=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleXOrExpression
entryRuleXOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXOrExpressionRule()); }
	 iv_ruleXOrExpression=ruleXOrExpression 
	 { $current=$iv_ruleXOrExpression.current; } 
	 EOF 
;

// Rule XOrExpression
ruleXOrExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0()); 
    }
    this_XAndExpression_0=ruleXAndExpression
    { 
        $current = $this_XAndExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpOr
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXOrExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpOr		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XAndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpOr
entryRuleOpOr returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpOrRule()); } 
	 iv_ruleOpOr=ruleOpOr 
	 { $current=$iv_ruleOpOr.current.getText(); }  
	 EOF 
;

// Rule OpOr
ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='||' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); 
    }

    ;





// Entry rule entryRuleXAndExpression
entryRuleXAndExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAndExpressionRule()); }
	 iv_ruleXAndExpression=ruleXAndExpression 
	 { $current=$iv_ruleXAndExpression.current; } 
	 EOF 
;

// Rule XAndExpression
ruleXAndExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0()); 
    }
    this_XEqualityExpression_0=ruleXEqualityExpression
    { 
        $current = $this_XEqualityExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpAnd
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAndExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpAnd		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXEqualityExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XEqualityExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpAnd
entryRuleOpAnd returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpAndRule()); } 
	 iv_ruleOpAnd=ruleOpAnd 
	 { $current=$iv_ruleOpAnd.current.getText(); }  
	 EOF 
;

// Rule OpAnd
ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='&&' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); 
    }

    ;





// Entry rule entryRuleXEqualityExpression
entryRuleXEqualityExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXEqualityExpressionRule()); }
	 iv_ruleXEqualityExpression=ruleXEqualityExpression 
	 { $current=$iv_ruleXEqualityExpression.current; } 
	 EOF 
;

// Rule XEqualityExpression
ruleXEqualityExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0()); 
    }
    this_XRelationalExpression_0=ruleXRelationalExpression
    { 
        $current = $this_XRelationalExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpEquality
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXEqualityExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpEquality		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXRelationalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XRelationalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpEquality
entryRuleOpEquality returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpEqualityRule()); } 
	 iv_ruleOpEquality=ruleOpEquality 
	 { $current=$iv_ruleOpEquality.current.getText(); }  
	 EOF 
;

// Rule OpEquality
ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); 
    }

    |
	kw='!=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); 
    }

    |
	kw='===' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); 
    }

    |
	kw='!==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleXRelationalExpression
entryRuleXRelationalExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXRelationalExpressionRule()); }
	 iv_ruleXRelationalExpression=ruleXRelationalExpression 
	 { $current=$iv_ruleXRelationalExpression.current; } 
	 EOF 
;

// Rule XRelationalExpression
ruleXRelationalExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0()); 
    }
    this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression
    { 
        $current = $this_XOtherOperatorExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((((
)	'instanceof' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            $current);
    }
)	otherlv_2='instanceof' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0()); 
	    }
		lv_type_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((((
)(
(
		ruleOpCompare
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXRelationalExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
	    }
		ruleOpCompare		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0()); 
	    }
		lv_rightOperand_6_0=ruleXOtherOperatorExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_6_0, 
        		"XOtherOperatorExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;





// Entry rule entryRuleOpCompare
entryRuleOpCompare returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpCompareRule()); } 
	 iv_ruleOpCompare=ruleOpCompare 
	 { $current=$iv_ruleOpCompare.current.getText(); }  
	 EOF 
;

// Rule OpCompare
ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); 
    }

    |
	kw='<=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_1()); 
    }

    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); 
    }

    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleXOtherOperatorExpression
entryRuleXOtherOperatorExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); }
	 iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression 
	 { $current=$iv_ruleXOtherOperatorExpression.current; } 
	 EOF 
;

// Rule XOtherOperatorExpression
ruleXOtherOperatorExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0()); 
    }
    this_XAdditiveExpression_0=ruleXAdditiveExpression
    { 
        $current = $this_XAdditiveExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpOther
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpOther		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XAdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpOther
entryRuleOpOther returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpOtherRule()); } 
	 iv_ruleOpOther=ruleOpOther 
	 { $current=$iv_ruleOpOther.current.getText(); }  
	 EOF 
;

// Rule OpOther
ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='->' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0()); 
    }

    |
	kw='..<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1()); 
    }

    |(
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0()); 
    }

	kw='..' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1()); 
    }
)
    |
	kw='..' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3()); 
    }

    |
	kw='=>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4()); 
    }

    |(
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0()); 
    }
((((
	'>' 

	'>' 
))=>(
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0()); 
    }

	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1()); 
    }
))
    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1()); 
    }
))
    |(
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0()); 
    }
((((
	'<' 

	'<' 
))=>(
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0()); 
    }

	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1()); 
    }
))
    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1()); 
    }
))
    |
	kw='<>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7()); 
    }

    |
	kw='?:' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8()); 
    }

    |
	kw='<=>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_9()); 
    }
)
    ;





// Entry rule entryRuleXAdditiveExpression
entryRuleXAdditiveExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); }
	 iv_ruleXAdditiveExpression=ruleXAdditiveExpression 
	 { $current=$iv_ruleXAdditiveExpression.current; } 
	 EOF 
;

// Rule XAdditiveExpression
ruleXAdditiveExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0()); 
    }
    this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression
    { 
        $current = $this_XMultiplicativeExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpAdd
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpAdd		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXMultiplicativeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XMultiplicativeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpAdd
entryRuleOpAdd returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpAddRule()); } 
	 iv_ruleOpAdd=ruleOpAdd 
	 { $current=$iv_ruleOpAdd.current.getText(); }  
	 EOF 
;

// Rule OpAdd
ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleXMultiplicativeExpression
entryRuleXMultiplicativeExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); }
	 iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression 
	 { $current=$iv_ruleXMultiplicativeExpression.current; } 
	 EOF 
;

// Rule XMultiplicativeExpression
ruleXMultiplicativeExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0()); 
    }
    this_XUnaryOperation_0=ruleXUnaryOperation
    { 
        $current = $this_XUnaryOperation_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpMulti
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpMulti		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXUnaryOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XUnaryOperation");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpMulti
entryRuleOpMulti returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpMultiRule()); } 
	 iv_ruleOpMulti=ruleOpMulti 
	 { $current=$iv_ruleOpMulti.current.getText(); }  
	 EOF 
;

// Rule OpMulti
ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); 
    }

    |
	kw='**' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1()); 
    }

    |
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_2()); 
    }

    |
	kw='%' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleXUnaryOperation
entryRuleXUnaryOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXUnaryOperationRule()); }
	 iv_ruleXUnaryOperation=ruleXUnaryOperation 
	 { $current=$iv_ruleXUnaryOperation.current; } 
	 EOF 
;

// Rule XUnaryOperation
ruleXUnaryOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXUnaryOperationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
	    }
		ruleOpUnary		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0()); 
	    }
		lv_operand_2_0=ruleXUnaryOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_2_0, 
        		"XUnaryOperation");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
    { 
        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1()); 
    }
    this_XCastedExpression_3=ruleXCastedExpression
    { 
        $current = $this_XCastedExpression_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleOpUnary
entryRuleOpUnary returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpUnaryRule()); } 
	 iv_ruleOpUnary=ruleOpUnary 
	 { $current=$iv_ruleOpUnary.current.getText(); }  
	 EOF 
;

// Rule OpUnary
ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='!' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); 
    }

    |
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleXCastedExpression
entryRuleXCastedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXCastedExpressionRule()); }
	 iv_ruleXCastedExpression=ruleXCastedExpression 
	 { $current=$iv_ruleXCastedExpression.current; } 
	 EOF 
;

// Rule XCastedExpression
ruleXCastedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXMemberFeatureCallParserRuleCall_0()); 
    }
    this_XMemberFeatureCall_0=ruleXMemberFeatureCall
    { 
        $current = $this_XMemberFeatureCall_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)	'as' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0()); 
	    }
		lv_type_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleXMemberFeatureCall
entryRuleXMemberFeatureCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); }
	 iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall 
	 { $current=$iv_ruleXMemberFeatureCall.current; } 
	 EOF 
;

// Rule XMemberFeatureCall
ruleXMemberFeatureCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0()); 
    }
    this_XPrimaryExpression_0=ruleXPrimaryExpression
    { 
        $current = $this_XPrimaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((((
)(	'.' 

    |(
(
	'::' 
 

)
))(
(
		ruleFeatureCallID
)
)	ruleOpSingleAssign))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0(),
            $current);
    }
)(	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1_0());
    }

    |(
(
		lv_explicitStatic_3_0=	'::' 
    {
        newLeafNode(lv_explicitStatic_3_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
       		setWithLastConsumed($current, "explicitStatic", true, "::");
	    }

)
))(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0()); 
	    }
		ruleFeatureCallID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3()); 
    }
ruleOpSingleAssign
    { 
        afterParserOrEnumRuleCall();
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0()); 
	    }
		lv_value_6_0=ruleXAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_6_0, 
        		"XAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((((
)(	'.' 

    |(
(
	'?.' 
 

)
)
    |(
(
	'::' 
 

)
))))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0(),
            $current);
    }
)(	otherlv_8='.' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0());
    }

    |(
(
		lv_nullSafe_9_0=	'?.' 
    {
        newLeafNode(lv_nullSafe_9_0, grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
       		setWithLastConsumed($current, "nullSafe", true, "?.");
	    }

)
)
    |(
(
		lv_explicitStatic_10_0=	'::' 
    {
        newLeafNode(lv_explicitStatic_10_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
       		setWithLastConsumed($current, "explicitStatic", true, "::");
	    }

)
))))(	otherlv_11='<' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0()); 
	    }
		lv_typeArguments_12_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_12_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0()); 
	    }
		lv_typeArguments_14_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_14_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_15='>' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0()); 
	    }
		ruleFeatureCallID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
	'(' 
 

)
)=>
(
		lv_explicitOperationCall_17_0=	'(' 
    {
        newLeafNode(lv_explicitOperationCall_17_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
       		setWithLastConsumed($current, "explicitOperationCall", true, "(");
	    }

)
)(((((
)((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0()); 
	    }
		lv_memberCallArguments_18_0=ruleXShortClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_18_0, 
        		"XShortClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0()); 
	    }
		lv_memberCallArguments_19_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_19_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_20=',' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0()); 
	    }
		lv_memberCallArguments_21_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_21_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*))?	otherlv_22=')' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2());
    }
)?((((
)	'[' 
))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0()); 
	    }
		lv_memberCallArguments_23_0=ruleXClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_23_0, 
        		"XClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)?))*)
;





// Entry rule entryRuleXPrimaryExpression
entryRuleXPrimaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); }
	 iv_ruleXPrimaryExpression=ruleXPrimaryExpression 
	 { $current=$iv_ruleXPrimaryExpression.current; } 
	 EOF 
;

// Rule XPrimaryExpression
ruleXPrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0()); 
    }
    this_XConstructorCall_0=ruleXConstructorCall
    { 
        $current = $this_XConstructorCall_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1()); 
    }
    this_XBlockExpression_1=ruleXBlockExpression
    { 
        $current = $this_XBlockExpression_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2()); 
    }
    this_XSwitchExpression_2=ruleXSwitchExpression
    { 
        $current = $this_XSwitchExpression_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_3()); 
    }
    this_XFeatureCall_3=ruleXFeatureCall
    { 
        $current = $this_XFeatureCall_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_4()); 
    }
    this_XLiteral_4=ruleXLiteral
    { 
        $current = $this_XLiteral_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_5()); 
    }
    this_XIfExpression_5=ruleXIfExpression
    { 
        $current = $this_XIfExpression_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_6()); 
    }
    this_XForLoopExpression_6=ruleXForLoopExpression
    { 
        $current = $this_XForLoopExpression_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_7()); 
    }
    this_XWhileExpression_7=ruleXWhileExpression
    { 
        $current = $this_XWhileExpression_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_8()); 
    }
    this_XDoWhileExpression_8=ruleXDoWhileExpression
    { 
        $current = $this_XDoWhileExpression_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_9()); 
    }
    this_XThrowExpression_9=ruleXThrowExpression
    { 
        $current = $this_XThrowExpression_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_10()); 
    }
    this_XReturnExpression_10=ruleXReturnExpression
    { 
        $current = $this_XReturnExpression_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_11()); 
    }
    this_XTryCatchFinallyExpression_11=ruleXTryCatchFinallyExpression
    { 
        $current = $this_XTryCatchFinallyExpression_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_12()); 
    }
    this_XParenthesizedExpression_12=ruleXParenthesizedExpression
    { 
        $current = $this_XParenthesizedExpression_12.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXLiteral
entryRuleXLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXLiteralRule()); }
	 iv_ruleXLiteral=ruleXLiteral 
	 { $current=$iv_ruleXLiteral.current; } 
	 EOF 
;

// Rule XLiteral
ruleXLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0()); 
    }
    this_XCollectionLiteral_0=ruleXCollectionLiteral
    { 
        $current = $this_XCollectionLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((((
)	'[' 
))=>
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1()); 
    }
    this_XClosure_1=ruleXClosure
    { 
        $current = $this_XClosure_1.current; 
        afterParserOrEnumRuleCall();
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2()); 
    }
    this_XBooleanLiteral_2=ruleXBooleanLiteral
    { 
        $current = $this_XBooleanLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3()); 
    }
    this_XNumberLiteral_3=ruleXNumberLiteral
    { 
        $current = $this_XNumberLiteral_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4()); 
    }
    this_XNullLiteral_4=ruleXNullLiteral
    { 
        $current = $this_XNullLiteral_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5()); 
    }
    this_XStringLiteral_5=ruleXStringLiteral
    { 
        $current = $this_XStringLiteral_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6()); 
    }
    this_XTypeLiteral_6=ruleXTypeLiteral
    { 
        $current = $this_XTypeLiteral_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXCollectionLiteral
entryRuleXCollectionLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXCollectionLiteralRule()); }
	 iv_ruleXCollectionLiteral=ruleXCollectionLiteral 
	 { $current=$iv_ruleXCollectionLiteral.current; } 
	 EOF 
;

// Rule XCollectionLiteral
ruleXCollectionLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0()); 
    }
    this_XSetLiteral_0=ruleXSetLiteral
    { 
        $current = $this_XSetLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1()); 
    }
    this_XListLiteral_1=ruleXListLiteral
    { 
        $current = $this_XListLiteral_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXSetLiteral
entryRuleXSetLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXSetLiteralRule()); }
	 iv_ruleXSetLiteral=ruleXSetLiteral 
	 { $current=$iv_ruleXSetLiteral.current; } 
	 EOF 
;

// Rule XSetLiteral
ruleXSetLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0(),
            $current);
    }
)	otherlv_1='#' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); 
	    }
		lv_elements_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); 
	    }
		lv_elements_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleXListLiteral
entryRuleXListLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXListLiteralRule()); }
	 iv_ruleXListLiteral=ruleXListLiteral 
	 { $current=$iv_ruleXListLiteral.current; } 
	 EOF 
;

// Rule XListLiteral
ruleXListLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXListLiteralAccess().getXListLiteralAction_0(),
            $current);
    }
)	otherlv_1='#' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1());
    }
	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); 
	    }
		lv_elements_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXListLiteralRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); 
	    }
		lv_elements_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXListLiteralRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleXClosure
entryRuleXClosure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXClosureRule()); }
	 iv_ruleXClosure=ruleXClosure 
	 { $current=$iv_ruleXClosure.current; } 
	 EOF 
;

// Rule XClosure
ruleXClosure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((
)	'[' 
))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXClosureAccess().getXClosureAction_0_0_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1());
    }
))(((((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>(((
(
		{ 
	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0()); 
	    }
		lv_declaredFormalParameters_2_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_2_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0()); 
	    }
		lv_declaredFormalParameters_4_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_4_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(
(
		lv_explicitSyntax_5_0=	'|' 
    {
        newLeafNode(lv_explicitSyntax_5_0, grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXClosureRule());
	        }
       		setWithLastConsumed($current, "explicitSyntax", true, "|");
	    }

)
)))?(
(
		{ 
	        newCompositeNode(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0()); 
	    }
		lv_expression_6_0=ruleXExpressionInClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXClosureRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_6_0, 
        		"XExpressionInClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleXExpressionInClosure
entryRuleXExpressionInClosure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXExpressionInClosureRule()); }
	 iv_ruleXExpressionInClosure=ruleXExpressionInClosure 
	 { $current=$iv_ruleXExpressionInClosure.current; } 
	 EOF 
;

// Rule XExpressionInClosure
ruleXExpressionInClosure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionInsideBlockParserRuleCall_1_0_0()); 
	    }
		lv_expressions_1_0=ruleXExpressionInsideBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_1_0, 
        		"XExpressionInsideBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
    }
)?)*)
;





// Entry rule entryRuleXShortClosure
entryRuleXShortClosure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXShortClosureRule()); }
	 iv_ruleXShortClosure=ruleXShortClosure 
	 { $current=$iv_ruleXShortClosure.current; } 
	 EOF 
;

// Rule XShortClosure
ruleXShortClosure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((
)((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0()); 
	    }
		lv_declaredFormalParameters_1_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXShortClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_1_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0()); 
	    }
		lv_declaredFormalParameters_3_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXShortClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_3_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(
(
		lv_explicitSyntax_4_0=	'|' 
    {
        newLeafNode(lv_explicitSyntax_4_0, grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXShortClosureRule());
	        }
       		setWithLastConsumed($current, "explicitSyntax", true, "|");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0()); 
	    }
		lv_expression_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXShortClosureRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXParenthesizedExpression
entryRuleXParenthesizedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); }
	 iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression 
	 { $current=$iv_ruleXParenthesizedExpression.current; } 
	 EOF 
;

// Rule XParenthesizedExpression
ruleXParenthesizedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1()); 
    }
    this_XExpression_1=ruleXExpression
    { 
        $current = $this_XExpression_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleXIfExpression
entryRuleXIfExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXIfExpressionRule()); }
	 iv_ruleXIfExpression=ruleXIfExpression 
	 { $current=$iv_ruleXIfExpression.current; } 
	 EOF 
;

// Rule XIfExpression
ruleXIfExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
            $current);
    }
)	otherlv_1='if' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0()); 
	    }
		lv_if_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
	        }
       		set(
       			$current, 
       			"if",
        		lv_if_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0()); 
	    }
		lv_then_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'else' 
)=>	otherlv_6='else' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0()); 
	    }
		lv_else_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
	        }
       		set(
       			$current, 
       			"else",
        		lv_else_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleXSwitchExpression
entryRuleXSwitchExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXSwitchExpressionRule()); }
	 iv_ruleXSwitchExpression=ruleXSwitchExpression 
	 { $current=$iv_ruleXSwitchExpression.current; } 
	 EOF 
;

// Rule XSwitchExpression
ruleXSwitchExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
            $current);
    }
)	otherlv_1='switch' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
    }
((((((
(
ruleValidID
)
)	':' 
))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameValidIDParserRuleCall_2_0_0_0_0_0()); 
	    }
		lv_localVarName_2_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"localVarName",
        		lv_localVarName_2_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_1());
    }
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0()); 
	    }
		lv_switch_4_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"switch",
        		lv_switch_4_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((((	'(' 
(
(
ruleValidID
)
)	':' 
))=>(	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_1_0_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameValidIDParserRuleCall_2_1_0_0_1_0()); 
	    }
		lv_localVarName_6_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"localVarName",
        		lv_localVarName_6_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_2());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0()); 
	    }
		lv_switch_8_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"switch",
        		lv_switch_8_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_1_2());
    }
))	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0()); 
	    }
		lv_cases_11_0=ruleXCasePart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		add(
       			$current, 
       			"cases",
        		lv_cases_11_0, 
        		"XCasePart");
	        afterParserOrEnumRuleCall();
	    }

)
)+(	otherlv_12='default' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0());
    }
	otherlv_13=':' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0()); 
	    }
		lv_default_14_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"default",
        		lv_default_14_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleXCasePart
entryRuleXCasePart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXCasePartRule()); }
	 iv_ruleXCasePart=ruleXCasePart 
	 { $current=$iv_ruleXCasePart.current; } 
	 EOF 
;

// Rule XCasePart
ruleXCasePart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_0_0()); 
	    }
		lv_typeGuard_0_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCasePartRule());
	        }
       		set(
       			$current, 
       			"typeGuard",
        		lv_typeGuard_0_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_1='case' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXCasePartAccess().getCaseKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_1_1_0()); 
	    }
		lv_case_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCasePartRule());
	        }
       		set(
       			$current, 
       			"case",
        		lv_case_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXCasePartAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0()); 
	    }
		lv_then_4_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCasePartRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_4_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXForLoopExpression
entryRuleXForLoopExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXForLoopExpressionRule()); }
	 iv_ruleXForLoopExpression=ruleXForLoopExpression 
	 { $current=$iv_ruleXForLoopExpression.current; } 
	 EOF 
;

// Rule XForLoopExpression
ruleXForLoopExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0(),
            $current);
    }
)	otherlv_1='for' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_3_0()); 
	    }
		lv_declaredParam_3_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
	        }
       		set(
       			$current, 
       			"declaredParam",
        		lv_declaredParam_3_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_5_0()); 
	    }
		lv_forExpression_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
	        }
       		set(
       			$current, 
       			"forExpression",
        		lv_forExpression_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_7_0()); 
	    }
		lv_eachExpression_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
	        }
       		set(
       			$current, 
       			"eachExpression",
        		lv_eachExpression_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXWhileExpression
entryRuleXWhileExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXWhileExpressionRule()); }
	 iv_ruleXWhileExpression=ruleXWhileExpression 
	 { $current=$iv_ruleXWhileExpression.current; } 
	 EOF 
;

// Rule XWhileExpression
ruleXWhileExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
            $current);
    }
)	otherlv_1='while' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0()); 
	    }
		lv_predicate_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0()); 
	    }
		lv_body_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXDoWhileExpression
entryRuleXDoWhileExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); }
	 iv_ruleXDoWhileExpression=ruleXDoWhileExpression 
	 { $current=$iv_ruleXDoWhileExpression.current; } 
	 EOF 
;

// Rule XDoWhileExpression
ruleXDoWhileExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
            $current);
    }
)	otherlv_1='do' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0()); 
	    }
		lv_body_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='while' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
    }
	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0()); 
	    }
		lv_predicate_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleXBlockExpression
entryRuleXBlockExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBlockExpressionRule()); }
	 iv_ruleXBlockExpression=ruleXBlockExpression 
	 { $current=$iv_ruleXBlockExpression.current; } 
	 EOF 
;

// Rule XBlockExpression
ruleXBlockExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionInsideBlockParserRuleCall_2_0_0()); 
	    }
		lv_expressions_2_0=ruleXExpressionInsideBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_2_0, 
        		"XExpressionInsideBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1());
    }
)?)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleXExpressionInsideBlock
entryRuleXExpressionInsideBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXExpressionInsideBlockRule()); }
	 iv_ruleXExpressionInsideBlock=ruleXExpressionInsideBlock 
	 { $current=$iv_ruleXExpressionInsideBlock.current; } 
	 EOF 
;

// Rule XExpressionInsideBlock
ruleXExpressionInsideBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXExpressionInsideBlockAccess().getXVariableDeclarationParserRuleCall_0()); 
    }
    this_XVariableDeclaration_0=ruleXVariableDeclaration
    { 
        $current = $this_XVariableDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXExpressionInsideBlockAccess().getXExpressionParserRuleCall_1()); 
    }
    this_XExpression_1=ruleXExpression
    { 
        $current = $this_XExpression_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXVariableDeclaration
entryRuleXVariableDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXVariableDeclarationRule()); }
	 iv_ruleXVariableDeclaration=ruleXVariableDeclaration 
	 { $current=$iv_ruleXVariableDeclaration.current; } 
	 EOF 
;

// Rule XVariableDeclaration
ruleXVariableDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0(),
            $current);
    }
)((
(
		lv_writeable_1_0=	'var' 
    {
        newLeafNode(lv_writeable_1_0, grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXVariableDeclarationRule());
	        }
       		setWithLastConsumed($current, "writeable", true, "var");
	    }

)
)
    |	otherlv_2='val' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1());
    }
)(((((
(
ruleJvmTypeReference
)
)(
(
ruleValidID
)
)))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0()); 
	    }
		lv_type_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0()); 
	    }
		lv_name_4_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0()); 
	    }
		lv_name_5_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0()); 
	    }
		lv_right_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleJvmFormalParameter
entryRuleJvmFormalParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmFormalParameterRule()); }
	 iv_ruleJvmFormalParameter=ruleJvmFormalParameter 
	 { $current=$iv_ruleJvmFormalParameter.current; } 
	 EOF 
;

// Rule JvmFormalParameter
ruleJvmFormalParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
	    }
		lv_parameterType_0_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"parameterType",
        		lv_parameterType_0_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFullJvmFormalParameter
entryRuleFullJvmFormalParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); }
	 iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter 
	 { $current=$iv_ruleFullJvmFormalParameter.current; } 
	 EOF 
;

// Rule FullJvmFormalParameter
ruleFullJvmFormalParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
	    }
		lv_parameterType_0_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"parameterType",
        		lv_parameterType_0_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXFeatureCall
entryRuleXFeatureCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXFeatureCallRule()); }
	 iv_ruleXFeatureCall=ruleXFeatureCall 
	 { $current=$iv_ruleXFeatureCall.current; } 
	 EOF 
;

// Rule XFeatureCall
ruleXFeatureCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
            $current);
    }
)(	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
	    }
		lv_typeArguments_2_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_2_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
	    }
		lv_typeArguments_4_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_4_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_1_3());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXFeatureCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_2_0()); 
	    }
		ruleIdOrSuper		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
	'(' 
 

)
)=>
(
		lv_explicitOperationCall_7_0=	'(' 
    {
        newLeafNode(lv_explicitOperationCall_7_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXFeatureCallRule());
	        }
       		setWithLastConsumed($current, "explicitOperationCall", true, "(");
	    }

)
)(((((
)((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0()); 
	    }
		lv_featureCallArguments_8_0=ruleXShortClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_8_0, 
        		"XShortClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0()); 
	    }
		lv_featureCallArguments_9_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_9_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getXFeatureCallAccess().getCommaKeyword_3_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0()); 
	    }
		lv_featureCallArguments_11_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_11_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*))?	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_3_2());
    }
)?((((
)	'[' 
))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_4_0()); 
	    }
		lv_featureCallArguments_13_0=ruleXClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_13_0, 
        		"XClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleFeatureCallID
entryRuleFeatureCallID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureCallIDRule()); } 
	 iv_ruleFeatureCallID=ruleFeatureCallID 
	 { $current=$iv_ruleFeatureCallID.current.getText(); }  
	 EOF 
;

// Rule FeatureCallID
ruleFeatureCallID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0()); 
    }
    this_ValidID_0=ruleValidID    {
		$current.merge(this_ValidID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
	kw='extends' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1()); 
    }

    |
	kw='static' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2()); 
    }

    |
	kw='import' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getImportKeyword_3()); 
    }

    |
	kw='extension' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleIdOrSuper
entryRuleIdOrSuper returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdOrSuperRule()); } 
	 iv_ruleIdOrSuper=ruleIdOrSuper 
	 { $current=$iv_ruleIdOrSuper.current.getText(); }  
	 EOF 
;

// Rule IdOrSuper
ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0()); 
    }
    this_FeatureCallID_0=ruleFeatureCallID    {
		$current.merge(this_FeatureCallID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
	kw='super' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleXConstructorCall
entryRuleXConstructorCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXConstructorCallRule()); }
	 iv_ruleXConstructorCall=ruleXConstructorCall 
	 { $current=$iv_ruleXConstructorCall.current; } 
	 EOF 
;

// Rule XConstructorCall
ruleXConstructorCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0(),
            $current);
    }
)	otherlv_1='new' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXConstructorCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'<' 
)=>	otherlv_3='<' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0()); 
	    }
		lv_typeArguments_4_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_4_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0()); 
	    }
		lv_typeArguments_6_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_6_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='>' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3());
    }
)?(((	'(' 
)=>	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXConstructorCallAccess().getLeftParenthesisKeyword_4_0());
    }
)(((((
)((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0()); 
	    }
		lv_arguments_9_0=ruleXShortClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_9_0, 
        		"XShortClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0()); 
	    }
		lv_arguments_10_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_10_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); 
	    }
		lv_arguments_12_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_12_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*))?	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
    }
)?((((
)	'[' 
))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0()); 
	    }
		lv_arguments_14_0=ruleXClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_14_0, 
        		"XClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleXBooleanLiteral
entryRuleXBooleanLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBooleanLiteralRule()); }
	 iv_ruleXBooleanLiteral=ruleXBooleanLiteral 
	 { $current=$iv_ruleXBooleanLiteral.current; } 
	 EOF 
;

// Rule XBooleanLiteral
ruleXBooleanLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
            $current);
    }
)(	otherlv_1='false' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
    }

    |(
(
		lv_isTrue_2_0=	'true' 
    {
        newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXBooleanLiteralRule());
	        }
       		setWithLastConsumed($current, "isTrue", true, "true");
	    }

)
)))
;





// Entry rule entryRuleXNullLiteral
entryRuleXNullLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXNullLiteralRule()); }
	 iv_ruleXNullLiteral=ruleXNullLiteral 
	 { $current=$iv_ruleXNullLiteral.current; } 
	 EOF 
;

// Rule XNullLiteral
ruleXNullLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
            $current);
    }
)	otherlv_1='null' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
    }
)
;





// Entry rule entryRuleXNumberLiteral
entryRuleXNumberLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXNumberLiteralRule()); }
	 iv_ruleXNumberLiteral=ruleXNumberLiteral 
	 { $current=$iv_ruleXNumberLiteral.current; } 
	 EOF 
;

// Rule XNumberLiteral
ruleXNumberLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"Number");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXStringLiteral
entryRuleXStringLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXStringLiteralRule()); }
	 iv_ruleXStringLiteral=ruleXStringLiteral 
	 { $current=$iv_ruleXStringLiteral.current; } 
	 EOF 
;

// Rule XStringLiteral
ruleXStringLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXStringLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleXTypeLiteral
entryRuleXTypeLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXTypeLiteralRule()); }
	 iv_ruleXTypeLiteral=ruleXTypeLiteral 
	 { $current=$iv_ruleXTypeLiteral.current; } 
	 EOF 
;

// Rule XTypeLiteral
ruleXTypeLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0(),
            $current);
    }
)	otherlv_1='typeof' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXTypeLiteralRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0()); 
	    }
		lv_arrayDimensions_4_0=ruleArrayBrackets		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTypeLiteralRule());
	        }
       		add(
       			$current, 
       			"arrayDimensions",
        		lv_arrayDimensions_4_0, 
        		"ArrayBrackets");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleXThrowExpression
entryRuleXThrowExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXThrowExpressionRule()); }
	 iv_ruleXThrowExpression=ruleXThrowExpression 
	 { $current=$iv_ruleXThrowExpression.current; } 
	 EOF 
;

// Rule XThrowExpression
ruleXThrowExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
            $current);
    }
)	otherlv_1='throw' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXReturnExpression
entryRuleXReturnExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXReturnExpressionRule()); }
	 iv_ruleXReturnExpression=ruleXReturnExpression 
	 { $current=$iv_ruleXReturnExpression.current; } 
	 EOF 
;

// Rule XReturnExpression
ruleXReturnExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
            $current);
    }
)	otherlv_1='return' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
    }
((
(
ruleXExpression
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleXTryCatchFinallyExpression
entryRuleXTryCatchFinallyExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); }
	 iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression 
	 { $current=$iv_ruleXTryCatchFinallyExpression.current; } 
	 EOF 
;

// Rule XTryCatchFinallyExpression
ruleXTryCatchFinallyExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
            $current);
    }
)	otherlv_1='try' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)((((	'catch' 
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0()); 
	    }
		lv_catchClauses_3_0=ruleXCatchClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
	        }
       		add(
       			$current, 
       			"catchClauses",
        		lv_catchClauses_3_0, 
        		"XCatchClause");
	        afterParserOrEnumRuleCall();
	    }

)
)+(((	'finally' 
)=>	otherlv_4='finally' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0()); 
	    }
		lv_finallyExpression_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
	        }
       		set(
       			$current, 
       			"finallyExpression",
        		lv_finallyExpression_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(	otherlv_6='finally' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0()); 
	    }
		lv_finallyExpression_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
	        }
       		set(
       			$current, 
       			"finallyExpression",
        		lv_finallyExpression_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleXCatchClause
entryRuleXCatchClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXCatchClauseRule()); }
	 iv_ruleXCatchClause=ruleXCatchClause 
	 { $current=$iv_ruleXCatchClause.current; } 
	 EOF 
;

// Rule XCatchClause
ruleXCatchClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	'catch' 
)=>	otherlv_0='catch' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXCatchClauseAccess().getCatchKeyword_0());
    }
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0()); 
	    }
		lv_declaredParam_2_0=ruleFullJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
	        }
       		set(
       			$current, 
       			"declaredParam",
        		lv_declaredParam_2_0, 
        		"FullJvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0()); 
	    }
		lv_expression_4_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_4_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); 
    }
    this_ValidID_0=ruleValidID    {
		$current.merge(this_ValidID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(((
	'.' 
)=>
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
)
    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); 
    }
    this_ValidID_2=ruleValidID    {
		$current.merge(this_ValidID_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRuleNumber
entryRuleNumber returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getNumberRule()); } 
	 iv_ruleNumber=ruleNumber 
	 { $current=$iv_ruleNumber.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Number
ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(    this_HEX_0=RULE_HEX    {
		$current.merge(this_HEX_0);
    }

    { 
    newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); 
    }

    |((    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); 
    }

    |    this_DECIMAL_2=RULE_DECIMAL    {
		$current.merge(this_DECIMAL_2);
    }

    { 
    newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); 
    }
)(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); 
    }
(    this_INT_4=RULE_INT    {
		$current.merge(this_INT_4);
    }

    { 
    newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); 
    }

    |    this_DECIMAL_5=RULE_DECIMAL    {
		$current.merge(this_DECIMAL_5);
    }

    { 
    newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); 
    }
))?))
    ;
finally {
	myHiddenTokenState.restore();
}







// Entry rule entryRuleJvmTypeReference
entryRuleJvmTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); }
	 iv_ruleJvmTypeReference=ruleJvmTypeReference 
	 { $current=$iv_ruleJvmTypeReference.current; } 
	 EOF 
;

// Rule JvmTypeReference
ruleJvmTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0()); 
    }
    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference
    { 
        $current = $this_JvmParameterizedTypeReference_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
)	ruleArrayBrackets))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
            $current);
    }
)
    { 
        newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1()); 
    }
ruleArrayBrackets
    { 
        afterParserOrEnumRuleCall();
    }
))*)
    |
    { 
        newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1()); 
    }
    this_XFunctionTypeRef_3=ruleXFunctionTypeRef
    { 
        $current = $this_XFunctionTypeRef_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleArrayBrackets
entryRuleArrayBrackets returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrayBracketsRule()); } 
	 iv_ruleArrayBrackets=ruleArrayBrackets 
	 { $current=$iv_ruleArrayBrackets.current.getText(); }  
	 EOF 
;

// Rule ArrayBrackets
ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='[' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0()); 
    }

	kw=']' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleXFunctionTypeRef
entryRuleXFunctionTypeRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXFunctionTypeRefRule()); }
	 iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef 
	 { $current=$iv_ruleXFunctionTypeRef.current; } 
	 EOF 
;

// Rule XFunctionTypeRef
ruleXFunctionTypeRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0()); 
	    }
		lv_paramTypes_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
	        }
       		add(
       			$current, 
       			"paramTypes",
        		lv_paramTypes_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0()); 
	    }
		lv_paramTypes_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
	        }
       		add(
       			$current, 
       			"paramTypes",
        		lv_paramTypes_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2());
    }
)?	otherlv_5='=>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0()); 
	    }
		lv_returnType_6_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
	        }
       		set(
       			$current, 
       			"returnType",
        		lv_returnType_6_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJvmParameterizedTypeReference
entryRuleJvmParameterizedTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); }
	 iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference 
	 { $current=$iv_ruleJvmParameterizedTypeReference.current; } 
	 EOF 
;

// Rule JvmParameterizedTypeReference
ruleJvmParameterizedTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'<' 
)=>	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
	    }
		lv_arguments_2_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_2_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
	    }
		lv_arguments_4_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_4_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
    }
)?)
;





// Entry rule entryRuleJvmArgumentTypeReference
entryRuleJvmArgumentTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); }
	 iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference 
	 { $current=$iv_ruleJvmArgumentTypeReference.current; } 
	 EOF 
;

// Rule JvmArgumentTypeReference
ruleJvmArgumentTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0()); 
    }
    this_JvmTypeReference_0=ruleJvmTypeReference
    { 
        $current = $this_JvmTypeReference_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1()); 
    }
    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference
    { 
        $current = $this_JvmWildcardTypeReference_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleJvmWildcardTypeReference
entryRuleJvmWildcardTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); }
	 iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference 
	 { $current=$iv_ruleJvmWildcardTypeReference.current; } 
	 EOF 
;

// Rule JvmWildcardTypeReference
ruleJvmWildcardTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
            $current);
    }
)	otherlv_1='?' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0()); 
	    }
		lv_constraints_2_0=ruleJvmUpperBound		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_2_0, 
        		"JvmUpperBound");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0()); 
	    }
		lv_constraints_3_0=ruleJvmLowerBound		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_3_0, 
        		"JvmLowerBound");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleJvmUpperBound
entryRuleJvmUpperBound returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmUpperBoundRule()); }
	 iv_ruleJvmUpperBound=ruleJvmUpperBound 
	 { $current=$iv_ruleJvmUpperBound.current; } 
	 EOF 
;

// Rule JvmUpperBound
ruleJvmUpperBound returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='extends' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeReference_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJvmUpperBoundAnded
entryRuleJvmUpperBoundAnded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); }
	 iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded 
	 { $current=$iv_ruleJvmUpperBoundAnded.current; } 
	 EOF 
;

// Rule JvmUpperBoundAnded
ruleJvmUpperBoundAnded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='&' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeReference_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJvmLowerBound
entryRuleJvmLowerBound returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmLowerBoundRule()); }
	 iv_ruleJvmLowerBound=ruleJvmLowerBound 
	 { $current=$iv_ruleJvmLowerBound.current; } 
	 EOF 
;

// Rule JvmLowerBound
ruleJvmLowerBound returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='super' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeReference_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;







// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard 
	 { $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1()); 
    }

	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleValidID
entryRuleValidID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getValidIDRule()); } 
	 iv_ruleValidID=ruleValidID 
	 { $current=$iv_ruleValidID.current.getText(); }  
	 EOF 
;

// Rule ValidID
ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); 
    }

    ;







// Entry rule entryRuleXImportDeclaration
entryRuleXImportDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXImportDeclarationRule()); }
	 iv_ruleXImportDeclaration=ruleXImportDeclaration 
	 { $current=$iv_ruleXImportDeclaration.current; } 
	 EOF 
;

// Rule XImportDeclaration
ruleXImportDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXImportDeclarationAccess().getImportKeyword_0());
    }
(((
(
		lv_static_1_0=	'static' 
    {
        newLeafNode(lv_static_1_0, grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXImportDeclarationRule());
	        }
       		setWithLastConsumed($current, "static", true, "static");
	    }

)
)(
(
		lv_extension_2_0=	'extension' 
    {
        newLeafNode(lv_extension_2_0, grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXImportDeclarationRule());
	        }
       		setWithLastConsumed($current, "extension", true, "extension");
	    }

)
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXImportDeclarationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='.' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXImportDeclarationAccess().getFullStopKeyword_1_0_3());
    }
	otherlv_5='*' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXImportDeclarationAccess().getAsteriskKeyword_1_0_4());
    }
)
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXImportDeclarationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0()); 
	    }
		lv_importedNamespace_7_0=ruleQualifiedNameWithWildcard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_7_0, 
        		"QualifiedNameWithWildcard");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2());
    }
)?)
;





// Rule AccessType
ruleAccessType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='write' 
	{
        $current = grammarAccess.getAccessTypeAccess().getWriteEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getAccessTypeAccess().getWriteEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='read' 
	{
        $current = grammarAccess.getAccessTypeAccess().getReadEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getAccessTypeAccess().getReadEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='internal' 
	{
        $current = grammarAccess.getAccessTypeAccess().getInternalEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getAccessTypeAccess().getInternalEnumLiteralDeclaration_2()); 
    }
));



// Rule SimpleType
ruleSimpleType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='string' 
	{
        $current = grammarAccess.getSimpleTypeAccess().getStringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getSimpleTypeAccess().getStringEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='int' 
	{
        $current = grammarAccess.getSimpleTypeAccess().getIntEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getSimpleTypeAccess().getIntEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='double' 
	{
        $current = grammarAccess.getSimpleTypeAccess().getDoubleEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getSimpleTypeAccess().getDoubleEnumLiteralDeclaration_2()); 
    }
));



// Rule Font
ruleFont returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Arial' 
	{
        $current = grammarAccess.getFontAccess().getArialEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getFontAccess().getArialEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Arial_Black' 
	{
        $current = grammarAccess.getFontAccess().getArialblackEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getFontAccess().getArialblackEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Comic_Sans_MS' 
	{
        $current = grammarAccess.getFontAccess().getComicsansmsEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getFontAccess().getComicsansmsEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Courier_New' 
	{
        $current = grammarAccess.getFontAccess().getCouriernewEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getFontAccess().getCouriernewEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='Georgia' 
	{
        $current = grammarAccess.getFontAccess().getGeorgiaEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getFontAccess().getGeorgiaEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='Impact' 
	{
        $current = grammarAccess.getFontAccess().getImpactEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getFontAccess().getImpactEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='Lucida_Console' 
	{
        $current = grammarAccess.getFontAccess().getLucidaconsoleEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getFontAccess().getLucidaconsoleEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='Lucida_Sans_Unicode' 
	{
        $current = grammarAccess.getFontAccess().getLucidasansunicodeEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getFontAccess().getLucidasansunicodeEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='Palatino_Linotype' 
	{
        $current = grammarAccess.getFontAccess().getPalatinolinotypeEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getFontAccess().getPalatinolinotypeEnumLiteralDeclaration_8()); 
    }
)
    |(	enumLiteral_9='Tahoma' 
	{
        $current = grammarAccess.getFontAccess().getTahomaEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getFontAccess().getTahomaEnumLiteralDeclaration_9()); 
    }
)
    |(	enumLiteral_10='Times_New_Roman' 
	{
        $current = grammarAccess.getFontAccess().getTimesnewromanEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_10, grammarAccess.getFontAccess().getTimesnewromanEnumLiteralDeclaration_10()); 
    }
)
    |(	enumLiteral_11='Trebuchet_MS' 
	{
        $current = grammarAccess.getFontAccess().getTrebuchetmsEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_11, grammarAccess.getFontAccess().getTrebuchetmsEnumLiteralDeclaration_11()); 
    }
)
    |(	enumLiteral_12='Verdana' 
	{
        $current = grammarAccess.getFontAccess().getVerdanaEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_12, grammarAccess.getFontAccess().getVerdanaEnumLiteralDeclaration_12()); 
    }
)
    |(	enumLiteral_13='Symbol' 
	{
        $current = grammarAccess.getFontAccess().getSymbolEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_13, grammarAccess.getFontAccess().getSymbolEnumLiteralDeclaration_13()); 
    }
)
    |(	enumLiteral_14='Webdings' 
	{
        $current = grammarAccess.getFontAccess().getWebdingsEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_14, grammarAccess.getFontAccess().getWebdingsEnumLiteralDeclaration_14()); 
    }
)
    |(	enumLiteral_15='Wingdings' 
	{
        $current = grammarAccess.getFontAccess().getWindingsEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_15, grammarAccess.getFontAccess().getWindingsEnumLiteralDeclaration_15()); 
    }
)
    |(	enumLiteral_16='MS_Sans_Serif' 
	{
        $current = grammarAccess.getFontAccess().getMssansserifEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_16, grammarAccess.getFontAccess().getMssansserifEnumLiteralDeclaration_16()); 
    }
)
    |(	enumLiteral_17='MS_Serif' 
	{
        $current = grammarAccess.getFontAccess().getMsserifEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_17, grammarAccess.getFontAccess().getMsserifEnumLiteralDeclaration_17()); 
    }
));



// Rule Color
ruleColor returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='aliceblue' 
	{
        $current = grammarAccess.getColorAccess().getAliceblueEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getColorAccess().getAliceblueEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='antiquewhite' 
	{
        $current = grammarAccess.getColorAccess().getAntiquewhiteEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getColorAccess().getAntiquewhiteEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='aqua' 
	{
        $current = grammarAccess.getColorAccess().getAquaEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getColorAccess().getAquaEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='aquamarine' 
	{
        $current = grammarAccess.getColorAccess().getAquamarineEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getColorAccess().getAquamarineEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='azure' 
	{
        $current = grammarAccess.getColorAccess().getAzureEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getColorAccess().getAzureEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='beige' 
	{
        $current = grammarAccess.getColorAccess().getBeigeEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getColorAccess().getBeigeEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='bisque' 
	{
        $current = grammarAccess.getColorAccess().getBisqueEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getColorAccess().getBisqueEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='black' 
	{
        $current = grammarAccess.getColorAccess().getBlackEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getColorAccess().getBlackEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='blanchedalmond' 
	{
        $current = grammarAccess.getColorAccess().getBlanchedalmondEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getColorAccess().getBlanchedalmondEnumLiteralDeclaration_8()); 
    }
)
    |(	enumLiteral_9='blue' 
	{
        $current = grammarAccess.getColorAccess().getBlueEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getColorAccess().getBlueEnumLiteralDeclaration_9()); 
    }
)
    |(	enumLiteral_10='blueviolet' 
	{
        $current = grammarAccess.getColorAccess().getBluevioletEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_10, grammarAccess.getColorAccess().getBluevioletEnumLiteralDeclaration_10()); 
    }
)
    |(	enumLiteral_11='brown' 
	{
        $current = grammarAccess.getColorAccess().getBrownEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_11, grammarAccess.getColorAccess().getBrownEnumLiteralDeclaration_11()); 
    }
)
    |(	enumLiteral_12='burlywood' 
	{
        $current = grammarAccess.getColorAccess().getBurlywoodEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_12, grammarAccess.getColorAccess().getBurlywoodEnumLiteralDeclaration_12()); 
    }
)
    |(	enumLiteral_13='cadetblue' 
	{
        $current = grammarAccess.getColorAccess().getCadetblueEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_13, grammarAccess.getColorAccess().getCadetblueEnumLiteralDeclaration_13()); 
    }
)
    |(	enumLiteral_14='chartreuse' 
	{
        $current = grammarAccess.getColorAccess().getChartreuseEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_14, grammarAccess.getColorAccess().getChartreuseEnumLiteralDeclaration_14()); 
    }
)
    |(	enumLiteral_15='chocolate' 
	{
        $current = grammarAccess.getColorAccess().getChocolateEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_15, grammarAccess.getColorAccess().getChocolateEnumLiteralDeclaration_15()); 
    }
)
    |(	enumLiteral_16='coral' 
	{
        $current = grammarAccess.getColorAccess().getCoralEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_16, grammarAccess.getColorAccess().getCoralEnumLiteralDeclaration_16()); 
    }
)
    |(	enumLiteral_17='cornflowerblue' 
	{
        $current = grammarAccess.getColorAccess().getCornflowerblueEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_17, grammarAccess.getColorAccess().getCornflowerblueEnumLiteralDeclaration_17()); 
    }
)
    |(	enumLiteral_18='cornsilk' 
	{
        $current = grammarAccess.getColorAccess().getCornsilkEnumLiteralDeclaration_18().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_18, grammarAccess.getColorAccess().getCornsilkEnumLiteralDeclaration_18()); 
    }
)
    |(	enumLiteral_19='crimson' 
	{
        $current = grammarAccess.getColorAccess().getCrimsonEnumLiteralDeclaration_19().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_19, grammarAccess.getColorAccess().getCrimsonEnumLiteralDeclaration_19()); 
    }
)
    |(	enumLiteral_20='cyan' 
	{
        $current = grammarAccess.getColorAccess().getCyanEnumLiteralDeclaration_20().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_20, grammarAccess.getColorAccess().getCyanEnumLiteralDeclaration_20()); 
    }
)
    |(	enumLiteral_21='darkblue' 
	{
        $current = grammarAccess.getColorAccess().getDarkblueEnumLiteralDeclaration_21().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_21, grammarAccess.getColorAccess().getDarkblueEnumLiteralDeclaration_21()); 
    }
)
    |(	enumLiteral_22='darkcyan' 
	{
        $current = grammarAccess.getColorAccess().getDarkcyanEnumLiteralDeclaration_22().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_22, grammarAccess.getColorAccess().getDarkcyanEnumLiteralDeclaration_22()); 
    }
)
    |(	enumLiteral_23='darkgoldenrod' 
	{
        $current = grammarAccess.getColorAccess().getDarkgoldenrodEnumLiteralDeclaration_23().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_23, grammarAccess.getColorAccess().getDarkgoldenrodEnumLiteralDeclaration_23()); 
    }
)
    |(	enumLiteral_24='darkgray' 
	{
        $current = grammarAccess.getColorAccess().getDarkgrayEnumLiteralDeclaration_24().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_24, grammarAccess.getColorAccess().getDarkgrayEnumLiteralDeclaration_24()); 
    }
)
    |(	enumLiteral_25='darkgreen' 
	{
        $current = grammarAccess.getColorAccess().getDarkgreenEnumLiteralDeclaration_25().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_25, grammarAccess.getColorAccess().getDarkgreenEnumLiteralDeclaration_25()); 
    }
)
    |(	enumLiteral_26='darkkhaki' 
	{
        $current = grammarAccess.getColorAccess().getDarkkhakiEnumLiteralDeclaration_26().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_26, grammarAccess.getColorAccess().getDarkkhakiEnumLiteralDeclaration_26()); 
    }
)
    |(	enumLiteral_27='darkmagenta' 
	{
        $current = grammarAccess.getColorAccess().getDarkmagentaEnumLiteralDeclaration_27().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_27, grammarAccess.getColorAccess().getDarkmagentaEnumLiteralDeclaration_27()); 
    }
)
    |(	enumLiteral_28='darkolivegreen' 
	{
        $current = grammarAccess.getColorAccess().getDarkolivegreenEnumLiteralDeclaration_28().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_28, grammarAccess.getColorAccess().getDarkolivegreenEnumLiteralDeclaration_28()); 
    }
)
    |(	enumLiteral_29='darkorange' 
	{
        $current = grammarAccess.getColorAccess().getDarkorangeEnumLiteralDeclaration_29().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_29, grammarAccess.getColorAccess().getDarkorangeEnumLiteralDeclaration_29()); 
    }
)
    |(	enumLiteral_30='darkorchid' 
	{
        $current = grammarAccess.getColorAccess().getDarkorchidEnumLiteralDeclaration_30().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_30, grammarAccess.getColorAccess().getDarkorchidEnumLiteralDeclaration_30()); 
    }
)
    |(	enumLiteral_31='darkred' 
	{
        $current = grammarAccess.getColorAccess().getDarkredEnumLiteralDeclaration_31().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_31, grammarAccess.getColorAccess().getDarkredEnumLiteralDeclaration_31()); 
    }
)
    |(	enumLiteral_32='darksalmon' 
	{
        $current = grammarAccess.getColorAccess().getDarksalmonEnumLiteralDeclaration_32().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_32, grammarAccess.getColorAccess().getDarksalmonEnumLiteralDeclaration_32()); 
    }
)
    |(	enumLiteral_33='darkseagreen' 
	{
        $current = grammarAccess.getColorAccess().getDarkseagreenEnumLiteralDeclaration_33().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_33, grammarAccess.getColorAccess().getDarkseagreenEnumLiteralDeclaration_33()); 
    }
)
    |(	enumLiteral_34='darkslateblue' 
	{
        $current = grammarAccess.getColorAccess().getDarkslateblueEnumLiteralDeclaration_34().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_34, grammarAccess.getColorAccess().getDarkslateblueEnumLiteralDeclaration_34()); 
    }
)
    |(	enumLiteral_35='darkslategray' 
	{
        $current = grammarAccess.getColorAccess().getDarkslategrayEnumLiteralDeclaration_35().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_35, grammarAccess.getColorAccess().getDarkslategrayEnumLiteralDeclaration_35()); 
    }
)
    |(	enumLiteral_36='darkturquoise' 
	{
        $current = grammarAccess.getColorAccess().getDarkturquoiseEnumLiteralDeclaration_36().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_36, grammarAccess.getColorAccess().getDarkturquoiseEnumLiteralDeclaration_36()); 
    }
)
    |(	enumLiteral_37='darkviolet' 
	{
        $current = grammarAccess.getColorAccess().getDarkvioletEnumLiteralDeclaration_37().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_37, grammarAccess.getColorAccess().getDarkvioletEnumLiteralDeclaration_37()); 
    }
)
    |(	enumLiteral_38='deeppink' 
	{
        $current = grammarAccess.getColorAccess().getDeeppinkEnumLiteralDeclaration_38().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_38, grammarAccess.getColorAccess().getDeeppinkEnumLiteralDeclaration_38()); 
    }
)
    |(	enumLiteral_39='deepskyblue' 
	{
        $current = grammarAccess.getColorAccess().getDeepskyblueEnumLiteralDeclaration_39().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_39, grammarAccess.getColorAccess().getDeepskyblueEnumLiteralDeclaration_39()); 
    }
)
    |(	enumLiteral_40='dimgray' 
	{
        $current = grammarAccess.getColorAccess().getDimgrayEnumLiteralDeclaration_40().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_40, grammarAccess.getColorAccess().getDimgrayEnumLiteralDeclaration_40()); 
    }
)
    |(	enumLiteral_41='dodgerblue' 
	{
        $current = grammarAccess.getColorAccess().getDodgerblueEnumLiteralDeclaration_41().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_41, grammarAccess.getColorAccess().getDodgerblueEnumLiteralDeclaration_41()); 
    }
)
    |(	enumLiteral_42='firebrick' 
	{
        $current = grammarAccess.getColorAccess().getFirebrickEnumLiteralDeclaration_42().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_42, grammarAccess.getColorAccess().getFirebrickEnumLiteralDeclaration_42()); 
    }
)
    |(	enumLiteral_43='floralwhite' 
	{
        $current = grammarAccess.getColorAccess().getFloralwhiteEnumLiteralDeclaration_43().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_43, grammarAccess.getColorAccess().getFloralwhiteEnumLiteralDeclaration_43()); 
    }
)
    |(	enumLiteral_44='forestgreen' 
	{
        $current = grammarAccess.getColorAccess().getForestgreenEnumLiteralDeclaration_44().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_44, grammarAccess.getColorAccess().getForestgreenEnumLiteralDeclaration_44()); 
    }
)
    |(	enumLiteral_45='fuchsia' 
	{
        $current = grammarAccess.getColorAccess().getFuchsiaEnumLiteralDeclaration_45().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_45, grammarAccess.getColorAccess().getFuchsiaEnumLiteralDeclaration_45()); 
    }
)
    |(	enumLiteral_46='gainsboro' 
	{
        $current = grammarAccess.getColorAccess().getGainsboroEnumLiteralDeclaration_46().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_46, grammarAccess.getColorAccess().getGainsboroEnumLiteralDeclaration_46()); 
    }
)
    |(	enumLiteral_47='ghostwhite' 
	{
        $current = grammarAccess.getColorAccess().getGhostwhiteEnumLiteralDeclaration_47().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_47, grammarAccess.getColorAccess().getGhostwhiteEnumLiteralDeclaration_47()); 
    }
)
    |(	enumLiteral_48='gold' 
	{
        $current = grammarAccess.getColorAccess().getGoldEnumLiteralDeclaration_48().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_48, grammarAccess.getColorAccess().getGoldEnumLiteralDeclaration_48()); 
    }
)
    |(	enumLiteral_49='goldenrod' 
	{
        $current = grammarAccess.getColorAccess().getGoldenrodEnumLiteralDeclaration_49().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_49, grammarAccess.getColorAccess().getGoldenrodEnumLiteralDeclaration_49()); 
    }
)
    |(	enumLiteral_50='gray' 
	{
        $current = grammarAccess.getColorAccess().getGrayEnumLiteralDeclaration_50().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_50, grammarAccess.getColorAccess().getGrayEnumLiteralDeclaration_50()); 
    }
)
    |(	enumLiteral_51='green' 
	{
        $current = grammarAccess.getColorAccess().getGreenEnumLiteralDeclaration_51().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_51, grammarAccess.getColorAccess().getGreenEnumLiteralDeclaration_51()); 
    }
)
    |(	enumLiteral_52='greenyellow' 
	{
        $current = grammarAccess.getColorAccess().getGreenyellowEnumLiteralDeclaration_52().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_52, grammarAccess.getColorAccess().getGreenyellowEnumLiteralDeclaration_52()); 
    }
)
    |(	enumLiteral_53='honeydew' 
	{
        $current = grammarAccess.getColorAccess().getHoneydewEnumLiteralDeclaration_53().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_53, grammarAccess.getColorAccess().getHoneydewEnumLiteralDeclaration_53()); 
    }
)
    |(	enumLiteral_54='hotpink' 
	{
        $current = grammarAccess.getColorAccess().getHotpinkEnumLiteralDeclaration_54().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_54, grammarAccess.getColorAccess().getHotpinkEnumLiteralDeclaration_54()); 
    }
)
    |(	enumLiteral_55='indianred' 
	{
        $current = grammarAccess.getColorAccess().getIndianredEnumLiteralDeclaration_55().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_55, grammarAccess.getColorAccess().getIndianredEnumLiteralDeclaration_55()); 
    }
)
    |(	enumLiteral_56='indigo' 
	{
        $current = grammarAccess.getColorAccess().getIndigoEnumLiteralDeclaration_56().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_56, grammarAccess.getColorAccess().getIndigoEnumLiteralDeclaration_56()); 
    }
)
    |(	enumLiteral_57='ivory' 
	{
        $current = grammarAccess.getColorAccess().getIvoryEnumLiteralDeclaration_57().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_57, grammarAccess.getColorAccess().getIvoryEnumLiteralDeclaration_57()); 
    }
)
    |(	enumLiteral_58='khaki' 
	{
        $current = grammarAccess.getColorAccess().getKhakiEnumLiteralDeclaration_58().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_58, grammarAccess.getColorAccess().getKhakiEnumLiteralDeclaration_58()); 
    }
)
    |(	enumLiteral_59='lavender' 
	{
        $current = grammarAccess.getColorAccess().getLavenderEnumLiteralDeclaration_59().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_59, grammarAccess.getColorAccess().getLavenderEnumLiteralDeclaration_59()); 
    }
)
    |(	enumLiteral_60='lavenderblush' 
	{
        $current = grammarAccess.getColorAccess().getLavenderblushEnumLiteralDeclaration_60().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_60, grammarAccess.getColorAccess().getLavenderblushEnumLiteralDeclaration_60()); 
    }
)
    |(	enumLiteral_61='lawngreen' 
	{
        $current = grammarAccess.getColorAccess().getLawngreenEnumLiteralDeclaration_61().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_61, grammarAccess.getColorAccess().getLawngreenEnumLiteralDeclaration_61()); 
    }
)
    |(	enumLiteral_62='lemonchiffon' 
	{
        $current = grammarAccess.getColorAccess().getLemonchiffonEnumLiteralDeclaration_62().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_62, grammarAccess.getColorAccess().getLemonchiffonEnumLiteralDeclaration_62()); 
    }
)
    |(	enumLiteral_63='lightblue' 
	{
        $current = grammarAccess.getColorAccess().getLightblueEnumLiteralDeclaration_63().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_63, grammarAccess.getColorAccess().getLightblueEnumLiteralDeclaration_63()); 
    }
)
    |(	enumLiteral_64='lightcoral' 
	{
        $current = grammarAccess.getColorAccess().getLightcoralEnumLiteralDeclaration_64().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_64, grammarAccess.getColorAccess().getLightcoralEnumLiteralDeclaration_64()); 
    }
)
    |(	enumLiteral_65='lightcyan' 
	{
        $current = grammarAccess.getColorAccess().getLightcyanEnumLiteralDeclaration_65().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_65, grammarAccess.getColorAccess().getLightcyanEnumLiteralDeclaration_65()); 
    }
)
    |(	enumLiteral_66='lightgoldenrodyellow' 
	{
        $current = grammarAccess.getColorAccess().getLightgoldenrodyellowEnumLiteralDeclaration_66().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_66, grammarAccess.getColorAccess().getLightgoldenrodyellowEnumLiteralDeclaration_66()); 
    }
)
    |(	enumLiteral_67='lightgreen' 
	{
        $current = grammarAccess.getColorAccess().getLightgreenEnumLiteralDeclaration_67().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_67, grammarAccess.getColorAccess().getLightgreenEnumLiteralDeclaration_67()); 
    }
)
    |(	enumLiteral_68='lightgray' 
	{
        $current = grammarAccess.getColorAccess().getLightgrayEnumLiteralDeclaration_68().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_68, grammarAccess.getColorAccess().getLightgrayEnumLiteralDeclaration_68()); 
    }
)
    |(	enumLiteral_69='lightmagenta' 
	{
        $current = grammarAccess.getColorAccess().getLightmagentaEnumLiteralDeclaration_69().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_69, grammarAccess.getColorAccess().getLightmagentaEnumLiteralDeclaration_69()); 
    }
)
    |(	enumLiteral_70='lightpink' 
	{
        $current = grammarAccess.getColorAccess().getLightpinkEnumLiteralDeclaration_70().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_70, grammarAccess.getColorAccess().getLightpinkEnumLiteralDeclaration_70()); 
    }
)
    |(	enumLiteral_71='lightsalmon' 
	{
        $current = grammarAccess.getColorAccess().getLightsalmonEnumLiteralDeclaration_71().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_71, grammarAccess.getColorAccess().getLightsalmonEnumLiteralDeclaration_71()); 
    }
)
    |(	enumLiteral_72='lightseagreen' 
	{
        $current = grammarAccess.getColorAccess().getLightseagreenEnumLiteralDeclaration_72().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_72, grammarAccess.getColorAccess().getLightseagreenEnumLiteralDeclaration_72()); 
    }
)
    |(	enumLiteral_73='lightskyblue' 
	{
        $current = grammarAccess.getColorAccess().getLightskyblueEnumLiteralDeclaration_73().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_73, grammarAccess.getColorAccess().getLightskyblueEnumLiteralDeclaration_73()); 
    }
)
    |(	enumLiteral_74='lightslategray' 
	{
        $current = grammarAccess.getColorAccess().getLightslategrayEnumLiteralDeclaration_74().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_74, grammarAccess.getColorAccess().getLightslategrayEnumLiteralDeclaration_74()); 
    }
)
    |(	enumLiteral_75='lightsteelblue' 
	{
        $current = grammarAccess.getColorAccess().getLightsteelblueEnumLiteralDeclaration_75().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_75, grammarAccess.getColorAccess().getLightsteelblueEnumLiteralDeclaration_75()); 
    }
)
    |(	enumLiteral_76='lightyellow' 
	{
        $current = grammarAccess.getColorAccess().getLightyellowEnumLiteralDeclaration_76().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_76, grammarAccess.getColorAccess().getLightyellowEnumLiteralDeclaration_76()); 
    }
)
    |(	enumLiteral_77='lime' 
	{
        $current = grammarAccess.getColorAccess().getLimeEnumLiteralDeclaration_77().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_77, grammarAccess.getColorAccess().getLimeEnumLiteralDeclaration_77()); 
    }
)
    |(	enumLiteral_78='limegreen' 
	{
        $current = grammarAccess.getColorAccess().getLimegreenEnumLiteralDeclaration_78().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_78, grammarAccess.getColorAccess().getLimegreenEnumLiteralDeclaration_78()); 
    }
)
    |(	enumLiteral_79='linen' 
	{
        $current = grammarAccess.getColorAccess().getLinenEnumLiteralDeclaration_79().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_79, grammarAccess.getColorAccess().getLinenEnumLiteralDeclaration_79()); 
    }
)
    |(	enumLiteral_80='magenta' 
	{
        $current = grammarAccess.getColorAccess().getMagentaEnumLiteralDeclaration_80().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_80, grammarAccess.getColorAccess().getMagentaEnumLiteralDeclaration_80()); 
    }
)
    |(	enumLiteral_81='maroon' 
	{
        $current = grammarAccess.getColorAccess().getMaroonEnumLiteralDeclaration_81().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_81, grammarAccess.getColorAccess().getMaroonEnumLiteralDeclaration_81()); 
    }
)
    |(	enumLiteral_82='mediumaquamarine' 
	{
        $current = grammarAccess.getColorAccess().getMediumaquamarineEnumLiteralDeclaration_82().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_82, grammarAccess.getColorAccess().getMediumaquamarineEnumLiteralDeclaration_82()); 
    }
)
    |(	enumLiteral_83='mediumblue' 
	{
        $current = grammarAccess.getColorAccess().getMediumblueEnumLiteralDeclaration_83().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_83, grammarAccess.getColorAccess().getMediumblueEnumLiteralDeclaration_83()); 
    }
)
    |(	enumLiteral_84='mediumorchid' 
	{
        $current = grammarAccess.getColorAccess().getMediumorchidEnumLiteralDeclaration_84().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_84, grammarAccess.getColorAccess().getMediumorchidEnumLiteralDeclaration_84()); 
    }
)
    |(	enumLiteral_85='mediumpurple' 
	{
        $current = grammarAccess.getColorAccess().getMediumpurpleEnumLiteralDeclaration_85().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_85, grammarAccess.getColorAccess().getMediumpurpleEnumLiteralDeclaration_85()); 
    }
)
    |(	enumLiteral_86='mediumseagreen' 
	{
        $current = grammarAccess.getColorAccess().getMediumseagreenEnumLiteralDeclaration_86().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_86, grammarAccess.getColorAccess().getMediumseagreenEnumLiteralDeclaration_86()); 
    }
)
    |(	enumLiteral_87='mediumslateblue' 
	{
        $current = grammarAccess.getColorAccess().getMediumslateblueEnumLiteralDeclaration_87().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_87, grammarAccess.getColorAccess().getMediumslateblueEnumLiteralDeclaration_87()); 
    }
)
    |(	enumLiteral_88='mediumspringgreen' 
	{
        $current = grammarAccess.getColorAccess().getMediumspringgreenEnumLiteralDeclaration_88().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_88, grammarAccess.getColorAccess().getMediumspringgreenEnumLiteralDeclaration_88()); 
    }
)
    |(	enumLiteral_89='mediumturquoise' 
	{
        $current = grammarAccess.getColorAccess().getMediumturquoiseEnumLiteralDeclaration_89().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_89, grammarAccess.getColorAccess().getMediumturquoiseEnumLiteralDeclaration_89()); 
    }
)
    |(	enumLiteral_90='mediumvioletred' 
	{
        $current = grammarAccess.getColorAccess().getMediumvioletredEnumLiteralDeclaration_90().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_90, grammarAccess.getColorAccess().getMediumvioletredEnumLiteralDeclaration_90()); 
    }
)
    |(	enumLiteral_91='midnightblue' 
	{
        $current = grammarAccess.getColorAccess().getMidnightblueEnumLiteralDeclaration_91().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_91, grammarAccess.getColorAccess().getMidnightblueEnumLiteralDeclaration_91()); 
    }
)
    |(	enumLiteral_92='mintcream' 
	{
        $current = grammarAccess.getColorAccess().getMintcreamEnumLiteralDeclaration_92().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_92, grammarAccess.getColorAccess().getMintcreamEnumLiteralDeclaration_92()); 
    }
)
    |(	enumLiteral_93='mistyrose' 
	{
        $current = grammarAccess.getColorAccess().getMistyroseEnumLiteralDeclaration_93().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_93, grammarAccess.getColorAccess().getMistyroseEnumLiteralDeclaration_93()); 
    }
)
    |(	enumLiteral_94='moccasin' 
	{
        $current = grammarAccess.getColorAccess().getMoccasinEnumLiteralDeclaration_94().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_94, grammarAccess.getColorAccess().getMoccasinEnumLiteralDeclaration_94()); 
    }
)
    |(	enumLiteral_95='navajowhite' 
	{
        $current = grammarAccess.getColorAccess().getNavajowhiteEnumLiteralDeclaration_95().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_95, grammarAccess.getColorAccess().getNavajowhiteEnumLiteralDeclaration_95()); 
    }
)
    |(	enumLiteral_96='navy' 
	{
        $current = grammarAccess.getColorAccess().getNavyEnumLiteralDeclaration_96().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_96, grammarAccess.getColorAccess().getNavyEnumLiteralDeclaration_96()); 
    }
)
    |(	enumLiteral_97='oldlace' 
	{
        $current = grammarAccess.getColorAccess().getOldlaceEnumLiteralDeclaration_97().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_97, grammarAccess.getColorAccess().getOldlaceEnumLiteralDeclaration_97()); 
    }
)
    |(	enumLiteral_98='olive' 
	{
        $current = grammarAccess.getColorAccess().getOliveEnumLiteralDeclaration_98().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_98, grammarAccess.getColorAccess().getOliveEnumLiteralDeclaration_98()); 
    }
)
    |(	enumLiteral_99='olivedrab' 
	{
        $current = grammarAccess.getColorAccess().getOlivedrabEnumLiteralDeclaration_99().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_99, grammarAccess.getColorAccess().getOlivedrabEnumLiteralDeclaration_99()); 
    }
)
    |(	enumLiteral_100='orange' 
	{
        $current = grammarAccess.getColorAccess().getOrangeEnumLiteralDeclaration_100().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_100, grammarAccess.getColorAccess().getOrangeEnumLiteralDeclaration_100()); 
    }
)
    |(	enumLiteral_101='orangered' 
	{
        $current = grammarAccess.getColorAccess().getOrangeredEnumLiteralDeclaration_101().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_101, grammarAccess.getColorAccess().getOrangeredEnumLiteralDeclaration_101()); 
    }
)
    |(	enumLiteral_102='orchid' 
	{
        $current = grammarAccess.getColorAccess().getOrchidEnumLiteralDeclaration_102().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_102, grammarAccess.getColorAccess().getOrchidEnumLiteralDeclaration_102()); 
    }
)
    |(	enumLiteral_103='palegoldenrod' 
	{
        $current = grammarAccess.getColorAccess().getPalegoldenrodEnumLiteralDeclaration_103().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_103, grammarAccess.getColorAccess().getPalegoldenrodEnumLiteralDeclaration_103()); 
    }
)
    |(	enumLiteral_104='palegreen' 
	{
        $current = grammarAccess.getColorAccess().getPalegreenEnumLiteralDeclaration_104().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_104, grammarAccess.getColorAccess().getPalegreenEnumLiteralDeclaration_104()); 
    }
)
    |(	enumLiteral_105='paleturquoise' 
	{
        $current = grammarAccess.getColorAccess().getPaleturquoiseEnumLiteralDeclaration_105().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_105, grammarAccess.getColorAccess().getPaleturquoiseEnumLiteralDeclaration_105()); 
    }
)
    |(	enumLiteral_106='palevioletred' 
	{
        $current = grammarAccess.getColorAccess().getPalevioletredEnumLiteralDeclaration_106().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_106, grammarAccess.getColorAccess().getPalevioletredEnumLiteralDeclaration_106()); 
    }
)
    |(	enumLiteral_107='papayawhip' 
	{
        $current = grammarAccess.getColorAccess().getPapayawhipEnumLiteralDeclaration_107().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_107, grammarAccess.getColorAccess().getPapayawhipEnumLiteralDeclaration_107()); 
    }
)
    |(	enumLiteral_108='peachpuff' 
	{
        $current = grammarAccess.getColorAccess().getPeachpuffEnumLiteralDeclaration_108().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_108, grammarAccess.getColorAccess().getPeachpuffEnumLiteralDeclaration_108()); 
    }
)
    |(	enumLiteral_109='peru' 
	{
        $current = grammarAccess.getColorAccess().getPeruEnumLiteralDeclaration_109().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_109, grammarAccess.getColorAccess().getPeruEnumLiteralDeclaration_109()); 
    }
)
    |(	enumLiteral_110='pink' 
	{
        $current = grammarAccess.getColorAccess().getPinkEnumLiteralDeclaration_110().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_110, grammarAccess.getColorAccess().getPinkEnumLiteralDeclaration_110()); 
    }
)
    |(	enumLiteral_111='plum' 
	{
        $current = grammarAccess.getColorAccess().getPlumEnumLiteralDeclaration_111().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_111, grammarAccess.getColorAccess().getPlumEnumLiteralDeclaration_111()); 
    }
)
    |(	enumLiteral_112='powderblue' 
	{
        $current = grammarAccess.getColorAccess().getPowderblueEnumLiteralDeclaration_112().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_112, grammarAccess.getColorAccess().getPowderblueEnumLiteralDeclaration_112()); 
    }
)
    |(	enumLiteral_113='purple' 
	{
        $current = grammarAccess.getColorAccess().getPurpleEnumLiteralDeclaration_113().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_113, grammarAccess.getColorAccess().getPurpleEnumLiteralDeclaration_113()); 
    }
)
    |(	enumLiteral_114='red' 
	{
        $current = grammarAccess.getColorAccess().getRedEnumLiteralDeclaration_114().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_114, grammarAccess.getColorAccess().getRedEnumLiteralDeclaration_114()); 
    }
)
    |(	enumLiteral_115='rosybrown' 
	{
        $current = grammarAccess.getColorAccess().getRosybrownEnumLiteralDeclaration_115().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_115, grammarAccess.getColorAccess().getRosybrownEnumLiteralDeclaration_115()); 
    }
)
    |(	enumLiteral_116='royalblue' 
	{
        $current = grammarAccess.getColorAccess().getRoyalblueEnumLiteralDeclaration_116().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_116, grammarAccess.getColorAccess().getRoyalblueEnumLiteralDeclaration_116()); 
    }
)
    |(	enumLiteral_117='saddlebrown' 
	{
        $current = grammarAccess.getColorAccess().getSaddlebrownEnumLiteralDeclaration_117().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_117, grammarAccess.getColorAccess().getSaddlebrownEnumLiteralDeclaration_117()); 
    }
)
    |(	enumLiteral_118='salmon' 
	{
        $current = grammarAccess.getColorAccess().getSalmonEnumLiteralDeclaration_118().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_118, grammarAccess.getColorAccess().getSalmonEnumLiteralDeclaration_118()); 
    }
)
    |(	enumLiteral_119='sandybrown' 
	{
        $current = grammarAccess.getColorAccess().getSandybrownEnumLiteralDeclaration_119().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_119, grammarAccess.getColorAccess().getSandybrownEnumLiteralDeclaration_119()); 
    }
)
    |(	enumLiteral_120='seagreen' 
	{
        $current = grammarAccess.getColorAccess().getSeagreenEnumLiteralDeclaration_120().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_120, grammarAccess.getColorAccess().getSeagreenEnumLiteralDeclaration_120()); 
    }
)
    |(	enumLiteral_121='seashell' 
	{
        $current = grammarAccess.getColorAccess().getSeashellEnumLiteralDeclaration_121().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_121, grammarAccess.getColorAccess().getSeashellEnumLiteralDeclaration_121()); 
    }
)
    |(	enumLiteral_122='sienna' 
	{
        $current = grammarAccess.getColorAccess().getSiennaEnumLiteralDeclaration_122().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_122, grammarAccess.getColorAccess().getSiennaEnumLiteralDeclaration_122()); 
    }
)
    |(	enumLiteral_123='silver' 
	{
        $current = grammarAccess.getColorAccess().getSilverEnumLiteralDeclaration_123().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_123, grammarAccess.getColorAccess().getSilverEnumLiteralDeclaration_123()); 
    }
)
    |(	enumLiteral_124='skyblue' 
	{
        $current = grammarAccess.getColorAccess().getSkyblueEnumLiteralDeclaration_124().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_124, grammarAccess.getColorAccess().getSkyblueEnumLiteralDeclaration_124()); 
    }
)
    |(	enumLiteral_125='slateblue' 
	{
        $current = grammarAccess.getColorAccess().getSlateblueEnumLiteralDeclaration_125().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_125, grammarAccess.getColorAccess().getSlateblueEnumLiteralDeclaration_125()); 
    }
)
    |(	enumLiteral_126='slategray' 
	{
        $current = grammarAccess.getColorAccess().getSlategrayEnumLiteralDeclaration_126().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_126, grammarAccess.getColorAccess().getSlategrayEnumLiteralDeclaration_126()); 
    }
)
    |(	enumLiteral_127='snow' 
	{
        $current = grammarAccess.getColorAccess().getSnowEnumLiteralDeclaration_127().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_127, grammarAccess.getColorAccess().getSnowEnumLiteralDeclaration_127()); 
    }
)
    |(	enumLiteral_128='springgreen' 
	{
        $current = grammarAccess.getColorAccess().getSpringgreenEnumLiteralDeclaration_128().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_128, grammarAccess.getColorAccess().getSpringgreenEnumLiteralDeclaration_128()); 
    }
)
    |(	enumLiteral_129='steelblue' 
	{
        $current = grammarAccess.getColorAccess().getSteelblueEnumLiteralDeclaration_129().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_129, grammarAccess.getColorAccess().getSteelblueEnumLiteralDeclaration_129()); 
    }
)
    |(	enumLiteral_130='tan' 
	{
        $current = grammarAccess.getColorAccess().getTanEnumLiteralDeclaration_130().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_130, grammarAccess.getColorAccess().getTanEnumLiteralDeclaration_130()); 
    }
)
    |(	enumLiteral_131='teal' 
	{
        $current = grammarAccess.getColorAccess().getTealEnumLiteralDeclaration_131().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_131, grammarAccess.getColorAccess().getTealEnumLiteralDeclaration_131()); 
    }
)
    |(	enumLiteral_132='thistle' 
	{
        $current = grammarAccess.getColorAccess().getThistleEnumLiteralDeclaration_132().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_132, grammarAccess.getColorAccess().getThistleEnumLiteralDeclaration_132()); 
    }
)
    |(	enumLiteral_133='tomato' 
	{
        $current = grammarAccess.getColorAccess().getTomatoEnumLiteralDeclaration_133().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_133, grammarAccess.getColorAccess().getTomatoEnumLiteralDeclaration_133()); 
    }
)
    |(	enumLiteral_134='turquoise' 
	{
        $current = grammarAccess.getColorAccess().getTurquoiseEnumLiteralDeclaration_134().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_134, grammarAccess.getColorAccess().getTurquoiseEnumLiteralDeclaration_134()); 
    }
)
    |(	enumLiteral_135='violet' 
	{
        $current = grammarAccess.getColorAccess().getVioletEnumLiteralDeclaration_135().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_135, grammarAccess.getColorAccess().getVioletEnumLiteralDeclaration_135()); 
    }
)
    |(	enumLiteral_136='wheat' 
	{
        $current = grammarAccess.getColorAccess().getWheatEnumLiteralDeclaration_136().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_136, grammarAccess.getColorAccess().getWheatEnumLiteralDeclaration_136()); 
    }
)
    |(	enumLiteral_137='white' 
	{
        $current = grammarAccess.getColorAccess().getWhiteEnumLiteralDeclaration_137().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_137, grammarAccess.getColorAccess().getWhiteEnumLiteralDeclaration_137()); 
    }
)
    |(	enumLiteral_138='whitesmoke' 
	{
        $current = grammarAccess.getColorAccess().getWhitesmokeEnumLiteralDeclaration_138().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_138, grammarAccess.getColorAccess().getWhitesmokeEnumLiteralDeclaration_138()); 
    }
)
    |(	enumLiteral_139='yellow' 
	{
        $current = grammarAccess.getColorAccess().getYellowEnumLiteralDeclaration_139().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_139, grammarAccess.getColorAccess().getYellowEnumLiteralDeclaration_139()); 
    }
)
    |(	enumLiteral_140='yellowgreen' 
	{
        $current = grammarAccess.getColorAccess().getYellowgreenEnumLiteralDeclaration_140().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_140, grammarAccess.getColorAccess().getYellowgreenEnumLiteralDeclaration_140()); 
    }
));



// Rule ButtonType
ruleButtonType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='ok' 
	{
        $current = grammarAccess.getButtonTypeAccess().getOkEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getButtonTypeAccess().getOkEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='ok-cancel' 
	{
        $current = grammarAccess.getButtonTypeAccess().getOkcancelEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getButtonTypeAccess().getOkcancelEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='yes-no' 
	{
        $current = grammarAccess.getButtonTypeAccess().getYesnoEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getButtonTypeAccess().getYesnoEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='yes-no-cancel' 
	{
        $current = grammarAccess.getButtonTypeAccess().getYesnocancelEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getButtonTypeAccess().getYesnocancelEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='retry-cancel' 
	{
        $current = grammarAccess.getButtonTypeAccess().getRetrycancelEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getButtonTypeAccess().getRetrycancelEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='def-ok' 
	{
        $current = grammarAccess.getButtonTypeAccess().getDefokEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getButtonTypeAccess().getDefokEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='def-cancel' 
	{
        $current = grammarAccess.getButtonTypeAccess().getDefcancelEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getButtonTypeAccess().getDefcancelEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='def-yes' 
	{
        $current = grammarAccess.getButtonTypeAccess().getDefyesEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getButtonTypeAccess().getDefyesEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='def-no' 
	{
        $current = grammarAccess.getButtonTypeAccess().getDefnoEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getButtonTypeAccess().getDefnoEnumLiteralDeclaration_8()); 
    }
)
    |(	enumLiteral_9='def-retry' 
	{
        $current = grammarAccess.getButtonTypeAccess().getDefretryEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getButtonTypeAccess().getDefretryEnumLiteralDeclaration_9()); 
    }
));



// Rule AttrGetParams
ruleAttrGetParams returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='type' 
	{
        $current = grammarAccess.getAttrGetParamsAccess().getTypeEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getAttrGetParamsAccess().getTypeEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='value' 
	{
        $current = grammarAccess.getAttrGetParamsAccess().getValueEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getAttrGetParamsAccess().getValueEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='name' 
	{
        $current = grammarAccess.getAttrGetParamsAccess().getNameEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getAttrGetParamsAccess().getNameEnumLiteralDeclaration_2()); 
    }
));



// Rule AttrSetParams
ruleAttrSetParams returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
(	enumLiteral_0='value' 
	{
        $current = grammarAccess.getAttrSetParamsAccess().getValueEnumLiteralDeclaration().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getAttrSetParamsAccess().getValueEnumLiteralDeclaration()); 
    }
);



// Rule EventName
ruleEventName returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='BeforeCreateModel' 
	{
        $current = grammarAccess.getEventNameAccess().getBeforecreatemodelEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getEventNameAccess().getBeforecreatemodelEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='BeforeCreateRelationInstance' 
	{
        $current = grammarAccess.getEventNameAccess().getBeforecreaterelationinstanceEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getEventNameAccess().getBeforecreaterelationinstanceEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='BeforeDeleteInstance' 
	{
        $current = grammarAccess.getEventNameAccess().getBeforedeleteinstanceEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getEventNameAccess().getBeforedeleteinstanceEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='BeforeDeleteModel' 
	{
        $current = grammarAccess.getEventNameAccess().getBeforedeletemodelEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getEventNameAccess().getBeforedeletemodelEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='BeforeDiscardModel' 
	{
        $current = grammarAccess.getEventNameAccess().getBeforediscardmodelEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getEventNameAccess().getBeforediscardmodelEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='BeforeSaveModel' 
	{
        $current = grammarAccess.getEventNameAccess().getBeforesavemodelEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getEventNameAccess().getBeforesavemodelEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='CreateInstance' 
	{
        $current = grammarAccess.getEventNameAccess().getCreateinstanceEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getEventNameAccess().getCreateinstanceEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='CreateModel' 
	{
        $current = grammarAccess.getEventNameAccess().getCreatemodelEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getEventNameAccess().getCreatemodelEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='CreateRelationInstance' 
	{
        $current = grammarAccess.getEventNameAccess().getCreaterelationinstanceEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getEventNameAccess().getCreaterelationinstanceEnumLiteralDeclaration_8()); 
    }
)
    |(	enumLiteral_9='DeleteInstance' 
	{
        $current = grammarAccess.getEventNameAccess().getDeleteinstanceEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getEventNameAccess().getDeleteinstanceEnumLiteralDeclaration_9()); 
    }
)
    |(	enumLiteral_10='DeleteModel' 
	{
        $current = grammarAccess.getEventNameAccess().getDeletemodelEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_10, grammarAccess.getEventNameAccess().getDeletemodelEnumLiteralDeclaration_10()); 
    }
)
    |(	enumLiteral_11='DeleteRelationInstance' 
	{
        $current = grammarAccess.getEventNameAccess().getDeleterelationinstanceEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_11, grammarAccess.getEventNameAccess().getDeleterelationinstanceEnumLiteralDeclaration_11()); 
    }
)
    |(	enumLiteral_12='DiscardInstance' 
	{
        $current = grammarAccess.getEventNameAccess().getDiscardinstanceEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_12, grammarAccess.getEventNameAccess().getDiscardinstanceEnumLiteralDeclaration_12()); 
    }
)
    |(	enumLiteral_13='DiscardModel' 
	{
        $current = grammarAccess.getEventNameAccess().getDiscardmodelEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_13, grammarAccess.getEventNameAccess().getDiscardmodelEnumLiteralDeclaration_13()); 
    }
)
    |(	enumLiteral_14='OpenModel' 
	{
        $current = grammarAccess.getEventNameAccess().getOpenmodelEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_14, grammarAccess.getEventNameAccess().getOpenmodelEnumLiteralDeclaration_14()); 
    }
)
    |(	enumLiteral_15='RenameInstance' 
	{
        $current = grammarAccess.getEventNameAccess().getRenameinstanceEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_15, grammarAccess.getEventNameAccess().getRenameinstanceEnumLiteralDeclaration_15()); 
    }
)
    |(	enumLiteral_16='SaveModel' 
	{
        $current = grammarAccess.getEventNameAccess().getSavemodelEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_16, grammarAccess.getEventNameAccess().getSavemodelEnumLiteralDeclaration_16()); 
    }
)
    |(	enumLiteral_17='SetAttributeValue' 
	{
        $current = grammarAccess.getEventNameAccess().getSetattributevalueEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_17, grammarAccess.getEventNameAccess().getSetattributevalueEnumLiteralDeclaration_17()); 
    }
)
    |(	enumLiteral_18='AfterCreateModelingConnector' 
	{
        $current = grammarAccess.getEventNameAccess().getAftercreatemodelingconnectorEnumLiteralDeclaration_18().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_18, grammarAccess.getEventNameAccess().getAftercreatemodelingconnectorEnumLiteralDeclaration_18()); 
    }
)
    |(	enumLiteral_19='AfterCreateModelingNode' 
	{
        $current = grammarAccess.getEventNameAccess().getAftercreatemodelingnodeEnumLiteralDeclaration_19().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_19, grammarAccess.getEventNameAccess().getAftercreatemodelingnodeEnumLiteralDeclaration_19()); 
    }
)
    |(	enumLiteral_20='AfterEditAttributeValue' 
	{
        $current = grammarAccess.getEventNameAccess().getAftereditattributevalueEnumLiteralDeclaration_20().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_20, grammarAccess.getEventNameAccess().getAftereditattributevalueEnumLiteralDeclaration_20()); 
    }
)
    |(	enumLiteral_21='ToolInitialized' 
	{
        $current = grammarAccess.getEventNameAccess().getToolinitializedEnumLiteralDeclaration_21().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_21, grammarAccess.getEventNameAccess().getToolinitializedEnumLiteralDeclaration_21()); 
    }
));



RULE_HEXCOLOR : '#' ('a'..'f'|'A'..'F'|'0'..'9') ('a'..'f'|'A'..'F'|'0'..'9') ('a'..'f'|'A'..'F'|'0'..'9') ('a'..'f'|'A'..'F'|'0'..'9') ('a'..'f'|'A'..'F'|'0'..'9') ('a'..'f'|'A'..'F'|'0'..'9');

RULE_HEX : ('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F'|'_')+ ('#' (('b'|'B') ('i'|'I')|('l'|'L')))?;

RULE_INT : '0'..'9' ('0'..'9'|'_')*;

RULE_DECIMAL : RULE_INT (('e'|'E') ('+'|'-')? RULE_INT)? (('b'|'B') ('i'|'I'|'d'|'D')|('l'|'L'|'d'|'D'|'f'|'F'))?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'$'|'_') ('a'..'z'|'A'..'Z'|'$'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


